<?xml version="1.0" encoding="UTF-8"?>
<tree type="Call Tree" threadSelection="All thread groups" threadStatus="Runnable" aggregationLevel="Methods">
  <node leaf="false" class="java.util.concurrent.ThreadPoolExecutor$Worker" methodName="run" methodSignature="()V" time="136367" count="2" selfTime="14" lineNumber="-1" percent="57.7">
    <node leaf="false" class="jason.environment.Environment$1" methodName="run" methodSignature="()V" time="133632" count="1" selfTime="62" lineNumber="-1" percent="56.5">
      <node leaf="false" class="NavigatorGridWorld" methodName="executeAction" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Structure;)Z" time="133487" count="1" selfTime="145" lineNumber="-1" percent="56.5">
        <node leaf="false" class="NavigatorGridWorld" methodName="updatePercepts" methodSignature="()V" time="129520" count="1" selfTime="80" lineNumber="-1" percent="54.8">
          <node leaf="false" class="jason.environment.Environment" methodName="addPercept" methodSignature="([Ljason/asSyntax/Literal;)V" time="101220" count="8" selfTime="15" lineNumber="-1" percent="42.8">
            <node leaf="false" class="java.util.List" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="101181" count="8" selfTime="41" lineNumber="-1" percent="42.8">
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="101140" count="28" selfTime="23" lineNumber="-1" percent="42.8">
                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="101117" count="56" selfTime="28444" lineNumber="-1" percent="42.8">
                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="72573" count="56" selfTime="72573" lineNumber="-1" percent="30.7"/>
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="calcHashCode" methodSignature="()I" time="97" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" time="87" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="40" count="9" selfTime="7" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="33" count="9" selfTime="10" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="13" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="5" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="9" selfTime="4" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="calcHashCode" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="20" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="8" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="12" count="9" selfTime="6" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="6" count="9" selfTime="6" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="4" count="8" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="true" class="java.util.Set" methodName="clear" methodSignature="()V" time="13" count="8" selfTime="13" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="11" count="8" selfTime="11" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSyntax.Literal" methodName="parseLiteral" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/Literal;" time="24605" count="8" selfTime="30" lineNumber="-1" percent="10.4">
            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" time="23629" count="8" selfTime="52" lineNumber="-1" percent="10.0">
              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="22031" count="8" selfTime="19" lineNumber="-1" percent="9.3">
                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="22012" count="8" selfTime="30" lineNumber="-1" percent="9.3">
                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="21838" count="8" selfTime="25" lineNumber="-1" percent="9.2">
                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" time="21727" count="4" selfTime="14" lineNumber="-1" percent="9.2">
                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJJJ)I" time="21708" count="4" selfTime="21651" lineNumber="-1" percent="9.2">
                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfa_0" methodSignature="(IJJ)I" time="57" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="43" count="4" selfTime="16" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" time="17" count="12" selfTime="14" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="3" count="24" selfTime="3" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="10" count="12" selfTime="6" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopStringLiteralDfa_0" methodSignature="(IJJ)I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="5" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="86" count="4" selfTime="33" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" time="34" count="32" selfTime="22" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="12" count="64" selfTime="12" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="19" count="32" selfTime="15" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="4" count="32" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="71" count="8" selfTime="35" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" time="17" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="14" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="67" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="57" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="FillBuff" methodSignature="()V" time="39" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.io.Reader" methodName="read" methodSignature="([CII)I" time="29" count="8" selfTime="29" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" time="1158" count="8" selfTime="61" lineNumber="-1" percent="0.5">
                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" time="794" count="8" selfTime="31" lineNumber="-1" percent="0.3">
                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" time="730" count="9" selfTime="10" lineNumber="-1" percent="0.3">
                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" time="643" count="9" selfTime="6" lineNumber="-1" percent="0.3">
                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" time="637" count="9" selfTime="11" lineNumber="-1" percent="0.3">
                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" time="626" count="9" selfTime="6" lineNumber="-1" percent="0.3">
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" time="432" count="9" selfTime="10" lineNumber="-1" percent="0.2">
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" time="422" count="9" selfTime="10" lineNumber="-1" percent="0.2">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" time="412" count="9" selfTime="7" lineNumber="-1" percent="0.2">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" time="405" count="9" selfTime="12" lineNumber="-1" percent="0.2">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" time="363" count="9" selfTime="30" lineNumber="-1" percent="0.2">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" time="283" count="6" selfTime="9" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" time="231" count="6" selfTime="28" lineNumber="-1" percent="0.1">
                                        <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" time="56" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="31" count="5" selfTime="8" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="18" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="13" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="5" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="20" count="5" selfTime="16" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" time="55" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" time="50" count="5" selfTime="7" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" time="36" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="34" count="5" selfTime="7" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="16" count="5" selfTime="8" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="5" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="5" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="4" count="5" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" time="7" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_35" methodSignature="()Z" time="5" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_save" methodSignature="(II)V" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" time="35" count="5" selfTime="13" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="16" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="13" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="9" count="5" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="8" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="28" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="26" count="5" selfTime="6" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="18" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="12" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" time="13" count="5" selfTime="13" lineNumber="-1" percent="0.0"/>
                                        <node leaf="false" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" time="12" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="10" count="5" selfTime="9" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" time="43" count="6" selfTime="24" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.directives.FunctionRegister" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" time="19" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="10" count="6" selfTime="10" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="parseNumber" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/NumberTerm;" time="48" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.lang.Double" methodName="parseDouble" methodSignature="(Ljava/lang/String;)D" time="23" count="3" selfTime="23" lineNumber="-1" percent="0.0"/>
                                      <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="16" count="3" selfTime="11" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="30" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="28" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="14" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="5" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="4" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="188" count="9" selfTime="10" lineNumber="-1" percent="0.1">
                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="178" count="9" selfTime="19" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="101" count="9" selfTime="6" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="61" count="7" selfTime="18" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" time="18" count="16" selfTime="13" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="5" count="32" selfTime="5" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="15" count="19" selfTime="8" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="7" count="19" selfTime="7" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddStates" methodSignature="(II)V" time="10" count="3" selfTime="8" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="2" count="15" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" time="34" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJJJ)I" time="30" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa3_0" methodSignature="(JJ)I" time="11" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa4_0" methodSignature="(JJ)I" time="7" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfaWithStates_0" methodSignature="(III)I" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfa_0" methodSignature="(IJJ)I" time="9" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="8" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" time="3" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopStringLiteralDfa_0" methodSignature="(IJJ)I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="40" count="9" selfTime="17" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" time="9" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="8" count="9" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="5" count="9" selfTime="5" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="3" count="9" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="2" count="9" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="1" count="9" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="14" count="9" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="11" count="9" selfTime="8" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="3" count="9" selfTime="3" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="4" count="18" selfTime="4" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="changeToAtom" methodSignature="(Ljava/lang/Object;)Ljason/asSyntax/Term;" time="77" count="9" selfTime="29" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="isAtom" methodSignature="()Z" time="24" count="5" selfTime="7" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="isAtom" methodSignature="()Z" time="16" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="isAtom" methodSignature="()Z" time="10" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" time="5" count="5" selfTime="5" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="16" count="5" selfTime="8" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="7" count="5" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isAtom" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="java.util.ArrayList" methodName="trimToSize" methodSignature="()V" time="19" count="8" selfTime="19" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.ArrayList" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="8" count="9" selfTime="8" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="226" count="16" selfTime="9" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="217" count="8" selfTime="11" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="169" count="8" selfTime="5" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="164" count="8" selfTime="12" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="FillBuff" methodSignature="()V" time="152" count="8" selfTime="93" lineNumber="-1" percent="0.1">
                          <node leaf="true" class="java.io.IOException" methodName="&lt;init&gt;" methodSignature="()V" time="40" count="8" selfTime="40" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.io.Reader" methodName="read" methodSignature="([CII)I" time="9" count="8" selfTime="9" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.io.Reader" methodName="close" methodSignature="()V" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="37" count="8" selfTime="17" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="10" count="8" selfTime="10" lineNumber="-1" percent="0.0"/>
                      <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="7" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="41" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="33" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="26" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="20" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="14" count="8" selfTime="14" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="12" count="24" selfTime="12" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSyntax.Structure" methodName="setTerms" methodSignature="(Ljava/util/List;)Ljason/asSyntax/Literal;" time="10" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="118" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="109" count="8" selfTime="14" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="94" count="8" selfTime="30" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="24" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="12" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="18" count="9" selfTime="16" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="9" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="8" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="4" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="3" count="9" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" time="112" count="8" selfTime="20" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" time="87" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" time="63" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="57" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="31" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="11" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="8" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="8" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" time="19" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_35" methodSignature="()Z" time="12" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_save" methodSignature="(II)V" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" time="102" count="8" selfTime="14" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="71" count="8" selfTime="17" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="42" count="8" selfTime="16" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="26" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="8" count="8" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="17" count="8" selfTime="14" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" time="33" count="8" selfTime="33" lineNumber="-1" percent="0.0"/>
              <node leaf="false" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" time="16" count="8" selfTime="4" lineNumber="-1" percent="0.0">
                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="12" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
              </node>
              <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="16" selfTime="2" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;)V" time="930" count="8" selfTime="139" lineNumber="-1" percent="0.4">
              <node leaf="false" class="jason.asSyntax.directives.DirectiveProcessor" methodName="getInstance" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/directives/Directive;" time="374" count="8" selfTime="51" lineNumber="-1" percent="0.2">
                <node leaf="true" class="java.lang.reflect.Constructor" methodName="newInstance" methodSignature="([Ljava/lang/Object;)Ljava/lang/Object;" time="164" count="8" selfTime="164" lineNumber="-1" percent="0.1"/>
                <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" time="116" count="8" selfTime="116" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="32" count="24" selfTime="32" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="10" count="8" selfTime="10" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.directives.NameSpace" methodName="isSingleton" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;II)V" time="246" count="8" selfTime="11" lineNumber="-1" percent="0.1">
                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;III)V" time="235" count="8" selfTime="235" lineNumber="-1" percent="0.1"/>
              </node>
              <node leaf="false" class="jason.asSyntax.parser.as2j$LookaheadSuccess" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/parser/as2j$1;)V" time="78" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.parser.as2j$LookaheadSuccess" methodName="&lt;init&gt;" methodSignature="()V" time="67" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.lang.Error" methodName="&lt;init&gt;" methodSignature="()V" time="56" count="8" selfTime="56" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.directives.DirectiveProcessor" methodName="&lt;init&gt;" methodSignature="()V" time="33" count="8" selfTime="18" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="15" count="8" selfTime="15" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/parser/SimpleCharStream;)V" time="31" count="8" selfTime="31" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.parser.as2j$JJCalls" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="32" selfTime="13" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="8" selfTime="11" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.io.StringReader" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="16" count="8" selfTime="16" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.io.PrintStream" methodName="println" methodSignature="(Ljava/lang/String;)V" time="3178" count="3" selfTime="3178" lineNumber="-1" percent="1.3"/>
          <node leaf="false" class="NavMap" methodName="perceive" methodSignature="()Ljava/util/List;" time="314" count="1" selfTime="51" lineNumber="-1" percent="0.1">
            <node leaf="false" class="NavMap" methodName="perceiveBattery" methodSignature="()Ljava/util/List;" time="55" count="1" selfTime="14" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.lang.Integer" methodName="toString" methodSignature="(I)Ljava/lang/String;" time="12" count="1" selfTime="12" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.Boolean" methodName="toString" methodSignature="(Z)Ljava/lang/String;" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="8" count="2" selfTime="8" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.environment.grid.Location" methodName="toString" methodSignature="()Ljava/lang/String;" time="44" count="1" selfTime="15" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(I)Ljava/lang/StringBuilder;" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="NavMap" methodName="perceiveObstacles" methodSignature="()Ljava/util/List;" time="41" count="1" selfTime="17" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="isFreeOfObstacle" methodSignature="(II)Z" time="16" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="isFree" methodSignature="(III)Z" time="9" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="NavMap" methodName="perceiveMap" methodSignature="()Ljava/util/List;" time="25" count="1" selfTime="15" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.util.List" methodName="addAll" methodSignature="(Ljava/util/Collection;)Z" time="24" count="4" selfTime="24" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="NavMap" methodName="perceivePedestrians" methodSignature="()Ljava/util/List;" time="22" count="1" selfTime="9" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="hasObject" methodSignature="(III)Z" time="8" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="12" count="3" selfTime="12" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="11" count="1" selfTime="11" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="6" count="1" selfTime="1" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="5" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="NavMap" methodName="updateBattery" methodSignature="()V" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" time="48" count="1" selfTime="48" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.environment.Environment" methodName="clearPercepts" methodSignature="()V" time="38" count="1" selfTime="8" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="14" count="1" selfTime="14" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Set" methodName="clear" methodSignature="()V" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.List" methodName="clear" methodSignature="()V" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="20" count="1" selfTime="20" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="10" count="9" selfTime="10" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="NavMap" methodName="move" methodSignature="(Ljava/lang/String;)Z" time="1410" count="1" selfTime="40" lineNumber="-1" percent="0.6">
          <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="setAgPos" methodSignature="(ILjason/environment/grid/Location;)V" time="1296" count="1" selfTime="15" lineNumber="-1" percent="0.5">
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="add" methodSignature="(III)V" time="1006" count="1" selfTime="3" lineNumber="-1" percent="0.4">
              <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="update" methodSignature="(II)V" time="1003" count="1" selfTime="32" lineNumber="-1" percent="0.4">
                <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="draw" methodSignature="(Ljava/awt/Graphics;II)V" time="825" count="1" selfTime="97" lineNumber="-1" percent="0.3">
                  <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawAgent" methodSignature="(Ljava/awt/Graphics;IILjava/awt/Color;I)V" time="725" count="1" selfTime="30" lineNumber="-1" percent="0.3">
                    <node leaf="true" class="java.awt.Graphics" methodName="fillOval" methodSignature="(IIII)V" time="426" count="1" selfTime="426" lineNumber="-1" percent="0.2"/>
                    <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawString" methodSignature="(Ljava/awt/Graphics;IILjava/awt/Font;Ljava/lang/String;)V" time="235" count="1" selfTime="9" lineNumber="-1" percent="0.1">
                      <node leaf="true" class="java.awt.Graphics" methodName="drawString" methodSignature="(Ljava/lang/String;II)V" time="128" count="1" selfTime="128" lineNumber="-1" percent="0.1"/>
                      <node leaf="true" class="java.awt.FontMetrics" methodName="stringWidth" methodSignature="(Ljava/lang/String;)I" time="40" count="1" selfTime="40" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.awt.Graphics" methodName="getFontMetrics" methodSignature="()Ljava/awt/FontMetrics;" time="39" count="1" selfTime="39" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.awt.FontMetrics" methodName="getHeight" methodSignature="()I" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.awt.Graphics" methodName="setFont" methodSignature="(Ljava/awt/Font;)V" time="9" count="1" selfTime="9" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.lang.String" methodName="valueOf" methodSignature="(I)Ljava/lang/String;" time="24" count="1" selfTime="24" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.awt.Graphics" methodName="setColor" methodSignature="(Ljava/awt/Color;)V" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="getAgAtPos" methodSignature="(II)I" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawEmpty" methodSignature="(Ljava/awt/Graphics;II)V" time="146" count="1" selfTime="7" lineNumber="-1" percent="0.1">
                  <node leaf="true" class="java.awt.Graphics" methodName="drawRect" methodSignature="(IIII)V" time="116" count="1" selfTime="116" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.awt.Graphics" methodName="fillRect" methodSignature="(IIII)V" time="18" count="1" selfTime="18" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.awt.Graphics" methodName="setColor" methodSignature="(Ljava/awt/Color;)V" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="remove" methodSignature="(III)V" time="271" count="1" selfTime="13" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="update" methodSignature="(II)V" time="258" count="1" selfTime="96" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawEmpty" methodSignature="(Ljava/awt/Graphics;II)V" time="149" count="1" selfTime="28" lineNumber="-1" percent="0.1">
                  <node leaf="true" class="java.awt.Graphics" methodName="fillRect" methodSignature="(IIII)V" time="81" count="1" selfTime="81" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.awt.Graphics" methodName="drawRect" methodSignature="(IIII)V" time="23" count="1" selfTime="23" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.awt.Graphics" methodName="setColor" methodSignature="(Ljava/awt/Color;)V" time="17" count="2" selfTime="17" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.environment.grid.GridWorldView" methodName="draw" methodSignature="(Ljava/awt/Graphics;II)V" time="13" count="1" selfTime="13" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="40" count="1" selfTime="18" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="22" count="1" selfTime="11" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="11" count="1" selfTime="11" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="isFree" methodSignature="(Ljason/environment/grid/Location;)Z" time="18" count="1" selfTime="6" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="isFree" methodSignature="(II)Z" time="12" count="1" selfTime="7" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="1376" count="1" selfTime="12" lineNumber="-1" percent="0.6">
          <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" time="1364" count="1" selfTime="1182" lineNumber="-1" percent="0.6">
            <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" time="78" count="1" selfTime="71" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.asSyntax.Atom" methodName="toString" methodSignature="()Ljava/lang/String;" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" time="26" count="1" selfTime="26" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.List" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" time="24" count="1" selfTime="24" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.stream.Collectors" methodName="joining" methodSignature="(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;" time="21" count="1" selfTime="21" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="java.util.logging.Logger" methodName="info" methodSignature="(Ljava/lang/String;)V" time="434" count="1" selfTime="345" lineNumber="-1" percent="0.2">
          <node leaf="false" class="jason.runtime.MASConsoleLogFormatter" methodName="format" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" time="89" count="1" selfTime="23" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.runtime.MASConsoleLogFormatter" methodName="getAgName" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" time="20" count="1" selfTime="5" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.lang.String" methodName="lastIndexOf" methodSignature="(I)I" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.LogRecord" methodName="getLoggerName" methodSignature="()Ljava/lang/String;" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="11" count="1" selfTime="11" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="10" count="3" selfTime="10" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="9" count="1" selfTime="9" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.logging.LogRecord" methodName="getThrown" methodSignature="()Ljava/lang/Throwable;" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.logging.LogRecord" methodName="getMessage" methodSignature="()Ljava/lang/String;" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="211" count="2" selfTime="19" lineNumber="-1" percent="0.1">
          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="108" count="4" selfTime="12" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="calcHashCode" methodSignature="()I" time="85" count="1" selfTime="18" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" time="66" count="1" selfTime="12" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="35" count="1" selfTime="20" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="9" count="1" selfTime="9" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="12" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="8" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSyntax.Pred" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="84" count="1" selfTime="12" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="66" count="1" selfTime="24" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSyntax.Atom" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="22" count="1" selfTime="11" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;)Z" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
        </node>
        <node leaf="false" class="jason.environment.Environment" methodName="informAgsEnvironmentChanged" methodSignature="([Ljava/lang/String;)V" time="179" count="1" selfTime="32" lineNumber="-1" percent="0.1">
          <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="informAgsEnvironmentChanged" methodSignature="([Ljava/lang/String;)V" time="147" count="1" selfTime="59" lineNumber="-1" percent="0.1">
            <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wakeUpSense" methodSignature="()V" time="20" count="1" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" time="18" count="1" selfTime="13" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" time="20" count="1" selfTime="20" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="19" count="1" selfTime="19" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="9" count="2" selfTime="9" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.infra.centralised.BaseCentralisedMAS" methodName="getAgs" methodSignature="()Ljava/util/Map;" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" time="138" count="1" selfTime="26" lineNumber="-1" percent="0.1">
          <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" time="60" count="1" selfTime="59" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.asSyntax.Atom" methodName="toString" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.stream.Collectors" methodName="joining" methodSignature="(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;" time="13" count="1" selfTime="13" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.util.List" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" time="11" count="1" selfTime="11" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="1" selfTime="3" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="java.lang.String" methodName="contains" methodSignature="(Ljava/lang/CharSequence;)Z" time="27" count="2" selfTime="27" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="17" count="2" selfTime="17" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="1" selfTime="11" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="java.lang.Thread" methodName="sleep" methodSignature="(J)V" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="9" count="1" selfTime="9" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="actionExecuted" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Structure;ZLjava/lang/Object;)V" time="83" count="1" selfTime="20" lineNumber="-1" percent="0.0">
        <node leaf="false" class="jason.architecture.AgArch" methodName="actionExecuted" methodSignature="(Ljason/asSemantics/ActionExec;)V" time="41" count="1" selfTime="21" lineNumber="-1" percent="0.0">
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addFeedbackAction" methodSignature="(Ljason/asSemantics/ActionExec;)V" time="14" count="1" selfTime="3" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getIntention" methodSignature="()Ljason/asSemantics/Intention;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wakeUpAct" methodSignature="()V" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getC" methodSignature="()Ljason/asSemantics/Circumstance;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.infra.centralised.BaseCentralisedMAS" methodName="getAg" methodSignature="(Ljava/lang/String;)Ljason/infra/centralised/CentralisedAgArch;" time="20" count="1" selfTime="6" lineNumber="-1" percent="0.0">
          <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="14" count="1" selfTime="14" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="jason.asSemantics.ActionExec" methodName="setResult" methodSignature="(Z)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
      </node>
    </node>
    <node leaf="false" class="jason.stdlib.wait$WaitEvent" methodName="lambda$new$0" methodSignature="()V" time="2721" count="1" selfTime="17" lineNumber="-1" percent="1.2">
      <node leaf="false" class="jason.stdlib.wait$WaitEvent" methodName="resume" methodSignature="(Z)V" time="2704" count="1" selfTime="2589" lineNumber="-1" percent="1.1">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="runAtBeginOfNextCycle" methodSignature="(Ljava/lang/Runnable;)V" time="59" count="1" selfTime="15" lineNumber="-1" percent="0.0">
          <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="20" count="1" selfTime="20" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" time="18" count="1" selfTime="10" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="6" count="1" selfTime="5" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSemantics.Circumstance" methodName="removeEventListener" methodSignature="(Ljason/asSemantics/CircumstanceListener;)V" time="33" count="1" selfTime="7" lineNumber="-1" percent="0.0">
          <node leaf="true" class="java.util.Queue" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="26" count="1" selfTime="26" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wakeUpDeliberate" methodSignature="()V" time="21" count="1" selfTime="7" lineNumber="-1" percent="0.0">
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" time="14" count="1" selfTime="12" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
          <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
        </node>
      </node>
    </node>
  </node>
  <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="run" methodSignature="()V" time="100062" count="1" selfTime="1544" lineNumber="-1" percent="42.3">
    <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="reasoningCycle" methodSignature="()V" time="97767" count="4" selfTime="38890" lineNumber="-1" percent="41.4">
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="deliberate" methodSignature="()V" time="34087" count="3" selfTime="18" lineNumber="-1" percent="14.4">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="deliberate" methodSignature="()V" time="34037" count="2" selfTime="53" lineNumber="-1" percent="14.4">
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySemanticRuleDeliberate" methodSignature="()V" time="33815" count="8" selfTime="26" lineNumber="-1" percent="14.3">
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyApplPl" methodSignature="()V" time="29836" count="2" selfTime="61" lineNumber="-1" percent="12.6">
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applicablePlans" methodSignature="(Ljava/util/List;)Ljava/util/List;" time="29728" count="2" selfTime="74" lineNumber="-1" percent="12.6">
                <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="29289" count="8" selfTime="16" lineNumber="-1" percent="12.4">
                  <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="29273" count="3" selfTime="6" lineNumber="-1" percent="12.4">
                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="29267" count="3" selfTime="24" lineNumber="-1" percent="12.4">
                      <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="29068" count="12" selfTime="26" lineNumber="-1" percent="12.3">
                        <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="28404" count="6" selfTime="5" lineNumber="-1" percent="12.0">
                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="28399" count="3" selfTime="21" lineNumber="-1" percent="12.0">
                            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="28019" count="12" selfTime="12" lineNumber="-1" percent="11.9">
                              <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="20038" count="4" selfTime="6" lineNumber="-1" percent="8.5">
                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="20032" count="2" selfTime="17" lineNumber="-1" percent="8.5">
                                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="19718" count="10" selfTime="16" lineNumber="-1" percent="8.3">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="16331" count="3" selfTime="2" lineNumber="-1" percent="6.9">
                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="16329" count="2" selfTime="3" lineNumber="-1" percent="6.9">
                                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="16326" count="2" selfTime="4" lineNumber="-1" percent="6.9">
                                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="16322" count="2" selfTime="1" lineNumber="-1" percent="6.9">
                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="16321" count="2" selfTime="55" lineNumber="-1" percent="6.9">
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="14005" count="12" selfTime="20" lineNumber="-1" percent="5.9">
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="13967" count="2" selfTime="3" lineNumber="-1" percent="5.9">
                                                  <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="13964" count="2" selfTime="15" lineNumber="-1" percent="5.9">
                                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="13835" count="8" selfTime="11" lineNumber="-1" percent="5.9">
                                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="8431" count="4" selfTime="4" lineNumber="-1" percent="3.6">
                                                        <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="8427" count="2" selfTime="10" lineNumber="-1" percent="3.6">
                                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="8313" count="8" selfTime="10" lineNumber="-1" percent="3.5">
                                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="8303" count="8" selfTime="13" lineNumber="-1" percent="3.5">
                                                              <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="8290" count="6" selfTime="258" lineNumber="-1" percent="3.5">
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="6675" count="64" selfTime="311" lineNumber="-1" percent="2.8">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="6245" count="64" selfTime="985" lineNumber="-1" percent="2.6">
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="4009" count="68" selfTime="246" lineNumber="-1" percent="1.7">
                                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="3645" count="68" selfTime="407" lineNumber="-1" percent="1.5">
                                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2322" count="70" selfTime="230" lineNumber="-1" percent="1.0">
                                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1994" count="70" selfTime="797" lineNumber="-1" percent="0.8">
                                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="241" count="4" selfTime="16" lineNumber="-1" percent="0.1">
                                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="220" count="4" selfTime="56" lineNumber="-1" percent="0.1">
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="99" count="2" selfTime="11" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="58" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="38" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="34" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="27" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="23" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="18" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="12" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                                </node>
                                                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                              </node>
                                                                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                            </node>
                                                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                          </node>
                                                                                        </node>
                                                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="9" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                        </node>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="21" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="15" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="7" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                      </node>
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="14" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="10" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="9" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="182" count="2" selfTime="78" lineNumber="-1" percent="0.1">
                                                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="55" count="2" selfTime="14" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="28" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="20" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="11" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="15" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="9" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="isUnary" methodSignature="()Z" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.ArithExpr$ArithmeticOp$2" methodName="eval" methodSignature="(DD)D" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="116" count="2" selfTime="16" lineNumber="-1" percent="0.0">
                                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="71" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="42" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="40" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="32" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="28" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="22" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="14" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                            </node>
                                                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                          </node>
                                                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                        </node>
                                                                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="15" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="13" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="20" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="18" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="8" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="91" count="136" selfTime="91" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="83" count="132" selfTime="83" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="76" count="128" selfTime="76" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="72" count="138" selfTime="72" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="68" count="128" selfTime="68" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="60" count="132" selfTime="60" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="52" count="66" selfTime="52" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="48" count="66" selfTime="48" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="39" count="6" selfTime="23" lineNumber="-1" percent="0.0">
                                                                              <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="13" count="6" selfTime="10" lineNumber="-1" percent="0.0">
                                                                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="15" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                                                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="11" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="8" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="8" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="12" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.ArithFunctionTerm" methodName="isArithExpr" methodSignature="()Z" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="95" count="206" selfTime="95" lineNumber="-1" percent="0.0"/>
                                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="662" count="64" selfTime="130" lineNumber="-1" percent="0.3">
                                                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="503" count="64" selfTime="130" lineNumber="-1" percent="0.2">
                                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="274" count="64" selfTime="173" lineNumber="-1" percent="0.1">
                                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="56" count="128" selfTime="56" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="45" count="64" selfTime="45" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="99" count="64" selfTime="72" lineNumber="-1" percent="0.0">
                                                                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="27" count="64" selfTime="27" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="29" count="64" selfTime="29" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="47" count="72" selfTime="47" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="42" count="64" selfTime="42" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="38" count="64" selfTime="38" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="37" count="72" selfTime="37" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="24" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="16" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="16" count="20" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="13" count="16" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="80" count="128" selfTime="80" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="38" count="76" selfTime="38" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="330" count="64" selfTime="145" lineNumber="-1" percent="0.1">
                                                                      <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="122" count="64" selfTime="83" lineNumber="-1" percent="0.1">
                                                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="39" count="64" selfTime="39" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="63" count="128" selfTime="63" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="237" count="136" selfTime="145" lineNumber="-1" percent="0.1">
                                                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="92" count="136" selfTime="92" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="202" count="128" selfTime="133" lineNumber="-1" percent="0.1">
                                                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="69" count="128" selfTime="69" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="74" count="128" selfTime="74" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="70" count="128" selfTime="70" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="64" count="128" selfTime="64" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="63" count="128" selfTime="63" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="61" count="128" selfTime="61" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="59" count="128" selfTime="59" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="50" count="64" selfTime="50" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="36" count="64" selfTime="36" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="70" count="192" selfTime="70" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="49" count="132" selfTime="49" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="807" count="64" selfTime="120" lineNumber="-1" percent="0.3">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="559" count="64" selfTime="77" lineNumber="-1" percent="0.2">
                                                                    <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="482" count="64" selfTime="243" lineNumber="-1" percent="0.2">
                                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="239" count="192" selfTime="145" lineNumber="-1" percent="0.1">
                                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="94" count="192" selfTime="94" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="128" count="64" selfTime="84" lineNumber="-1" percent="0.1">
                                                                    <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="44" count="64" selfTime="44" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="297" count="64" selfTime="76" lineNumber="-1" percent="0.1">
                                                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="221" count="64" selfTime="82" lineNumber="-1" percent="0.1">
                                                                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="139" count="64" selfTime="82" lineNumber="-1" percent="0.1">
                                                                      <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="57" count="64" selfTime="57" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="218" count="68" selfTime="95" lineNumber="-1" percent="0.1">
                                                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="123" count="68" selfTime="74" lineNumber="-1" percent="0.1">
                                                                    <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="49" count="68" selfTime="49" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="30" count="64" selfTime="30" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="85" count="2" selfTime="17" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="48" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="26" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="18" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="9" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="10" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="5393" count="4" selfTime="5" lineNumber="-1" percent="2.3">
                                                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="5388" count="4" selfTime="173" lineNumber="-1" percent="2.3">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="4329" count="46" selfTime="217" lineNumber="-1" percent="1.8">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="4026" count="46" selfTime="721" lineNumber="-1" percent="1.7">
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2394" count="50" selfTime="197" lineNumber="-1" percent="1.0">
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2130" count="50" selfTime="271" lineNumber="-1" percent="0.9">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1172" count="50" selfTime="175" lineNumber="-1" percent="0.5">
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="945" count="50" selfTime="535" lineNumber="-1" percent="0.4">
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="61" count="100" selfTime="61" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="51" count="100" selfTime="51" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="51" count="100" selfTime="51" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="50" count="100" selfTime="50" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="41" count="100" selfTime="41" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="39" count="100" selfTime="39" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="39" count="50" selfTime="39" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="38" count="6" selfTime="18" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="13" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="7" count="12" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="30" count="50" selfTime="30" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="7" count="12" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="52" count="150" selfTime="52" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="576" count="50" selfTime="94" lineNumber="-1" percent="0.2">
                                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="452" count="50" selfTime="145" lineNumber="-1" percent="0.2">
                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="224" count="50" selfTime="163" lineNumber="-1" percent="0.1">
                                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="32" count="50" selfTime="32" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="29" count="100" selfTime="29" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="83" count="50" selfTime="58" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="25" count="50" selfTime="25" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="30" count="50" selfTime="30" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="31" count="50" selfTime="31" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="28" count="50" selfTime="28" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="26" count="50" selfTime="26" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="26" count="50" selfTime="26" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="46" count="100" selfTime="46" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="21" count="50" selfTime="21" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="246" count="46" selfTime="108" lineNumber="-1" percent="0.1">
                                                                <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="94" count="46" selfTime="67" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="27" count="46" selfTime="27" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="44" count="92" selfTime="44" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="189" count="92" selfTime="103" lineNumber="-1" percent="0.1">
                                                                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="86" count="92" selfTime="86" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="145" count="100" selfTime="102" lineNumber="-1" percent="0.1">
                                                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="43" count="100" selfTime="43" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="54" count="92" selfTime="54" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="51" count="46" selfTime="51" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="45" count="92" selfTime="45" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="45" count="92" selfTime="45" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="42" count="92" selfTime="42" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="35" count="92" selfTime="35" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="30" count="92" selfTime="30" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="24" count="46" selfTime="24" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="49" count="138" selfTime="49" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="37" count="96" selfTime="37" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="511" count="46" selfTime="89" lineNumber="-1" percent="0.2">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="327" count="46" selfTime="62" lineNumber="-1" percent="0.1">
                                                              <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="265" count="46" selfTime="148" lineNumber="-1" percent="0.1">
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="117" count="92" selfTime="75" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="42" count="92" selfTime="42" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="95" count="46" selfTime="65" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="30" count="46" selfTime="30" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="204" count="46" selfTime="50" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="154" count="46" selfTime="57" lineNumber="-1" percent="0.1">
                                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="97" count="46" selfTime="53" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="44" count="46" selfTime="44" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="147" count="48" selfTime="59" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="88" count="48" selfTime="56" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="32" count="48" selfTime="32" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="21" count="46" selfTime="21" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="99" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="96" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="84" count="2" selfTime="22" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="44" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="25" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="19" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="8" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="8" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="18" count="10" selfTime="9" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="9" count="10" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1748" count="8" selfTime="41" lineNumber="-1" percent="0.7">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1689" count="8" selfTime="185" lineNumber="-1" percent="0.7">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1290" count="24" selfTime="99" lineNumber="-1" percent="0.5">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1158" count="24" selfTime="167" lineNumber="-1" percent="0.5">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="818" count="16" selfTime="115" lineNumber="-1" percent="0.3">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="410" count="16" selfTime="47" lineNumber="-1" percent="0.2">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="271" count="16" selfTime="28" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="243" count="16" selfTime="34" lineNumber="-1" percent="0.1">
                                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="198" count="16" selfTime="19" lineNumber="-1" percent="0.1">
                                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="179" count="16" selfTime="33" lineNumber="-1" percent="0.1">
                                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="133" count="16" selfTime="36" lineNumber="-1" percent="0.1">
                                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="88" count="16" selfTime="37" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="44" count="16" selfTime="29" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="15" count="16" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="13" count="16" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="11" count="16" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="64" count="16" selfTime="20" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="44" count="16" selfTime="19" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="25" count="16" selfTime="21" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="28" count="16" selfTime="18" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="114" count="16" selfTime="23" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="91" count="16" selfTime="37" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="46" count="16" selfTime="25" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="13" count="16" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="99" count="16" selfTime="52" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="30" count="16" selfTime="20" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="17" count="32" selfTime="17" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="15" count="16" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="12" count="16" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="12" count="16" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="11" count="16" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="67" count="16" selfTime="20" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="47" count="16" selfTime="24" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="23" count="16" selfTime="15" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="16" count="32" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="12" count="16" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="11" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="11" count="32" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="8" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="22" count="56" selfTime="22" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="11" count="16" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="65" count="8" selfTime="32" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="17" count="16" selfTime="17" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="16" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="64" count="48" selfTime="40" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="24" count="48" selfTime="24" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="25" count="16" selfTime="15" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="12" count="20" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="6" count="24" selfTime="6" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="272" count="2" selfTime="3" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="269" count="2" selfTime="6" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="262" count="2" selfTime="6" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="255" count="2" selfTime="29" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="171" count="6" selfTime="49" lineNumber="-1" percent="0.1">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="81" count="6" selfTime="15" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="64" count="6" selfTime="17" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="37" count="6" selfTime="24" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="8" count="12" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="10" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="12" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="8" count="12" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="25" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="12" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="12" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="102" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="99" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="85" count="2" selfTime="21" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="44" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="25" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="17" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="8" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="()Ljason/asSyntax/Literal;" time="72" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="59" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="54" count="2" selfTime="11" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="24" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="20" count="2" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="13" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="40" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="29" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="18" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="10" count="8" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="17" count="8" selfTime="14" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Rule" methodName="isRule" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Rule" methodName="getBody" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="3371" count="5" selfTime="6" lineNumber="-1" percent="1.4">
                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="3365" count="5" selfTime="106" lineNumber="-1" percent="1.4">
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2612" count="24" selfTime="129" lineNumber="-1" percent="1.1">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2428" count="24" selfTime="368" lineNumber="-1" percent="1.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1550" count="27" selfTime="124" lineNumber="-1" percent="0.7">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1382" count="27" selfTime="159" lineNumber="-1" percent="0.6">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="573" count="23" selfTime="95" lineNumber="-1" percent="0.2">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="435" count="23" selfTime="244" lineNumber="-1" percent="0.2">
                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="27" count="46" selfTime="27" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="26" count="46" selfTime="26" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="25" count="46" selfTime="25" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="24" count="46" selfTime="24" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="20" count="46" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="18" count="23" selfTime="18" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="17" count="46" selfTime="17" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="16" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="15" count="23" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="43" count="69" selfTime="43" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="327" count="4" selfTime="48" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="115" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="73" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="68" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="54" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="47" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="35" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="23" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="20" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="14" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="10" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="93" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="85" count="4" selfTime="49" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="17" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="16" count="4" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="27" count="1" selfTime="13" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="8" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="18" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="12" count="3" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="266" count="27" selfTime="56" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="201" count="27" selfTime="52" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="106" count="23" selfTime="74" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="16" count="46" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="16" count="23" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="43" count="27" selfTime="30" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="13" count="27" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="9" count="23" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="16" count="27" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="15" count="27" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="15" count="27" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="11" count="27" selfTime="11" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="29" count="54" selfTime="29" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="15" count="27" selfTime="15" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="150" count="24" selfTime="79" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="46" count="24" selfTime="34" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="24" selfTime="12" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="25" count="48" selfTime="25" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="96" count="54" selfTime="63" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="33" count="54" selfTime="33" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="79" count="48" selfTime="46" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="33" count="48" selfTime="33" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="29" count="48" selfTime="29" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="28" count="48" selfTime="28" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="25" count="48" selfTime="25" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="24" count="48" selfTime="24" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="21" count="48" selfTime="21" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="18" count="48" selfTime="18" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="17" count="24" selfTime="17" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="17" count="24" selfTime="17" lineNumber="-1" percent="0.0"/>
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="6" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="29" count="54" selfTime="29" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="26" count="72" selfTime="26" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="432" count="24" selfTime="53" lineNumber="-1" percent="0.2">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="330" count="24" selfTime="25" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="305" count="24" selfTime="156" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="149" count="93" selfTime="104" lineNumber="-1" percent="0.1">
                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="45" count="93" selfTime="45" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="49" count="24" selfTime="34" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="15" count="24" selfTime="15" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="117" count="24" selfTime="31" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="86" count="24" selfTime="32" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="54" count="24" selfTime="29" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="25" count="24" selfTime="25" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="84" count="26" selfTime="41" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="43" count="26" selfTime="26" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="17" count="26" selfTime="17" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="9" count="24" selfTime="9" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="5" count="5" selfTime="5" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="274" count="3" selfTime="23" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="115" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="98" count="2" selfTime="21" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="58" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="32" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="21" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="10" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="8" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="85" count="1" selfTime="10" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="75" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="72" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="41" count="1" selfTime="8" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="31" count="1" selfTime="17" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="16" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="11" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="10" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                            </node>
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="37" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="21" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="12" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="12" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="11" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="7" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="7969" count="6" selfTime="10" lineNumber="-1" percent="3.4">
                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="7959" count="6" selfTime="168" lineNumber="-1" percent="3.4">
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="5210" count="20" selfTime="129" lineNumber="-1" percent="2.2">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="5025" count="20" selfTime="422" lineNumber="-1" percent="2.1">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="4100" count="36" selfTime="143" lineNumber="-1" percent="1.7">
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="3884" count="36" selfTime="510" lineNumber="-1" percent="1.6">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1716" count="22" selfTime="115" lineNumber="-1" percent="0.7">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1560" count="22" selfTime="235" lineNumber="-1" percent="0.7">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="926" count="21" selfTime="88" lineNumber="-1" percent="0.4">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="800" count="21" selfTime="312" lineNumber="-1" percent="0.3">
                                                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="176" count="16" selfTime="123" lineNumber="-1" percent="0.1">
                                                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="28" count="32" selfTime="28" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="13" count="16" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="12" count="16" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="132" count="4" selfTime="19" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="106" count="4" selfTime="54" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="33" count="4" selfTime="20" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="7" count="12" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="62" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="46" count="4" selfTime="14" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="23" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="32" count="38" selfTime="32" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="25" count="38" selfTime="25" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="13" count="16" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="10" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="7" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="34" count="55" selfTime="34" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="228" count="16" selfTime="43" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="174" count="16" selfTime="48" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="92" count="16" selfTime="61" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="19" count="32" selfTime="19" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="16" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="34" count="16" selfTime="22" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="12" count="16" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="11" count="16" selfTime="11" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="32" count="4" selfTime="17" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="19" count="28" selfTime="19" lineNumber="-1" percent="0.0"/>
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="19" count="8" selfTime="14" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="17" count="16" selfTime="17" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="16" count="28" selfTime="16" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="14" count="16" selfTime="14" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="12" count="18" selfTime="12" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="21" count="34" selfTime="21" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="20" count="32" selfTime="20" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="1106" count="18" selfTime="168" lineNumber="-1" percent="0.5">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="558" count="18" selfTime="65" lineNumber="-1" percent="0.2">
                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="355" count="18" selfTime="26" lineNumber="-1" percent="0.2">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="329" count="18" selfTime="55" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="260" count="18" selfTime="32" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="228" count="18" selfTime="48" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="170" count="18" selfTime="52" lineNumber="-1" percent="0.1">
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="108" count="18" selfTime="43" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="55" count="18" selfTime="34" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="21" count="18" selfTime="21" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="10" count="18" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="10" count="18" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="10" count="18" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="14" count="18" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="95" count="18" selfTime="29" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="66" count="18" selfTime="32" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="34" count="18" selfTime="22" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="12" count="18" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="43" count="18" selfTime="32" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="11" count="18" selfTime="11" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="185" count="18" selfTime="36" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="149" count="18" selfTime="56" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="68" count="18" selfTime="41" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="17" count="18" selfTime="17" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="10" count="18" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="16" count="18" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="9" count="18" selfTime="9" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="104" count="16" selfTime="56" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="33" count="16" selfTime="20" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="13" count="16" selfTime="13" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="15" count="32" selfTime="15" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="17" count="18" selfTime="17" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="13" count="16" selfTime="13" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="11" count="16" selfTime="11" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="10" count="18" selfTime="10" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="10" count="18" selfTime="10" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="8" count="18" selfTime="8" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="130" count="20" selfTime="33" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="95" count="20" selfTime="45" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="40" count="20" selfTime="25" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="15" count="20" selfTime="15" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="10" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="104" count="16" selfTime="52" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="33" count="16" selfTime="19" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="14" count="16" selfTime="14" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="19" count="32" selfTime="19" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="68" count="32" selfTime="49" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="19" count="32" selfTime="19" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="39" count="52" selfTime="39" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="38" count="72" selfTime="38" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="38" count="64" selfTime="38" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="33" count="52" selfTime="33" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="22" count="20" selfTime="22" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="21" count="32" selfTime="21" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="17" count="32" selfTime="17" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="14" count="32" selfTime="14" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="7" count="20" selfTime="7" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="50" count="70" selfTime="50" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="23" count="38" selfTime="23" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="129" count="20" selfTime="50" lineNumber="-1" percent="0.1">
                                        <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="55" count="20" selfTime="42" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="13" count="20" selfTime="13" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="24" count="40" selfTime="24" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="125" count="72" selfTime="79" lineNumber="-1" percent="0.1">
                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="46" count="72" selfTime="46" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="79" count="40" selfTime="47" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="32" count="40" selfTime="32" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="26" count="40" selfTime="26" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="24" count="40" selfTime="24" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="24" count="40" selfTime="24" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="23" count="40" selfTime="23" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="22" count="20" selfTime="22" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="16" count="40" selfTime="16" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="13" count="40" selfTime="13" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="11" count="20" selfTime="11" lineNumber="-1" percent="0.0"/>
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="11" count="5" selfTime="7" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="29" count="60" selfTime="29" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="27" count="50" selfTime="27" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1319" count="25" selfTime="39" lineNumber="-1" percent="0.6">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="1236" count="4" selfTime="6" lineNumber="-1" percent="0.5">
                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="1230" count="4" selfTime="13" lineNumber="-1" percent="0.5">
                                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1108" count="12" selfTime="35" lineNumber="-1" percent="0.5">
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="813" count="8" selfTime="6" lineNumber="-1" percent="0.3">
                                            <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="807" count="4" selfTime="36" lineNumber="-1" percent="0.3">
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="479" count="12" selfTime="22" lineNumber="-1" percent="0.2">
                                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="447" count="4" selfTime="6" lineNumber="-1" percent="0.2">
                                                  <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="441" count="4" selfTime="20" lineNumber="-1" percent="0.2">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="372" count="2" selfTime="14" lineNumber="-1" percent="0.2">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="349" count="2" selfTime="37" lineNumber="-1" percent="0.1">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="264" count="2" selfTime="7" lineNumber="-1" percent="0.1">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="252" count="2" selfTime="15" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="225" count="2" selfTime="11" lineNumber="-1" percent="0.1">
                                                              <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="146" count="2" selfTime="6" lineNumber="-1" percent="0.1">
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="140" count="2" selfTime="123" lineNumber="-1" percent="0.1">
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="8" count="2" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="60" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="38" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="36" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="30" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="28" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="17" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="11" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="11" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="9" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="9" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="12" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="8" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="7" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="20" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="11" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="10" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="14" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="9" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="8" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="hasNext" methodSignature="()Z" time="10" count="8" selfTime="10" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.RelExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="257" count="2" selfTime="89" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="106" count="4" selfTime="23" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="58" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="43" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="21" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="16" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="8" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.LogExpr" methodName="createUnifIterator" methodSignature="([Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="23" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="&lt;init&gt;" methodSignature="([Ljason/asSemantics/Unifier;)V" time="16" count="2" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="15" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="12" count="2" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="10" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="23" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.LogExpr$3" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="12" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="260" count="4" selfTime="4" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="256" count="4" selfTime="16" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="192" count="2" selfTime="11" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="172" count="2" selfTime="25" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="95" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="83" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="45" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="36" count="2" selfTime="27" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="23" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="17" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="17" count="2" selfTime="11" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="23" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="15" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="11" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="12" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="8" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="81" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="78" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="66" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="39" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="20" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="16" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="7" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="20" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="8" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="8" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="44" count="21" selfTime="25" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="19" count="21" selfTime="19" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Rule" methodName="headCApply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="437" count="2" selfTime="12" lineNumber="-1" percent="0.2">
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="425" count="2" selfTime="3" lineNumber="-1" percent="0.2">
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="422" count="2" selfTime="7" lineNumber="-1" percent="0.2">
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="414" count="2" selfTime="23" lineNumber="-1" percent="0.2">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="setAnnots" methodSignature="(Ljason/asSyntax/ListTerm;)Ljason/asSyntax/Literal;" time="188" count="2" selfTime="34" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="87" count="2" selfTime="16" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="20" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="17" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="14" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="10" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="18" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="14" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="11" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="14" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="11" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="28" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="22" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="19" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="12" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="13" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="12" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="10" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="7" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="129" count="2" selfTime="20" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="70" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="46" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="38" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="20" count="2" selfTime="18" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="10" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="24" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="13" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="66" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="59" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="23" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="20" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="17" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="14" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="11" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="21" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="16" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="13" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Pred$1" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="318" count="18" selfTime="44" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="226" count="18" selfTime="28" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="198" count="18" selfTime="118" lineNumber="-1" percent="0.1">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="80" count="50" selfTime="46" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="34" count="50" selfTime="34" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="48" count="18" selfTime="33" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="15" count="18" selfTime="15" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="()Ljason/asSyntax/Literal;" time="137" count="4" selfTime="17" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="107" count="4" selfTime="55" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="43" count="4" selfTime="20" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="9" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Pred$1" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="111" count="20" selfTime="34" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="73" count="18" selfTime="27" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="46" count="18" selfTime="23" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="23" count="18" selfTime="23" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="107" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="105" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="100" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="94" count="2" selfTime="11" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="49" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="23" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="18" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="11" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="18" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="10" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="84" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="80" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="68" count="2" selfTime="14" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="41" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="22" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="16" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="useDerefVars" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)V" time="38" count="2" selfTime="20" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="9" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="useDerefVars" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="8" count="8" selfTime="8" lineNumber="-1" percent="0.0"/>
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Rule" methodName="getBody" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Rule" methodName="isRule" methodSignature="()Z" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="331" count="3" selfTime="37" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="110" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="94" count="2" selfTime="17" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="58" count="2" selfTime="16" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="29" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="19" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="10" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="110" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="109" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="106" count="1" selfTime="8" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="61" count="1" selfTime="10" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="46" count="1" selfTime="21" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="9" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="21" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="13" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="11" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="7" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="63" count="1" selfTime="11" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="39" count="1" selfTime="8" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="21" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="14" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="7" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="8" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="15" count="3" selfTime="7" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="13" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="7" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="638" count="6" selfTime="10" lineNumber="-1" percent="0.3">
                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="628" count="6" selfTime="58" lineNumber="-1" percent="0.3">
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="398" count="3" selfTime="26" lineNumber="-1" percent="0.2">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="365" count="3" selfTime="62" lineNumber="-1" percent="0.2">
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="236" count="4" selfTime="19" lineNumber="-1" percent="0.1">
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="209" count="4" selfTime="40" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="125" count="2" selfTime="18" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="75" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="47" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="43" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="35" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="30" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="23" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="13" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="13" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="26" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="20" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="9" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="14" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="10" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="20" count="3" selfTime="10" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="14" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="10" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="6" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="9" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="102" count="3" selfTime="13" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="78" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="73" count="3" selfTime="66" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="3" selfTime="8" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="34" count="6" selfTime="18" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="16" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="10" count="6" selfTime="10" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="30" count="3" selfTime="7" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="23" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="14" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="8" count="3" selfTime="8" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="138" count="3" selfTime="6" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="132" count="3" selfTime="7" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="114" count="3" selfTime="23" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="66" count="3" selfTime="16" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="35" count="3" selfTime="7" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="26" count="3" selfTime="13" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="6" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="10" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="11" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="7" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="25" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="16" count="3" selfTime="14" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="12" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="7" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="320" count="3" selfTime="23" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="297" count="3" selfTime="42" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="235" count="3" selfTime="60" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="110" count="3" selfTime="23" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="47" count="3" selfTime="33" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="14" count="3" selfTime="14" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="36" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="24" count="3" selfTime="12" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="6" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="37" count="3" selfTime="37" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="9" count="3" selfTime="9" lineNumber="-1" percent="0.0"/>
                      <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="6" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="20" count="3" selfTime="12" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="12" count="2" selfTime="12" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="3" selfTime="6" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="getPlan" methodSignature="()Ljason/asSyntax/Plan;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Plan" methodName="getContext" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Plan" methodName="isAllUnifs" methodSignature="()Z" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="getUnifier" methodSignature="()Ljason/asSemantics/Unifier;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyRelApplPlRule2" methodSignature="(Ljava/lang/String;)V" time="39" count="2" selfTime="23" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="isGoal" methodSignature="()Z" time="11" count="2" selfTime="11" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.runtime.Settings" methodName="requeue" methodSignature="()Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Event" methodName="isInternal" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.runtime.Settings" methodName="retrieve" methodSignature="()Z" time="8" count="2" selfTime="8" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySelEv" methodSignature="()V" time="2957" count="4" selfTime="60" lineNumber="-1" percent="1.3">
              <node leaf="false" class="AgentBrain" methodName="selectEvent" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Event;" time="2875" count="2" selfTime="35" lineNumber="-1" percent="1.2">
                <node leaf="false" class="AgentBrain" methodName="getHighestPriorityEvent" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Event;" time="2794" count="1" selfTime="415" lineNumber="-1" percent="1.2">
                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="1513" count="225" selfTime="182" lineNumber="-1" percent="0.6">
                    <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="1331" count="217" selfTime="150" lineNumber="-1" percent="0.6">
                      <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="1181" count="217" selfTime="260" lineNumber="-1" percent="0.5">
                        <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="goNext" methodSignature="()V" time="615" count="217" selfTime="285" lineNumber="-1" percent="0.3">
                          <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="172" count="386" selfTime="172" lineNumber="-1" percent="0.1"/>
                          <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="89" count="78" selfTime="89" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="54" count="81" selfTime="54" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="12" count="3" selfTime="12" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="306" count="217" selfTime="306" lineNumber="-1" percent="0.1"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="417" count="230" selfTime="193" lineNumber="-1" percent="0.2">
                    <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="hasNext" methodSignature="()Z" time="224" count="219" selfTime="137" lineNumber="-1" percent="0.1">
                      <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="87" count="219" selfTime="87" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="201" count="3" selfTime="11" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljava/util/Iterator;)V" time="164" count="3" selfTime="41" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="goNext" methodSignature="()V" time="79" count="3" selfTime="17" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="52" count="3" selfTime="52" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="7" count="6" selfTime="7" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="27" count="3" selfTime="27" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="10" count="3" selfTime="10" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" time="7" count="3" selfTime="7" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="16" count="3" selfTime="16" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" time="10" count="3" selfTime="10" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.lang.String" methodName="contentEquals" methodSignature="(Ljava/lang/CharSequence;)Z" time="119" count="220" selfTime="119" lineNumber="-1" percent="0.1"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="80" count="220" selfTime="80" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="15" count="4" selfTime="15" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Queue" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="15" count="2" selfTime="15" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" time="12" count="3" selfTime="10" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="toString" methodSignature="()Ljava/lang/String;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSemantics.Event" methodName="getTrigger" methodSignature="()Ljason/asSyntax/Trigger;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerms" methodSignature="()Ljava/util/List;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Queue" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="20" count="2" selfTime="19" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSemantics.Event" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.util.Queue" methodName="size" methodSignature="()I" time="17" count="2" selfTime="17" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.Agent" methodName="selectEvent" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Event;" time="9" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" time="10" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.Agent" methodName="hasCustomSelectOption" methodSignature="()Z" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="removeAtomicEvent" methodSignature="()Ljason/asSemantics/Event;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="hasAtomicIntention" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getEvents" methodSignature="()Ljava/util/Queue;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyRelPl" methodSignature="()V" time="996" count="2" selfTime="17" lineNumber="-1" percent="0.4">
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="relevantPlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" time="979" count="2" selfTime="50" lineNumber="-1" percent="0.4">
                <node leaf="false" class="jason.asSyntax.Plan" methodName="isRelevant" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSemantics/Unifier;)Ljason/asSemantics/Unifier;" time="634" count="3" selfTime="23" lineNumber="-1" percent="0.3">
                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSyntax/Trigger;)Z" time="586" count="3" selfTime="21" lineNumber="-1" percent="0.2">
                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="559" count="3" selfTime="45" lineNumber="-1" percent="0.2">
                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="507" count="3" selfTime="95" lineNumber="-1" percent="0.2">
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="314" count="3" selfTime="12" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="296" count="3" selfTime="30" lineNumber="-1" percent="0.1">
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="241" count="3" selfTime="36" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="122" count="3" selfTime="21" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="72" count="3" selfTime="10" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="62" count="3" selfTime="12" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="47" count="3" selfTime="11" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="36" count="3" selfTime="7" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="26" count="3" selfTime="8" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="16" count="3" selfTime="8" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="15" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="9" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="14" count="3" selfTime="11" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="60" count="3" selfTime="29" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="31" count="3" selfTime="8" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="15" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="7" count="3" selfTime="7" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="9" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="18" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="13" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="38" count="3" selfTime="22" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="11" count="3" selfTime="8" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="11" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="10" count="3" selfTime="10" lineNumber="-1" percent="0.0"/>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="9" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="7" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="9" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Trigger" methodName="sameType" methodSignature="(Ljason/asSyntax/Trigger;)Z" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="25" count="3" selfTime="19" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="3" selfTime="6" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="clone" methodSignature="()Ljason/asSyntax/Trigger;" time="174" count="2" selfTime="10" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" time="134" count="2" selfTime="4" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="130" count="2" selfTime="2" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="128" count="2" selfTime="7" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="120" count="2" selfTime="5" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="114" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="cloneLT" methodSignature="()Ljason/asSyntax/ListTerm;" time="53" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="51" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="21" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="20" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="16" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="13" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="11" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="8" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="19" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="15" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="12" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Pred$1" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="45" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="13" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                              <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" time="30" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="12" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="10" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Trigger" methodName="setTrigOp" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" time="51" count="2" selfTime="17" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="28" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="18" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSemantics.Option" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Plan;Ljason/asSemantics/Unifier;)V" time="17" count="3" selfTime="17" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="17" count="3" selfTime="17" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="10" count="5" selfTime="10" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.LinkedList" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="2" selfTime="9" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="7" count="3" selfTime="7" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.stdlib.wait$WaitEvent" methodName="lambda$resume$e8933e5e$1" methodSignature="(Z)V" time="130" count="1" selfTime="30" lineNumber="-1" percent="0.1">
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="removePendingIntention" methodSignature="(Ljava/lang/String;)Ljason/asSemantics/Intention;" time="33" count="1" selfTime="12" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="17" count="1" selfTime="17" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="removeCurrentStep" methodSignature="()Ljason/asSyntax/Term;" time="24" count="1" selfTime="9" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="14" count="1" selfTime="11" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyNext" methodSignature="()Ljason/asSyntax/PlanBody;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="resumeIntention" methodSignature="(Ljason/asSemantics/Intention;Ljason/asSyntax/Term;)V" time="19" count="1" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)V" time="16" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="11" count="1" selfTime="4" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)Z" time="6" count="1" selfTime="1" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Queue" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="isSuspended" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="16" count="3" selfTime="16" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="13" count="6" selfTime="9" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetDeliberate" methodSignature="()V" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="canSleepDeliberate" methodSignature="()Z" time="30" count="3" selfTime="12" lineNumber="-1" percent="0.0">
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" time="6" count="3" selfTime="4" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="canSleep" methodSignature="()Z" time="5" count="1" selfTime="3" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedEvent" methodSignature="()Ljason/asSemantics/Event;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="jason.architecture.AgArch" methodName="reasoningCycleStarting" methodSignature="()V" time="20140" count="3" selfTime="20140" lineNumber="-1" percent="8.5"/>
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="sense" methodSignature="()V" time="3743" count="3" selfTime="25" lineNumber="-1" percent="1.6">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="sense" methodSignature="()V" time="3697" count="3" selfTime="99" lineNumber="-1" percent="1.6">
          <node leaf="false" class="jason.asSemantics.Agent" methodName="buf" methodSignature="(Ljava/util/Collection;)I" time="3306" count="3" selfTime="200" lineNumber="-1" percent="1.4">
            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="add" methodSignature="(Ljason/asSyntax/Literal;)Z" time="1004" count="4" selfTime="8" lineNumber="-1" percent="0.4">
              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="add" methodSignature="(Ljason/asSyntax/Literal;Z)Z" time="996" count="4" selfTime="51" lineNumber="-1" percent="0.4">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="339" count="4" selfTime="43" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="255" count="4" selfTime="5" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="250" count="4" selfTime="97" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="87" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="81" count="4" selfTime="51" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.String" methodName="compareTo" methodSignature="(Ljava/lang/String;)I" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isNumeric" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="compareTo" methodSignature="(Ljava/lang/String;)I" time="16" count="4" selfTime="16" lineNumber="-1" percent="0.0"/>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="14" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="12" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isNumeric" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="18" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="15" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="12" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="12" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="8" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Pred" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" time="231" count="4" selfTime="5" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="226" count="4" selfTime="4" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="222" count="4" selfTime="9" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="212" count="4" selfTime="6" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="204" count="4" selfTime="21" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="cloneLT" methodSignature="()Ljason/asSyntax/ListTerm;" time="106" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="97" count="4" selfTime="22" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="40" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="36" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="23" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="19" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="14" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="11" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="30" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="24" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="17" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="16" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Pred$1" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="60" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="17" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="9" count="5" selfTime="6" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="7" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="6" count="3" selfTime="6" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="14" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="provideBelEntry" methodSignature="(Ljason/asSyntax/Literal;)Ljason/bb/DefaultBeliefBase$BelEntry;" time="143" count="4" selfTime="10" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;)V" time="53" count="2" selfTime="32" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.concurrent.LinkedBlockingDeque" methodName="&lt;init&gt;" methodSignature="()V" time="15" count="2" selfTime="15" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.concurrent.ConcurrentHashMap" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="43" count="6" selfTime="17" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="18" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="15" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="21" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="11" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="contains" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSyntax/Literal;" time="124" count="4" selfTime="21" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="61" count="4" selfTime="27" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="24" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="16" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="23" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="14" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="contains" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSyntax/Literal;" time="18" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="15" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="add" methodSignature="(Ljason/asSyntax/Literal;Z)V" time="88" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="addFirst" methodSignature="(Ljava/lang/Object;)V" time="41" count="4" selfTime="41" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="34" count="4" selfTime="25" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="9" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Set" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="18" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="canBeAddedInBB" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="java.util.Iterator" methodName="remove" methodSignature="()V" time="517" count="3" selfTime="9" lineNumber="-1" percent="0.2">
              <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="remove" methodSignature="()V" time="508" count="3" selfTime="27" lineNumber="-1" percent="0.2">
                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="removeFromEntry" methodSignature="(Ljason/asSyntax/Literal;)Z" time="370" count="3" selfTime="50" lineNumber="-1" percent="0.2">
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="remove" methodSignature="(Ljason/asSyntax/Literal;)V" time="134" count="3" selfTime="20" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="58" count="3" selfTime="31" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="18" count="3" selfTime="10" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="equalsAsStructure" methodSignature="(Ljava/lang/Object;)Z" time="8" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="9" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="java.util.Deque" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="48" count="3" selfTime="36" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="8" count="3" selfTime="8" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSource" methodSignature="()Z" time="97" count="3" selfTime="15" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="58" count="3" selfTime="21" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="37" count="3" selfTime="17" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="20" count="3" selfTime="20" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="24" count="3" selfTime="12" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" time="12" count="3" selfTime="10" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="49" count="3" selfTime="15" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="31" count="1" selfTime="10" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="1" selfTime="12" lineNumber="-1" percent="0.0"/>
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="7" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="15" count="2" selfTime="14" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="isEmpty" methodSignature="()Z" time="14" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="13" count="3" selfTime="13" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="9" count="3" selfTime="9" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Pred" methodName="delAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="90" count="3" selfTime="19" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="71" count="3" selfTime="41" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="setValuesFrom" methodSignature="(Ljason/asSyntax/ListTerm;)V" time="18" count="3" selfTime="13" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="9" count="6" selfTime="9" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Pred" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="java.util.Iterator" methodName="remove" methodSignature="()V" time="21" count="3" selfTime="17" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="270" count="4" selfTime="48" lineNumber="-1" percent="0.1">
              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="92" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="81" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="75" count="4" selfTime="60" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="15" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="35" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="23" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="16" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="11" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="35" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="26" count="4" selfTime="15" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="11" count="4" selfTime="11" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="31" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="27" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="18" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="14" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="11" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="14" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="12" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="updateEvents" methodSignature="(Ljason/asSemantics/Event;)V" time="238" count="4" selfTime="45" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="hasCandidatePlan" methodSignature="(Ljason/asSyntax/Trigger;)Z" time="140" count="4" selfTime="5" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" time="135" count="4" selfTime="14" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="84" count="4" selfTime="26" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="20" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="15" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="10" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Trigger$TEType$1" methodName="toString" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Trigger$TEOperator$1" methodName="toString" methodSignature="()Ljava/lang/String;" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="23" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addEvent" methodSignature="(Ljason/asSemantics/Event;)V" time="36" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="21" count="2" selfTime="21" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSemantics.Event" methodName="isAtomic" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="9" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.Event" methodName="isInternal" methodSignature="()Z" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Agent" methodName="getPL" methodSignature="()Ljason/asSyntax/PlanLibrary;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="hasCandidatePlan" methodSignature="(Ljason/asSyntax/Trigger;)Z" time="226" count="3" selfTime="8" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" time="218" count="3" selfTime="49" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="141" count="3" selfTime="49" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="23" count="3" selfTime="10" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="13" count="3" selfTime="7" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="22" count="3" selfTime="16" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.Trigger$TEType$1" methodName="toString" methodSignature="()Ljava/lang/String;" time="6" count="3" selfTime="6" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="13" count="6" selfTime="13" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="3" selfTime="11" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Trigger$TEOperator$2" methodName="toString" methodSignature="()Ljava/lang/String;" time="7" count="3" selfTime="7" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="7" count="3" selfTime="7" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="17" count="3" selfTime="17" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="9" count="3" selfTime="9" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" time="163" count="7" selfTime="74" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="79" count="7" selfTime="18" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="61" count="7" selfTime="15" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="46" count="7" selfTime="14" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="32" count="7" selfTime="25" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="7" selfTime="7" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="setTrigOp" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;)V" time="7" count="7" selfTime="7" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="1" count="7" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="java.util.Set" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="160" count="7" selfTime="31" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="113" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="equalsAsStructure" methodSignature="(Ljava/lang/Object;)Z" time="109" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="103" count="4" selfTime="44" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="24" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="isAtom" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="11" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="10" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="16" count="7" selfTime="7" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="7" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" time="136" count="4" selfTime="11" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="125" count="4" selfTime="16" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="109" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="94" count="4" selfTime="14" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="78" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="67" count="4" selfTime="21" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="17" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="9" count="5" selfTime="8" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="7" count="4" selfTime="7" lineNumber="-1" percent="0.0"/>
                        <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="5" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getPercepts" methodSignature="()Ljava/util/Iterator;" time="81" count="1" selfTime="16" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="46" count="1" selfTime="46" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.bb.DefaultBeliefBase$1" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljava/util/Iterator;)V" time="19" count="1" selfTime="19" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="java.util.Set" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="76" count="8" selfTime="34" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="42" count="8" selfTime="32" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="10" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="50" count="22" selfTime="27" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="hasNext" methodSignature="()Z" time="23" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="10" count="8" selfTime="10" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="50" count="19" selfTime="22" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="28" count="7" selfTime="10" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="18" count="7" selfTime="9" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="7" selfTime="9" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.Literal" methodName="forceFullLiteralImpl" methodSignature="()Ljason/asSyntax/Literal;" time="33" count="4" selfTime="10" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="isAtom" methodSignature="()Z" time="23" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="isAtom" methodSignature="()Z" time="19" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="isAtom" methodSignature="()Z" time="15" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" time="9" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node leaf="true" class="jason.asSemantics.Event" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSemantics/Intention;)V" time="28" count="4" selfTime="28" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="26" count="15" selfTime="26" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.HashSet" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="1" selfTime="9" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="9" count="1" selfTime="9" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="8" count="3" selfTime="3" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getC" methodSignature="()Ljason/asSemantics/Circumstance;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.Literal" methodName="subjectToBUF" methodSignature="()Z" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="perceive" methodSignature="()Ljava/util/Collection;" time="188" count="3" selfTime="35" lineNumber="-1" percent="0.1">
            <node leaf="false" class="jason.environment.Environment" methodName="getPercepts" methodSignature="(Ljava/lang/String;)Ljava/util/Collection;" time="142" count="3" selfTime="26" lineNumber="-1" percent="0.1">
              <node leaf="true" class="java.util.Set" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="32" count="1" selfTime="32" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="24" count="3" selfTime="24" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.Collection" methodName="addAll" methodSignature="(Ljava/util/Collection;)Z" time="20" count="1" selfTime="20" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="18" count="1" selfTime="18" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="11" count="1" selfTime="11" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="9" count="1" selfTime="9" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="6" count="3" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.architecture.AgArch" methodName="perceive" methodSignature="()Ljava/util/Collection;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="getAgName" methodSignature="()Ljava/lang/String;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySemanticRuleSense" methodSignature="()V" time="44" count="3" selfTime="15" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyProcMsg" methodSignature="()V" time="29" count="3" selfTime="10" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasMsg" methodSignature="()Z" time="19" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="16" count="3" selfTime="16" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="checkMail" methodSignature="()V" time="30" count="3" selfTime="16" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="13" count="3" selfTime="13" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="16" count="3" selfTime="16" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="13" count="6" selfTime="10" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.runtime.Settings" methodName="nrcbp" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="21" count="3" selfTime="21" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="act" methodSignature="()V" time="881" count="3" selfTime="11" lineNumber="-1" percent="0.4">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="act" methodSignature="()V" time="845" count="2" selfTime="27" lineNumber="-1" percent="0.4">
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="act" methodSignature="(Ljason/asSemantics/ActionExec;)V" time="462" count="1" selfTime="6" lineNumber="-1" percent="0.2">
            <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="act" methodSignature="(Ljava/lang/String;Ljason/asSemantics/ActionExec;)V" time="456" count="1" selfTime="7" lineNumber="-1" percent="0.2">
              <node leaf="false" class="jason.environment.Environment" methodName="scheduleAction" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Structure;Ljava/lang/Object;)V" time="448" count="1" selfTime="8" lineNumber="-1" percent="0.2">
                <node leaf="true" class="java.util.concurrent.ExecutorService" methodName="execute" methodSignature="(Ljava/lang/Runnable;)V" time="432" count="1" selfTime="432" lineNumber="-1" percent="0.2"/>
                <node leaf="true" class="jason.environment.Environment$1" methodName="&lt;init&gt;" methodSignature="(Ljason/environment/Environment;Ljava/lang/String;Ljason/asSyntax/Structure;Ljava/lang/Object;)V" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getActionTerm" methodSignature="()Ljason/asSyntax/Structure;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySemanticRuleAct" methodSignature="()V" time="314" count="6" selfTime="9" lineNumber="-1" percent="0.1">
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyExecInt" methodSignature="()V" time="262" count="1" selfTime="48" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="197" count="1" selfTime="6" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="191" count="1" selfTime="5" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="186" count="1" selfTime="9" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="177" count="1" selfTime="27" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="79" count="1" selfTime="28" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="41" count="1" selfTime="8" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="33" count="1" selfTime="8" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="16" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="48" count="1" selfTime="17" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="27" count="1" selfTime="12" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="14" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="1" selfTime="9" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="11" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="true" class="jason.asSemantics.ActionExec" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Intention;)V" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getCurrentStep" methodSignature="()Ljason/asSyntax/PlanBody;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyType" methodSignature="()Ljason/asSyntax/PlanBody$BodyType;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySelInt" methodSignature="()V" time="30" count="2" selfTime="17" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.Agent" methodName="selectIntention" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Intention;" time="9" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="()Z" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="removeAtomicIntention" methodSignature="()Ljason/asSemantics/Intention;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyProcAct" methodSignature="()V" time="7" count="2" selfTime="5" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyClrInt" methodSignature="(Ljason/asSemantics/Intention;)V" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addPendingAction" methodSignature="(Ljason/asSemantics/ActionExec;)V" time="35" count="1" selfTime="14" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getActionTerm" methodSignature="()Ljason/asSyntax/Structure;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getIntention" methodSignature="()Ljason/asSemantics/Intention;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="getId" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="setSuspendedReason" methodSignature="(Ljason/asSyntax/Term;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="5" selfTime="3" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetAct" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getAction" methodSignature="()Ljason/asSemantics/ActionExec;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="canSleepAct" methodSignature="()Z" time="22" count="3" selfTime="13" lineNumber="-1" percent="0.0">
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="()Z" time="5" count="3" selfTime="4" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="canSleep" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="26" count="6" selfTime="26" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasMsg" methodSignature="()Z" time="214" count="4" selfTime="140" lineNumber="-1" percent="0.1">
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="74" count="4" selfTime="74" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.environment.Environment" methodName="getPercepts" methodSignature="(Ljava/lang/String;)Ljava/util/Collection;" time="87" count="1" selfTime="22" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="65" count="1" selfTime="65" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="canSleep" methodSignature="()Z" time="70" count="3" selfTime="41" lineNumber="-1" percent="0.0">
      <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" time="7" count="3" selfTime="4" lineNumber="-1" percent="0.0">
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="canSleep" methodSignature="()Z" time="7" count="3" selfTime="4" lineNumber="-1" percent="0.0">
        <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="jason.asSemantics.Circumstance" methodName="hasMsg" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
      <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="()Z" time="3" count="3" selfTime="2" lineNumber="-1" percent="0.0">
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="jason.asSemantics.Circumstance" methodName="isAtomicIntentionSuspended" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
      <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="3" count="3" selfTime="2" lineNumber="-1" percent="0.0">
        <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="sleep" methodSignature="()V" time="63" count="3" selfTime="32" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.lang.Object" methodName="wait" methodSignature="(J)V" time="29" count="3" selfTime="29" lineNumber="-1" percent="0.0"/>
      <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="true" class="jason.runtime.Settings" methodName="isSync" methodSignature="()Z" time="58" count="6" selfTime="58" lineNumber="-1" percent="0.0"/>
    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" time="44" count="4" selfTime="37" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="7" count="4" selfTime="7" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetSense" methodSignature="()V" time="40" count="2" selfTime="40" lineNumber="-1" percent="0.0"/>
    <node leaf="false" class="jason.architecture.AgArch" methodName="incCycleNumber" methodSignature="()V" time="28" count="4" selfTime="23" lineNumber="-1" percent="0.0">
      <node leaf="true" class="jason.architecture.AgArch" methodName="setCycleNumber" methodSignature="(I)V" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="()Z" time="28" count="5" selfTime="22" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="6" count="5" selfTime="6" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" time="22" count="5" selfTime="16" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="6" count="5" selfTime="6" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getSettings" methodSignature="()Ljason/runtime/Settings;" time="20" count="4" selfTime="20" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.infra.centralised.CentralisedEnvironment" methodName="getUserEnvironment" methodSignature="()Ljason/environment/Environment;" time="16" count="1" selfTime="16" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSyntax.PlanLibrary" methodName="hasJagPlans" methodSignature="()Z" time="15" count="1" selfTime="15" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Agent" methodName="buf" methodSignature="(Ljava/util/Collection;)I" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.runtime.Settings" methodName="nrcbp" methodSignature="()I" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="7" count="4" selfTime="7" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedEvent" methodSignature="()Ljason/asSemantics/Event;" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedIntention" methodSignature="()Ljason/asSemantics/Intention;" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="isAtomicIntentionSuspended" methodSignature="()Z" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getAction" methodSignature="()Ljason/asSemantics/ActionExec;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetAct" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="removeAtomicIntention" methodSignature="()Ljason/asSemantics/Intention;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
  </node>
</tree>