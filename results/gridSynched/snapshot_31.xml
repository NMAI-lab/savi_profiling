<?xml version="1.0" encoding="UTF-8"?>
<tree type="Call Tree" threadSelection="All thread groups" threadStatus="Runnable" aggregationLevel="Methods">
  <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="run" methodSignature="()V" time="176258" count="1" selfTime="3992" lineNumber="-1" percent="50.6">
    <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="reasoningCycle" methodSignature="()V" time="170861" count="32" selfTime="55882" lineNumber="-1" percent="49.0">
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="deliberate" methodSignature="()V" time="75689" count="31" selfTime="85" lineNumber="-1" percent="21.7">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="deliberate" methodSignature="()V" time="75407" count="18" selfTime="154" lineNumber="-1" percent="21.6">
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySemanticRuleDeliberate" methodSignature="()V" time="74908" count="56" selfTime="81" lineNumber="-1" percent="21.5">
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyApplPl" methodSignature="()V" time="66551" count="11" selfTime="91" lineNumber="-1" percent="19.1">
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applicablePlans" methodSignature="(Ljava/util/List;)Ljava/util/List;" time="66391" count="11" selfTime="218" lineNumber="-1" percent="19.0">
                <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="65240" count="52" selfTime="59" lineNumber="-1" percent="18.7">
                  <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="65052" count="18" selfTime="17" lineNumber="-1" percent="18.7">
                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="65035" count="18" selfTime="64" lineNumber="-1" percent="18.7">
                      <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="64454" count="58" selfTime="57" lineNumber="-1" percent="18.5">
                        <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="61789" count="26" selfTime="11" lineNumber="-1" percent="17.7">
                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="61778" count="13" selfTime="53" lineNumber="-1" percent="17.7">
                            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="61043" count="43" selfTime="32" lineNumber="-1" percent="17.5">
                              <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="45496" count="14" selfTime="13" lineNumber="-1" percent="13.1">
                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="45483" count="7" selfTime="37" lineNumber="-1" percent="13.0">
                                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="44857" count="30" selfTime="35" lineNumber="-1" percent="12.9">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="38712" count="10" selfTime="6" lineNumber="-1" percent="11.1">
                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="38706" count="6" selfTime="13" lineNumber="-1" percent="11.1">
                                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="38629" count="10" selfTime="11" lineNumber="-1" percent="11.1">
                                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="37689" count="6" selfTime="3" lineNumber="-1" percent="10.8">
                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="37686" count="6" selfTime="144" lineNumber="-1" percent="10.8">
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="31866" count="32" selfTime="43" lineNumber="-1" percent="9.1">
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="31791" count="8" selfTime="7" lineNumber="-1" percent="9.1">
                                                  <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="31784" count="8" selfTime="37" lineNumber="-1" percent="9.1">
                                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="31421" count="30" selfTime="31" lineNumber="-1" percent="9.0">
                                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="19491" count="16" selfTime="9" lineNumber="-1" percent="5.6">
                                                        <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="19482" count="8" selfTime="32" lineNumber="-1" percent="5.6">
                                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="19155" count="30" selfTime="35" lineNumber="-1" percent="5.5">
                                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="19120" count="30" selfTime="27" lineNumber="-1" percent="5.5">
                                                              <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="19093" count="22" selfTime="664" lineNumber="-1" percent="5.5">
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="15240" count="212" selfTime="711" lineNumber="-1" percent="4.4">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="14254" count="212" selfTime="1996" lineNumber="-1" percent="4.1">
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="9623" count="228" selfTime="583" lineNumber="-1" percent="2.8">
                                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="8810" count="228" selfTime="1004" lineNumber="-1" percent="2.5">
                                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="5600" count="241" selfTime="558" lineNumber="-1" percent="1.6">
                                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="4815" count="241" selfTime="1665" lineNumber="-1" percent="1.4">
                                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1079" count="29" selfTime="74" lineNumber="-1" percent="0.3">
                                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="978" count="29" selfTime="226" lineNumber="-1" percent="0.3">
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="280" count="8" selfTime="34" lineNumber="-1" percent="0.1">
                                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="168" count="8" selfTime="17" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="112" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="101" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="86" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                                                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="76" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="61" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="45" count="8" selfTime="30" lineNumber="-1" percent="0.0">
                                                                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                                </node>
                                                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                              </node>
                                                                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                                            </node>
                                                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                                          </node>
                                                                                        </node>
                                                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="28" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="17" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="10" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                        </node>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="11" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="60" count="8" selfTime="14" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="46" count="8" selfTime="16" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="25" count="8" selfTime="19" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                      </node>
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="177" count="5" selfTime="43" lineNumber="-1" percent="0.1">
                                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="80" count="5" selfTime="27" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="34" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="27" count="5" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="14" count="5" selfTime="9" lineNumber="-1" percent="0.0">
                                                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                        </node>
                                                                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                        </node>
                                                                                      </node>
                                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="13" count="5" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="7" count="5" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="isUnary" methodSignature="()Z" time="12" count="5" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="5" selfTime="1" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="11" count="10" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="10" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="5" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="9" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="5" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="7" count="10" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.ArithExpr$ArithmeticOp$2" methodName="eval" methodSignature="(DD)D" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.ArithExpr$ArithmeticOp$3" methodName="eval" methodSignature="(DD)D" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="57" count="11" selfTime="42" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="6" count="11" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="6" count="22" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="3" count="11" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="39" count="10" selfTime="21" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="11" count="10" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="7" count="20" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="29" count="20" selfTime="20" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="9" count="20" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="26" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="18" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="11" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="20" count="45" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="16" count="10" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="15" count="50" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="13" count="20" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="12" count="20" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="12" count="40" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="12" count="8" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="20" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="8" count="20" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="6" count="11" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="6" count="20" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="3" count="11" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ArithFunctionTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="19" count="71" selfTime="19" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="302" count="8" selfTime="49" lineNumber="-1" percent="0.1">
                                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="185" count="8" selfTime="24" lineNumber="-1" percent="0.1">
                                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="114" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="106" count="8" selfTime="16" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="87" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="78" count="8" selfTime="18" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="58" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                                                                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="39" count="8" selfTime="19" lineNumber="-1" percent="0.0">
                                                                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="17" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                                            </node>
                                                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                          </node>
                                                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                                        </node>
                                                                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="32" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="26" count="8" selfTime="17" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="15" count="8" selfTime="14" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="54" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="46" count="8" selfTime="18" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="22" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="234" count="466" selfTime="234" lineNumber="-1" percent="0.1"/>
                                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="185" count="450" selfTime="185" lineNumber="-1" percent="0.1"/>
                                                                            <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="182" count="2" selfTime="78" lineNumber="-1" percent="0.1">
                                                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="55" count="2" selfTime="14" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="28" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="20" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="11" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="15" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="9" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="isUnary" methodSignature="()Z" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.ArithExpr$ArithmeticOp$2" methodName="eval" methodSignature="(DD)D" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="159" count="424" selfTime="159" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="156" count="468" selfTime="156" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="152" count="424" selfTime="152" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="143" count="450" selfTime="143" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="130" count="225" selfTime="130" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="103" count="225" selfTime="103" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="102" count="29" selfTime="50" lineNumber="-1" percent="0.0">
                                                                              <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="35" count="29" selfTime="28" lineNumber="-1" percent="0.0">
                                                                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="29" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="17" count="58" selfTime="17" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="78" count="14" selfTime="23" lineNumber="-1" percent="0.0">
                                                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="54" count="14" selfTime="17" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="20" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="8" count="12" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="17" count="14" selfTime="12" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="14" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="35" count="26" selfTime="23" lineNumber="-1" percent="0.0">
                                                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="12" count="26" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="25" count="72" selfTime="25" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="19" count="52" selfTime="19" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="15" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                                                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="14" count="26" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="12" count="34" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="9" count="26" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.ArithFunctionTerm" methodName="isArithExpr" methodSignature="()Z" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="5" count="14" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="3" count="14" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="219" count="695" selfTime="219" lineNumber="-1" percent="0.1"/>
                                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="8" count="28" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="1593" count="212" selfTime="285" lineNumber="-1" percent="0.5">
                                                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="1242" count="212" selfTime="340" lineNumber="-1" percent="0.4">
                                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="684" count="212" selfTime="432" lineNumber="-1" percent="0.2">
                                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="132" count="424" selfTime="132" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="120" count="212" selfTime="120" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="218" count="212" selfTime="144" lineNumber="-1" percent="0.1">
                                                                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="74" count="212" selfTime="74" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="66" count="212" selfTime="66" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="113" count="212" selfTime="113" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="97" count="212" selfTime="97" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="92" count="244" selfTime="92" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="80" count="244" selfTime="80" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="54" count="16" selfTime="18" lineNumber="-1" percent="0.0">
                                                                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="21" count="16" selfTime="14" lineNumber="-1" percent="0.0">
                                                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="15" count="32" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="46" count="32" selfTime="33" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="13" count="32" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="45" count="90" selfTime="45" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="35" count="64" selfTime="35" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="17" count="32" selfTime="17" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="10" count="32" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="6" count="32" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="141" count="424" selfTime="141" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="89" count="260" selfTime="89" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="712" count="212" selfTime="304" lineNumber="-1" percent="0.2">
                                                                      <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="270" count="212" selfTime="199" lineNumber="-1" percent="0.1">
                                                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="71" count="212" selfTime="71" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="138" count="424" selfTime="138" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="486" count="456" selfTime="328" lineNumber="-1" percent="0.1">
                                                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="158" count="456" selfTime="158" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="425" count="424" selfTime="284" lineNumber="-1" percent="0.1">
                                                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="141" count="424" selfTime="141" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="149" count="424" selfTime="149" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="142" count="424" selfTime="142" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="139" count="424" selfTime="139" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="138" count="424" selfTime="138" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="136" count="424" selfTime="136" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="122" count="424" selfTime="122" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="94" count="212" selfTime="94" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="77" count="212" selfTime="77" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="15" count="10" selfTime="13" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="162" count="636" selfTime="162" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="113" count="444" selfTime="113" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="1939" count="212" selfTime="224" lineNumber="-1" percent="0.6">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="1403" count="212" selfTime="166" lineNumber="-1" percent="0.4">
                                                                    <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="1237" count="212" selfTime="631" lineNumber="-1" percent="0.4">
                                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="606" count="712" selfTime="393" lineNumber="-1" percent="0.2">
                                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="213" count="712" selfTime="213" lineNumber="-1" percent="0.1"/>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="312" count="212" selfTime="208" lineNumber="-1" percent="0.1">
                                                                    <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="104" count="212" selfTime="104" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="689" count="212" selfTime="180" lineNumber="-1" percent="0.2">
                                                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="509" count="212" selfTime="191" lineNumber="-1" percent="0.1">
                                                                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="318" count="212" selfTime="179" lineNumber="-1" percent="0.1">
                                                                      <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="139" count="212" selfTime="139" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="478" count="224" selfTime="209" lineNumber="-1" percent="0.1">
                                                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="269" count="224" selfTime="167" lineNumber="-1" percent="0.1">
                                                                    <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="102" count="224" selfTime="102" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="69" count="212" selfTime="69" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="14" count="22" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="230" count="8" selfTime="55" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="129" count="8" selfTime="23" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="70" count="8" selfTime="17" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="47" count="8" selfTime="26" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="10" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="25" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="12" count="8" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="13" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="8" count="8" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="39" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="29" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="19" count="8" selfTime="19" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="26" count="10" selfTime="12" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="14" count="10" selfTime="8" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="11899" count="14" selfTime="17" lineNumber="-1" percent="3.4">
                                                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="11882" count="14" selfTime="432" lineNumber="-1" percent="3.4">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="9263" count="153" selfTime="526" lineNumber="-1" percent="2.7">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="8526" count="153" selfTime="1425" lineNumber="-1" percent="2.4">
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="5176" count="167" selfTime="428" lineNumber="-1" percent="1.5">
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="4586" count="167" selfTime="594" lineNumber="-1" percent="1.3">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2531" count="167" selfTime="381" lineNumber="-1" percent="0.7">
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2003" count="167" selfTime="1079" lineNumber="-1" percent="0.6">
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="132" count="334" selfTime="132" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="120" count="334" selfTime="120" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="112" count="334" selfTime="112" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="111" count="334" selfTime="111" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="99" count="334" selfTime="99" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="98" count="334" selfTime="98" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="84" count="22" selfTime="37" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="31" count="22" selfTime="22" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="22" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="16" count="44" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="78" count="167" selfTime="78" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="64" count="167" selfTime="64" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="15" count="44" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="11" count="22" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="147" count="501" selfTime="147" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="1235" count="167" selfTime="198" lineNumber="-1" percent="0.4">
                                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="981" count="167" selfTime="307" lineNumber="-1" percent="0.3">
                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="489" count="167" selfTime="327" lineNumber="-1" percent="0.1">
                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="85" count="334" selfTime="85" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="77" count="167" selfTime="77" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="185" count="167" selfTime="128" lineNumber="-1" percent="0.1">
                                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="57" count="167" selfTime="57" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="56" count="167" selfTime="56" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="64" count="167" selfTime="64" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="60" count="167" selfTime="60" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="58" count="167" selfTime="58" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="44" count="167" selfTime="44" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="110" count="334" selfTime="110" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="52" count="167" selfTime="52" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="529" count="153" selfTime="229" lineNumber="-1" percent="0.2">
                                                                <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="208" count="153" selfTime="149" lineNumber="-1" percent="0.1">
                                                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="59" count="153" selfTime="59" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="92" count="306" selfTime="92" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="363" count="306" selfTime="216" lineNumber="-1" percent="0.1">
                                                                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="147" count="306" selfTime="147" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="319" count="334" selfTime="227" lineNumber="-1" percent="0.1">
                                                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="92" count="334" selfTime="92" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="124" count="306" selfTime="124" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="95" count="306" selfTime="95" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="94" count="153" selfTime="94" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="93" count="306" selfTime="93" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="93" count="306" selfTime="93" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="78" count="306" selfTime="78" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="74" count="306" selfTime="74" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="50" count="153" selfTime="50" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="13" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="109" count="459" selfTime="109" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="102" count="322" selfTime="102" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="1246" count="153" selfTime="165" lineNumber="-1" percent="0.4">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="840" count="153" selfTime="125" lineNumber="-1" percent="0.2">
                                                              <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="715" count="153" selfTime="413" lineNumber="-1" percent="0.2">
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="302" count="367" selfTime="207" lineNumber="-1" percent="0.1">
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="95" count="367" selfTime="95" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="241" count="153" selfTime="173" lineNumber="-1" percent="0.1">
                                                              <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="68" count="153" selfTime="68" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="545" count="153" selfTime="133" lineNumber="-1" percent="0.2">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="412" count="153" selfTime="151" lineNumber="-1" percent="0.1">
                                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="261" count="153" selfTime="128" lineNumber="-1" percent="0.1">
                                                                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="133" count="153" selfTime="133" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="341" count="159" selfTime="163" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="178" count="159" selfTime="105" lineNumber="-1" percent="0.1">
                                                              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="73" count="159" selfTime="73" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="47" count="153" selfTime="47" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="8" count="14" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="274" count="8" selfTime="8" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="266" count="8" selfTime="18" lineNumber="-1" percent="0.1">
                                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="231" count="8" selfTime="51" lineNumber="-1" percent="0.1">
                                                          <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="131" count="8" selfTime="34" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="67" count="8" selfTime="14" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="49" count="8" selfTime="27" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="10" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="22" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="9" count="8" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="12" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="9" count="8" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="17" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="11" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="28" count="10" selfTime="12" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="13" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="24" count="8" selfTime="14" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="10" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="32" count="24" selfTime="18" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="14" count="24" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="3840" count="22" selfTime="94" lineNumber="-1" percent="1.1">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="3710" count="22" selfTime="331" lineNumber="-1" percent="1.1">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2962" count="66" selfTime="192" lineNumber="-1" percent="0.8">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2702" count="66" selfTime="348" lineNumber="-1" percent="0.8">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="1934" count="46" selfTime="306" lineNumber="-1" percent="0.6">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="949" count="46" selfTime="115" lineNumber="-1" percent="0.3">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="554" count="42" selfTime="55" lineNumber="-1" percent="0.2">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="499" count="42" selfTime="72" lineNumber="-1" percent="0.1">
                                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="406" count="42" selfTime="41" lineNumber="-1" percent="0.1">
                                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="365" count="42" selfTime="76" lineNumber="-1" percent="0.1">
                                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="266" count="42" selfTime="77" lineNumber="-1" percent="0.1">
                                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="174" count="42" selfTime="78" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="79" count="42" selfTime="48" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="31" count="42" selfTime="31" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="17" count="42" selfTime="17" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="15" count="42" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="23" count="42" selfTime="23" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="21" count="42" selfTime="21" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="147" count="46" selfTime="52" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="95" count="46" selfTime="43" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="52" count="46" selfTime="39" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="13" count="46" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="92" count="46" selfTime="47" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="45" count="46" selfTime="45" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="41" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="30" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="26" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="21" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="16" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="14" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="9" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="272" count="46" selfTime="54" lineNumber="-1" percent="0.1">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="218" count="46" selfTime="84" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="108" count="46" selfTime="62" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="27" count="46" selfTime="27" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="19" count="46" selfTime="19" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="14" count="46" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="12" count="46" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="235" count="46" selfTime="128" lineNumber="-1" percent="0.1">
                                                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="75" count="46" selfTime="54" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="21" count="46" selfTime="21" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="32" count="92" selfTime="32" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="31" count="46" selfTime="31" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="31" count="46" selfTime="31" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="27" count="46" selfTime="27" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="21" count="46" selfTime="21" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="20" count="46" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="19" count="46" selfTime="19" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="14" count="46" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="9" count="46" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="163" count="50" selfTime="50" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="112" count="50" selfTime="49" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="54" count="50" selfTime="40" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="14" count="50" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="57" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="46" count="4" selfTime="21" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="9" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="38" count="82" selfTime="38" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="25" count="82" selfTime="25" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="20" count="50" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="18" count="50" selfTime="18" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="16" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="16" count="32" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="14" count="32" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="14" count="32" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="13" count="32" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="13" count="16" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="48" count="138" selfTime="48" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="20" count="60" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="137" count="132" selfTime="83" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="54" count="132" selfTime="54" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="104" count="22" selfTime="48" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="28" count="44" selfTime="28" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="28" count="22" selfTime="17" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="11" count="22" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="49" count="44" selfTime="35" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="14" count="44" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="22" count="44" selfTime="22" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="18" count="44" selfTime="18" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="18" count="44" selfTime="18" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="17" count="44" selfTime="17" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="15" count="22" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="11" count="44" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="11" count="10" selfTime="6" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="8" count="22" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="7" count="44" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="22" count="64" selfTime="22" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="14" count="66" selfTime="14" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="600" count="6" selfTime="5" lineNumber="-1" percent="0.2">
                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="595" count="6" selfTime="9" lineNumber="-1" percent="0.2">
                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="582" count="6" selfTime="12" lineNumber="-1" percent="0.2">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="567" count="6" selfTime="57" lineNumber="-1" percent="0.2">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="385" count="18" selfTime="124" lineNumber="-1" percent="0.1">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="151" count="18" selfTime="29" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="116" count="18" selfTime="28" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="66" count="16" selfTime="44" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="14" count="32" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="22" count="18" selfTime="17" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="18" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="32" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="25" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="17" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="17" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="12" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="24" count="16" selfTime="17" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="14" count="32" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="12" count="16" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="9" count="18" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="51" count="6" selfTime="21" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="24" count="6" selfTime="12" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="33" count="18" selfTime="23" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="10" count="18" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="17" count="18" selfTime="17" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="10" count="6" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="9" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="()Ljason/asSyntax/Literal;" time="483" count="8" selfTime="18" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="449" count="8" selfTime="13" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="427" count="8" selfTime="47" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="varToReplace" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)Ljason/asSyntax/VarTerm;" time="278" count="2" selfTime="48" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/VarTerm;)V" time="107" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="73" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="22" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="19" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="15" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="14" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="10" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="20" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="15" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="11" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="18" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="13" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="11" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="10" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="11" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.UnnamedVar" methodName="isUnnamedVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="11" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="8" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;)V" time="102" count="2" selfTime="19" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;I)V" time="69" count="2" selfTime="17" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="16" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="13" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="10" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="8" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(I)Ljava/lang/StringBuilder;" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="java.util.concurrent.atomic.AtomicInteger" methodName="incrementAndGet" methodSignature="()I" time="14" count="2" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="16" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="13" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="10" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="34" count="24" selfTime="23" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="11" count="24" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="33" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="21" count="8" selfTime="21" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="setTerm" methodSignature="(ILjason/asSyntax/Term;)V" time="20" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.util.List" methodName="set" methodSignature="(ILjava/lang/Object;)Ljava/lang/Object;" time="14" count="2" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="7" count="22" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Pred$1" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="16" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="324" count="8" selfTime="10" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="314" count="8" selfTime="19" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="275" count="8" selfTime="62" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="146" count="8" selfTime="22" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="89" count="8" selfTime="38" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="47" count="8" selfTime="22" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="10" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="24" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="11" count="8" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="29" count="8" selfTime="21" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="8" count="8" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="10" count="8" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="9" count="8" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="20" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="10" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Rule" methodName="headCApply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="240" count="2" selfTime="1" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="239" count="2" selfTime="3" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="236" count="2" selfTime="4" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="232" count="2" selfTime="8" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="97" count="2" selfTime="22" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="48" count="4" selfTime="16" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="21" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="16" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="4" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="12" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="setAnnots" methodSignature="(Ljason/asSyntax/ListTerm;)Ljason/asSyntax/Literal;" time="94" count="2" selfTime="17" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="49" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="13" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="12" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="9" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="9" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="6" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="13" count="4" selfTime="0" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="13" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="9" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="5" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="6" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="2" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="30" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="28" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="12" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="8" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="11" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="8" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="4" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Pred$1" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="84" count="22" selfTime="25" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="58" count="20" selfTime="23" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="35" count="20" selfTime="17" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="18" count="20" selfTime="18" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="34" count="20" selfTime="25" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="20" selfTime="9" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Literal" methodName="useDerefVars" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)V" time="25" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="8" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="useDerefVars" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)V" time="4" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="18" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="13" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="11" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="14" count="14" selfTime="14" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Rule" methodName="isRule" methodSignature="()Z" time="11" count="20" selfTime="11" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Rule" methodName="getBody" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="929" count="4" selfTime="4" lineNumber="-1" percent="0.3">
                                            <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="925" count="2" selfTime="7" lineNumber="-1" percent="0.3">
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="565" count="6" selfTime="5" lineNumber="-1" percent="0.2">
                                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="292" count="2" selfTime="2" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="290" count="2" selfTime="11" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="188" count="4" selfTime="9" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="171" count="4" selfTime="30" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="99" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="88" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="53" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="42" count="4" selfTime="18" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="12" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="22" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="18" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="3" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="11" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="8" count="8" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="8" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="42" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="27" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="25" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="15" count="20" selfTime="10" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="20" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="36" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="23" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="16" count="4" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="13" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="8" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="268" count="4" selfTime="2" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="266" count="2" selfTime="7" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="205" count="6" selfTime="3" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="200" count="4" selfTime="2" lineNumber="-1" percent="0.1">
                                                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="198" count="2" selfTime="14" lineNumber="-1" percent="0.1">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="128" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="118" count="2" selfTime="15" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="77" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="72" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="58" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="36" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="24" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="23" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="19" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="17" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="12" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="8" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="9" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="4" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="4" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="42" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="15" count="2" selfTime="14" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="15" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="14" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="8" count="10" selfTime="4" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="41" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="25" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="12" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.LogExpr$3" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="342" count="2" selfTime="3" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="339" count="2" selfTime="2" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="333" count="2" selfTime="18" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="262" count="2" selfTime="2" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="260" count="2" selfTime="2" lineNumber="-1" percent="0.1">
                                                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="258" count="2" selfTime="9" lineNumber="-1" percent="0.1">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="180" count="4" selfTime="11" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="164" count="4" selfTime="31" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="98" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="87" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="47" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="34" count="4" selfTime="22" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="25" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="20" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="10" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="8" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="4" count="8" selfTime="2" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="43" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="29" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="26" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="14" count="20" selfTime="11" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="20" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="12" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="8" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="4" count="4" selfTime="0" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="11" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="6" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="43" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="25" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="14" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="createUnifIterator" methodSignature="([Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="&lt;init&gt;" methodSignature="([Ljason/asSemantics/Unifier;)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="7" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="53" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="50" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="43" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="26" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="14" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="10" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="7" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="6110" count="14" selfTime="42" lineNumber="-1" percent="1.8">
                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="6068" count="14" selfTime="203" lineNumber="-1" percent="1.7">
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="4701" count="64" selfTime="254" lineNumber="-1" percent="1.3">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="4349" count="64" selfTime="624" lineNumber="-1" percent="1.2">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2823" count="73" selfTime="246" lineNumber="-1" percent="0.8">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2506" count="73" selfTime="267" lineNumber="-1" percent="0.7">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1119" count="63" selfTime="172" lineNumber="-1" percent="0.3">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="876" count="63" selfTime="461" lineNumber="-1" percent="0.3">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="98" count="8" selfTime="43" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="44" count="16" selfTime="44" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="11" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="45" count="126" selfTime="45" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="45" count="126" selfTime="45" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="44" count="126" selfTime="44" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="42" count="126" selfTime="42" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="40" count="126" selfTime="40" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="35" count="63" selfTime="35" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="33" count="126" selfTime="33" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="24" count="63" selfTime="24" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="71" count="189" selfTime="71" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="517" count="10" selfTime="77" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="208" count="10" selfTime="26" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="129" count="10" selfTime="11" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="118" count="10" selfTime="15" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="97" count="10" selfTime="12" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="85" count="10" selfTime="18" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="61" count="10" selfTime="17" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="38" count="10" selfTime="18" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="17" count="10" selfTime="10" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="10" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="35" count="10" selfTime="13" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="22" count="10" selfTime="10" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="12" count="10" selfTime="7" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="18" count="10" selfTime="14" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="123" count="10" selfTime="16" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="107" count="10" selfTime="54" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="29" count="10" selfTime="18" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="7" count="10" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="19" count="10" selfTime="19" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="43" count="3" selfTime="20" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="10" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="6" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="5" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="27" count="7" selfTime="12" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="7" selfTime="5" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="6" count="14" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="14" count="7" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="7" count="10" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="7" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="495" count="73" selfTime="96" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="379" count="73" selfTime="119" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="186" count="63" selfTime="121" lineNumber="-1" percent="0.1">
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="35" count="126" selfTime="35" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="30" count="63" selfTime="30" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="74" count="73" selfTime="48" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="26" count="73" selfTime="26" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="20" count="63" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="29" count="73" selfTime="29" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="28" count="73" selfTime="28" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="27" count="73" selfTime="27" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="24" count="73" selfTime="24" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="46" count="146" selfTime="46" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="25" count="73" selfTime="25" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="253" count="64" selfTime="132" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="80" count="64" selfTime="58" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="22" count="64" selfTime="22" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="41" count="128" selfTime="41" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="170" count="146" selfTime="112" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="58" count="146" selfTime="58" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="133" count="128" selfTime="86" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="47" count="128" selfTime="47" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="56" count="128" selfTime="56" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="47" count="128" selfTime="47" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="45" count="128" selfTime="45" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="43" count="128" selfTime="43" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="40" count="64" selfTime="40" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="37" count="128" selfTime="37" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="35" count="128" selfTime="35" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="29" count="64" selfTime="29" lineNumber="-1" percent="0.0"/>
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="14" count="9" selfTime="9" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="5" count="9" selfTime="5" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="55" count="192" selfTime="55" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="43" count="146" selfTime="43" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="765" count="64" selfTime="94" lineNumber="-1" percent="0.2">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="575" count="64" selfTime="41" lineNumber="-1" percent="0.2">
                                            <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="534" count="64" selfTime="290" lineNumber="-1" percent="0.2">
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="244" count="247" selfTime="178" lineNumber="-1" percent="0.1">
                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="66" count="247" selfTime="66" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="96" count="64" selfTime="67" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="29" count="64" selfTime="29" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="215" count="64" selfTime="61" lineNumber="-1" percent="0.1">
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="154" count="64" selfTime="50" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="104" count="64" selfTime="57" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="47" count="64" selfTime="47" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="148" count="69" selfTime="67" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="81" count="69" selfTime="52" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="29" count="69" selfTime="29" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="25" count="64" selfTime="25" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="11" count="14" selfTime="11" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="541" count="9" selfTime="30" lineNumber="-1" percent="0.2">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="260" count="6" selfTime="21" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="198" count="6" selfTime="42" lineNumber="-1" percent="0.1">
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="116" count="6" selfTime="27" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="63" count="6" selfTime="19" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="41" count="6" selfTime="22" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="10" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="21" count="6" selfTime="12" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="9" count="6" selfTime="9" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="9" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="8" count="6" selfTime="8" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="7" count="6" selfTime="7" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="41" count="6" selfTime="31" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="10" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="152" count="3" selfTime="13" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="139" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="135" count="3" selfTime="12" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="76" count="3" selfTime="15" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="55" count="3" selfTime="25" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="11" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="4" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="9" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="29" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="21" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="18" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="9" selfTime="6" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="9" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                            </node>
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="10" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="8" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="6" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="7" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="4" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="77" count="3" selfTime="17" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="46" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="24" count="3" selfTime="7" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="16" count="3" selfTime="11" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="11" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="6" count="3" selfTime="6" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="14" count="3" selfTime="14" lineNumber="-1" percent="0.0"/>
                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="8" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="3" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="24" count="9" selfTime="9" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="15" count="9" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="6" count="9" selfTime="6" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="24" count="11" selfTime="9" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="14" count="9" selfTime="7" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="7" count="9" selfTime="7" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="15515" count="23" selfTime="21" lineNumber="-1" percent="4.5">
                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="15494" count="22" selfTime="316" lineNumber="-1" percent="4.4">
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="9793" count="62" selfTime="261" lineNumber="-1" percent="2.8">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="9419" count="62" selfTime="697" lineNumber="-1" percent="2.7">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="7798" count="109" selfTime="282" lineNumber="-1" percent="2.2">
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="7398" count="109" selfTime="1125" lineNumber="-1" percent="2.1">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="3110" count="68" selfTime="213" lineNumber="-1" percent="0.9">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2827" count="68" selfTime="428" lineNumber="-1" percent="0.8">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1657" count="66" selfTime="182" lineNumber="-1" percent="0.5">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1407" count="66" selfTime="525" lineNumber="-1" percent="0.4">
                                                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="292" count="47" selfTime="202" lineNumber="-1" percent="0.1">
                                                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="50" count="94" selfTime="50" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="20" count="47" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="20" count="47" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="233" count="14" selfTime="37" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="182" count="14" selfTime="72" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="67" count="14" selfTime="44" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="13" count="28" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="6" count="14" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="4" count="14" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="14" count="28" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="13" count="28" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="10" count="14" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="6" count="14" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="14" count="42" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="122" count="14" selfTime="30" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="88" count="14" selfTime="19" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="47" count="14" selfTime="28" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="11" count="28" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="14" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="22" count="14" selfTime="16" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="14" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="14" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="61" count="118" selfTime="61" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="47" count="118" selfTime="47" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="29" count="47" selfTime="29" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="21" count="5" selfTime="13" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="16" count="47" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="14" count="10" selfTime="11" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="9" count="14" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="5" count="20" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="5" count="14" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="59" count="170" selfTime="59" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="9" count="28" selfTime="9" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="403" count="47" selfTime="82" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="306" count="47" selfTime="86" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="164" count="47" selfTime="104" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="36" count="94" selfTime="36" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="24" count="47" selfTime="24" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="56" count="47" selfTime="41" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="15" count="47" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="15" count="47" selfTime="15" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="66" count="15" selfTime="31" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="24" count="15" selfTime="20" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="15" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="11" count="30" selfTime="11" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="39" count="89" selfTime="39" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="38" count="89" selfTime="38" lineNumber="-1" percent="0.0"/>
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="37" count="28" selfTime="24" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="13" count="28" selfTime="13" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="28" count="47" selfTime="28" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="25" count="66" selfTime="25" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="25" count="56" selfTime="25" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="19" count="47" selfTime="19" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="13" count="28" selfTime="13" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="13" count="30" selfTime="13" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="11" count="30" selfTime="11" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="7" count="15" selfTime="7" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="15" selfTime="7" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="39" count="110" selfTime="39" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="31" count="94" selfTime="31" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="2131" count="55" selfTime="355" lineNumber="-1" percent="0.6">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="1072" count="55" selfTime="128" lineNumber="-1" percent="0.3">
                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="677" count="55" selfTime="48" lineNumber="-1" percent="0.2">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="629" count="55" selfTime="102" lineNumber="-1" percent="0.2">
                                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="507" count="55" selfTime="63" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="444" count="55" selfTime="89" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="334" count="55" selfTime="110" lineNumber="-1" percent="0.1">
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="204" count="55" selfTime="92" lineNumber="-1" percent="0.1">
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="95" count="55" selfTime="54" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="41" count="55" selfTime="41" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="17" count="55" selfTime="17" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="20" count="55" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="21" count="55" selfTime="21" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="20" count="55" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="187" count="55" selfTime="68" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="119" count="55" selfTime="59" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="60" count="55" selfTime="34" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="26" count="55" selfTime="26" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="80" count="55" selfTime="59" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="21" count="55" selfTime="21" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="352" count="55" selfTime="68" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="284" count="55" selfTime="106" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="133" count="55" selfTime="76" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="37" count="55" selfTime="37" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="20" count="55" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="28" count="55" selfTime="28" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="17" count="55" selfTime="17" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="178" count="46" selfTime="85" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="63" count="46" selfTime="39" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="24" count="46" selfTime="24" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="30" count="92" selfTime="30" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="35" count="55" selfTime="35" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="23" count="55" selfTime="23" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="23" count="46" selfTime="23" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="20" count="55" selfTime="20" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="18" count="46" selfTime="18" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="18" count="46" selfTime="18" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="17" count="55" selfTime="17" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="14" count="46" selfTime="14" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="6" count="9" selfTime="6" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="233" count="62" selfTime="57" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="170" count="62" selfTime="65" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="83" count="62" selfTime="52" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="29" count="62" selfTime="29" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="22" count="7" selfTime="12" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="5" count="14" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="7" selfTime="5" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="6" count="7" selfTime="6" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="186" count="47" selfTime="91" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="64" count="47" selfTime="41" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="23" count="47" selfTime="23" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="31" count="94" selfTime="31" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="137" count="94" selfTime="99" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="38" count="94" selfTime="38" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="79" count="216" selfTime="79" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="78" count="188" selfTime="78" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="66" count="156" selfTime="66" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="65" count="156" selfTime="65" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="45" count="62" selfTime="45" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="41" count="94" selfTime="41" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="26" count="94" selfTime="26" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="24" count="94" selfTime="24" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="18" count="62" selfTime="18" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="16" count="47" selfTime="16" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="16" count="47" selfTime="16" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="79" count="211" selfTime="79" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="39" count="116" selfTime="39" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="235" count="62" selfTime="102" lineNumber="-1" percent="0.1">
                                        <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="92" count="62" selfTime="59" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="33" count="62" selfTime="33" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="41" count="124" selfTime="41" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="229" count="218" selfTime="153" lineNumber="-1" percent="0.1">
                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="76" count="218" selfTime="76" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="140" count="124" selfTime="85" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="55" count="124" selfTime="55" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="52" count="124" selfTime="52" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="44" count="124" selfTime="44" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="44" count="124" selfTime="44" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="39" count="124" selfTime="39" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="36" count="62" selfTime="36" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="31" count="124" selfTime="31" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="31" count="124" selfTime="31" lineNumber="-1" percent="0.0"/>
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="26" count="20" selfTime="17" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="9" count="20" selfTime="9" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="17" count="62" selfTime="17" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="58" count="186" selfTime="58" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="55" count="164" selfTime="55" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2919" count="80" selfTime="83" lineNumber="-1" percent="0.8">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="2747" count="14" selfTime="13" lineNumber="-1" percent="0.8">
                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="2734" count="14" selfTime="35" lineNumber="-1" percent="0.8">
                                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2411" count="44" selfTime="59" lineNumber="-1" percent="0.7">
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="1634" count="28" selfTime="15" lineNumber="-1" percent="0.5">
                                            <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="1619" count="14" selfTime="69" lineNumber="-1" percent="0.5">
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1044" count="44" selfTime="36" lineNumber="-1" percent="0.3">
                                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="991" count="16" selfTime="21" lineNumber="-1" percent="0.3">
                                                  <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="970" count="16" selfTime="46" lineNumber="-1" percent="0.3">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="796" count="8" selfTime="60" lineNumber="-1" percent="0.2">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="718" count="8" selfTime="81" lineNumber="-1" percent="0.2">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="533" count="8" selfTime="23" lineNumber="-1" percent="0.2">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="501" count="8" selfTime="28" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="441" count="8" selfTime="40" lineNumber="-1" percent="0.1">
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="202" count="8" selfTime="20" lineNumber="-1" percent="0.1">
                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="138" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="133" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="117" count="8" selfTime="22" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="95" count="8" selfTime="32" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="56" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                                                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="40" count="8" selfTime="14" lineNumber="-1" percent="0.0">
                                                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="25" count="8" selfTime="17" lineNumber="-1" percent="0.0">
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="8" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="33" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="22" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="10" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="11" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="178" count="8" selfTime="11" lineNumber="-1" percent="0.1">
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="167" count="8" selfTime="136" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="19" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="9" count="8" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="24" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="18" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="26" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="10" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="18" count="16" selfTime="11" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="13" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="12" count="16" selfTime="9" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="10" count="32" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="8" count="24" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="53" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="30" count="8" selfTime="4" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="26" count="8" selfTime="16" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="10" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="34" count="16" selfTime="13" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="21" count="16" selfTime="12" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="28" count="8" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="25" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="15" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="hasNext" methodSignature="()Z" time="17" count="24" selfTime="17" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.RelExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="444" count="8" selfTime="124" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="223" count="16" selfTime="56" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="113" count="16" selfTime="19" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="87" count="16" selfTime="28" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="43" count="16" selfTime="22" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="11" count="32" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="16" count="16" selfTime="11" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="33" count="16" selfTime="12" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="21" count="16" selfTime="13" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="7" count="32" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.LogExpr" methodName="createUnifIterator" methodSignature="([Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="30" count="6" selfTime="10" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="&lt;init&gt;" methodSignature="([Ljason/asSemantics/Unifier;)V" time="20" count="6" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="25" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="13" count="8" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="20" count="16" selfTime="12" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="15" count="8" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="41" count="14" selfTime="15" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.LogExpr$3" methodName="next" methodSignature="()Ljava/lang/Object;" time="15" count="6" selfTime="12" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="11" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="21" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="15" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="718" count="16" selfTime="14" lineNumber="-1" percent="0.2">
                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="704" count="16" selfTime="37" lineNumber="-1" percent="0.2">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="517" count="8" selfTime="38" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="462" count="8" selfTime="67" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="283" count="8" selfTime="16" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="255" count="8" selfTime="29" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="114" count="8" selfTime="23" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="85" count="8" selfTime="47" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="23" count="8" selfTime="16" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="6" count="24" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="56" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="43" count="8" selfTime="14" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="22" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="44" count="4" selfTime="18" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="isUnary" methodSignature="()Z" time="9" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="7" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="5" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.ArithFunctionTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="32" count="8" selfTime="19" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="8" selfTime="4" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="17" count="16" selfTime="13" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="15" count="16" selfTime="6" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="10" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="10" count="32" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="7" count="24" selfTime="7" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="89" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="65" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="54" count="8" selfTime="45" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="29" count="16" selfTime="11" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="18" count="16" selfTime="14" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="23" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="17" count="8" selfTime="4" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="13" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="230" count="8" selfTime="7" lineNumber="-1" percent="0.1">
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="223" count="8" selfTime="16" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="190" count="8" selfTime="43" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="109" count="8" selfTime="21" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="61" count="8" selfTime="15" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="43" count="8" selfTime="22" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="12" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="18" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="11" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="17" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="39" count="14" selfTime="17" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="12" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="10" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="19" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="9" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="89" count="66" selfTime="45" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="44" count="66" selfTime="44" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Rule" methodName="headCApply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="767" count="6" selfTime="16" lineNumber="-1" percent="0.2">
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="751" count="6" selfTime="3" lineNumber="-1" percent="0.2">
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="748" count="6" selfTime="15" lineNumber="-1" percent="0.2">
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="731" count="6" selfTime="37" lineNumber="-1" percent="0.2">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="setAnnots" methodSignature="(Ljason/asSyntax/ListTerm;)Ljason/asSyntax/Literal;" time="341" count="6" selfTime="58" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="161" count="6" selfTime="34" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="38" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="33" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="26" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="19" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="14" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="31" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="26" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="19" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="11" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="25" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="19" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="14" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="9" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="13" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="8" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="9" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="8" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="52" count="12" selfTime="9" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="43" count="12" selfTime="10" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="33" count="12" selfTime="12" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="21" count="12" selfTime="17" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="27" count="18" selfTime="19" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="8" count="18" selfTime="8" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="19" count="12" selfTime="17" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="18" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="12" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="6" count="18" selfTime="6" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="211" count="6" selfTime="28" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="108" count="6" selfTime="22" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="63" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="52" count="6" selfTime="10" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="23" count="6" selfTime="21" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="19" count="6" selfTime="14" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="12" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="13" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="7" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="44" count="6" selfTime="18" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="22" count="6" selfTime="10" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="9" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="8" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="112" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="104" count="6" selfTime="22" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="41" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="36" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="31" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="24" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="19" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="13" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="38" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="30" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="22" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="16" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Pred$1" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="27" count="6" selfTime="24" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="576" count="54" selfTime="73" lineNumber="-1" percent="0.2">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="412" count="54" selfTime="50" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="362" count="54" selfTime="215" lineNumber="-1" percent="0.1">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="147" count="150" selfTime="93" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="54" count="150" selfTime="54" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="91" count="54" selfTime="68" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="23" count="54" selfTime="23" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="308" count="8" selfTime="4" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="304" count="8" selfTime="16" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="287" count="8" selfTime="13" lineNumber="-1" percent="0.1">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="272" count="8" selfTime="41" lineNumber="-1" percent="0.1">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="154" count="8" selfTime="45" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="79" count="8" selfTime="29" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="45" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="22" count="8" selfTime="15" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="10" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="20" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="10" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="45" count="8" selfTime="16" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="24" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="9" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="7" count="8" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="()Ljason/asSyntax/Literal;" time="248" count="14" selfTime="29" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="193" count="14" selfTime="78" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="92" count="14" selfTime="45" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="18" count="14" selfTime="13" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="5" count="14" selfTime="5" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="17" count="14" selfTime="8" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="9" count="14" selfTime="9" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="8" count="14" selfTime="8" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="14" selfTime="4" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="8" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Pred$1" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="26" count="14" selfTime="20" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="14" selfTime="6" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="223" count="62" selfTime="77" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="137" count="56" selfTime="43" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="94" count="56" selfTime="43" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="51" count="56" selfTime="51" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="7" count="6" selfTime="7" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="217" count="8" selfTime="8" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="209" count="8" selfTime="15" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="178" count="8" selfTime="36" lineNumber="-1" percent="0.1">
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="104" count="8" selfTime="20" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="57" count="8" selfTime="15" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="40" count="8" selfTime="20" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="10" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="17" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="10" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="16" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="9" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="useDerefVars" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)V" time="59" count="6" selfTime="30" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="15" count="12" selfTime="11" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="10" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="useDerefVars" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)V" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="22" count="30" selfTime="22" lineNumber="-1" percent="0.0"/>
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="20" count="8" selfTime="16" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="13" count="48" selfTime="13" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Rule" methodName="getBody" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Rule" methodName="isRule" methodSignature="()Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="604" count="10" selfTime="50" lineNumber="-1" percent="0.2">
                              <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="230" count="7" selfTime="17" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="196" count="7" selfTime="36" lineNumber="-1" percent="0.1">
                                  <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="116" count="7" selfTime="30" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="61" count="7" selfTime="19" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="39" count="7" selfTime="18" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="11" count="7" selfTime="9" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="7" selfTime="5" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="21" count="7" selfTime="13" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="8" count="7" selfTime="8" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="7" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="11" count="7" selfTime="9" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="9" count="7" selfTime="9" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="7" count="7" selfTime="7" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="7" count="7" selfTime="7" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="5" count="14" selfTime="5" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="17" count="7" selfTime="7" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="10" count="7" selfTime="7" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="188" count="3" selfTime="1" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="187" count="3" selfTime="6" lineNumber="-1" percent="0.1">
                                  <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="181" count="3" selfTime="14" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="104" count="3" selfTime="14" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="78" count="3" selfTime="35" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="15" count="3" selfTime="8" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="5" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="8" count="12" selfTime="8" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="9" selfTime="4" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="34" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="20" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="17" count="3" selfTime="11" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="15" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="12" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="8" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="9" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="121" count="3" selfTime="19" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="75" count="3" selfTime="11" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="34" count="3" selfTime="10" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="22" count="3" selfTime="11" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="4" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="25" count="3" selfTime="20" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="8" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="10" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="31" count="14" selfTime="17" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="13" count="12" selfTime="8" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="27" count="11" selfTime="10" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="17" count="11" selfTime="11" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="6" count="11" selfTime="6" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="20" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="15" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="6" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="6" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="2608" count="32" selfTime="23" lineNumber="-1" percent="0.7">
                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="2585" count="30" selfTime="149" lineNumber="-1" percent="0.7">
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1402" count="21" selfTime="76" lineNumber="-1" percent="0.4">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1297" count="21" selfTime="166" lineNumber="-1" percent="0.4">
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="912" count="28" selfTime="82" lineNumber="-1" percent="0.3">
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="807" count="28" selfTime="155" lineNumber="-1" percent="0.2">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="384" count="14" selfTime="56" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="232" count="14" selfTime="32" lineNumber="-1" percent="0.1">
                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="134" count="13" selfTime="17" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="117" count="13" selfTime="16" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="97" count="13" selfTime="12" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="85" count="13" selfTime="19" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="64" count="13" selfTime="22" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="38" count="13" selfTime="15" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="19" count="13" selfTime="14" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="33" count="14" selfTime="8" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="25" count="14" selfTime="11" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="14" count="14" selfTime="8" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="6" count="14" selfTime="6" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="27" count="14" selfTime="23" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="4" count="14" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="73" count="14" selfTime="17" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="56" count="14" selfTime="15" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="30" count="14" selfTime="19" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="9" count="14" selfTime="9" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="14" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="8" count="14" selfTime="8" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="14" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="6" count="14" selfTime="6" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="4" count="14" selfTime="4" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="14" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="14" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="54" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="51" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="36" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="28" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="6" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="4" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="4" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/VarTerm;)V" time="43" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="35" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="12" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="12" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="8" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="7" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="9" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="3" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="5" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="3" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.UnnamedVar" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="37" count="18" selfTime="13" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="24" count="18" selfTime="11" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="13" count="18" selfTime="8" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="18" selfTime="5" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="24" count="10" selfTime="11" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="11" count="10" selfTime="10" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="10" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="20" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="23" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="20" count="38" selfTime="20" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="10" count="38" selfTime="10" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="6" count="22" selfTime="6" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="6" count="22" selfTime="6" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="6" count="24" selfTime="6" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="6" count="18" selfTime="6" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="5" count="24" selfTime="5" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="5" count="18" selfTime="5" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="3" count="18" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="12" count="34" selfTime="12" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="10" count="50" selfTime="10" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="67" count="21" selfTime="35" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="18" count="21" selfTime="12" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="21" selfTime="6" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="14" count="42" selfTime="14" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="44" count="56" selfTime="25" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="19" count="56" selfTime="19" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="30" count="42" selfTime="13" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="17" count="42" selfTime="17" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="19" count="19" selfTime="15" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="19" selfTime="4" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="16" count="42" selfTime="16" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="11" count="42" selfTime="11" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="7" count="42" selfTime="7" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="7" count="42" selfTime="7" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="6" count="42" selfTime="6" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="21" selfTime="6" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="42" selfTime="4" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="2" count="21" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="18" count="80" selfTime="18" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="11" count="63" selfTime="11" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="456" count="35" selfTime="39" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="370" count="2" selfTime="3" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="367" count="2" selfTime="2" lineNumber="-1" percent="0.1">
                                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="328" count="7" selfTime="4" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="171" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="168" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="136" count="3" selfTime="8" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="127" count="3" selfTime="12" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="96" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="90" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="43" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="29" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="15" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="7" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="11" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="6" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="28" count="3" selfTime="8" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="10" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="8" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.UnnamedVar" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="10" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="9" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="7" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="9" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="13" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="11" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="9" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="3" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="4" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="1" count="4" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="153" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="152" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.RelExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="78" count="1" selfTime="8" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="51" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="42" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="36" count="2" selfTime="33" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="15" count="1" selfTime="15" lineNumber="-1" percent="0.0"/>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="68" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="65" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="63" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="46" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="42" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="30" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="27" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="18" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="11" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="7" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="7" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="11" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="9" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="8" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="17" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="17" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="14" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="8" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="13" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="7" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="47" count="33" selfTime="16" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="31" count="33" selfTime="31" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="216" count="19" selfTime="32" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="153" count="19" selfTime="13" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="140" count="19" selfTime="120" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="20" count="20" selfTime="13" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="7" count="20" selfTime="7" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="31" count="19" selfTime="24" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="19" selfTime="7" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="()Ljason/asSyntax/Literal;" time="112" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Pred" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="107" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="99" count="3" selfTime="7" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="varToReplace" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)Ljason/asSyntax/VarTerm;" time="84" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/VarTerm;)V" time="54" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="42" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="26" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="22" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="21" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="19" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="16" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="14" count="4" selfTime="0" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="14" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="10" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="9" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.UnnamedVar" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;)V" time="16" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;I)V" time="13" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="6" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(I)Ljava/lang/StringBuilder;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="java.util.concurrent.atomic.AtomicInteger" methodName="incrementAndGet" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="3" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.UnnamedVar" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="setTerm" methodSignature="(ILjason/asSyntax/Term;)V" time="4" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.List" methodName="set" methodSignature="(ILjava/lang/Object;)Ljava/lang/Object;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="3" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="78" count="21" selfTime="16" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="61" count="20" selfTime="22" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="39" count="20" selfTime="15" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="24" count="20" selfTime="24" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Rule" methodName="headCApply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="63" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="62" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="62" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="61" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="setAnnots" methodSignature="(Ljason/asSyntax/ListTerm;)Ljason/asSyntax/Literal;" time="31" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="14" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="17" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="10" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="9" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="9" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="47" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="46" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="44" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="42" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="23" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="14" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="11" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="9" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="8" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="3" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="9" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="33" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="32" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="28" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="17" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="13" count="32" selfTime="13" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="9" count="18" selfTime="9" lineNumber="-1" percent="0.0"/>
                            <node leaf="false" class="jason.asSyntax.Literal" methodName="useDerefVars" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)V" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Rule" methodName="getBody" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Rule" methodName="isRule" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="373" count="13" selfTime="14" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="359" count="13" selfTime="23" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="312" count="13" selfTime="70" lineNumber="-1" percent="0.1">
                            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="186" count="13" selfTime="32" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="111" count="13" selfTime="36" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="68" count="13" selfTime="34" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="15" count="13" selfTime="9" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="11" count="13" selfTime="11" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="7" count="13" selfTime="7" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="29" count="13" selfTime="15" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="14" count="13" selfTime="14" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="8" count="13" selfTime="8" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="12" count="13" selfTime="10" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="11" count="26" selfTime="11" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="11" count="13" selfTime="11" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="24" count="13" selfTime="7" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="17" count="13" selfTime="14" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="54" count="20" selfTime="19" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="32" count="17" selfTime="24" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="8" count="17" selfTime="8" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="52" count="15" selfTime="32" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="20" count="15" selfTime="15" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="5" count="15" selfTime="5" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="38" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="19" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="129" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="127" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="100" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="93" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="66" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="60" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="50" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="29" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="17" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="14" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="12" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="10" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="8" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="8" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="11" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="8" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="7" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                        <node leaf="true" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="693" count="18" selfTime="47" lineNumber="-1" percent="0.2">
                  <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="646" count="18" selfTime="71" lineNumber="-1" percent="0.2">
                    <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="528" count="18" selfTime="128" lineNumber="-1" percent="0.2">
                      <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="282" count="18" selfTime="61" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="114" count="18" selfTime="29" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="77" count="18" selfTime="39" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="17" count="18" selfTime="14" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="18" selfTime="3" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="18" selfTime="12" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="5" count="18" selfTime="5" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="18" selfTime="4" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="8" count="18" selfTime="8" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="93" count="18" selfTime="56" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="37" count="18" selfTime="37" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="7" count="18" selfTime="7" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="18" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="18" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="51" count="18" selfTime="51" lineNumber="-1" percent="0.0"/>
                      <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="21" count="18" selfTime="16" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="5" count="18" selfTime="5" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="13" count="18" selfTime="13" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="10" count="18" selfTime="10" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="10" count="36" selfTime="10" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="9" count="18" selfTime="9" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="4" count="18" selfTime="4" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="47" count="18" selfTime="26" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="21" count="18" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="9" count="18" selfTime="9" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="59" count="2" selfTime="11" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="38" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="25" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="56" count="11" selfTime="56" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="38" count="28" selfTime="32" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="23" count="42" selfTime="23" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="12" count="42" selfTime="12" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="getPlan" methodSignature="()Ljason/asSyntax/Plan;" time="11" count="41" selfTime="11" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="11" count="8" selfTime="11" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Plan" methodName="getContext" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="9" count="21" selfTime="9" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Plan" methodName="isAllUnifs" methodSignature="()Z" time="9" count="20" selfTime="9" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="getUnifier" methodSignature="()Ljason/asSemantics/Unifier;" time="5" count="20" selfTime="5" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.LinkedList" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="setUnifier" methodSignature="(Ljason/asSemantics/Unifier;)V" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyRelApplPlRule2" methodSignature="(Ljava/lang/String;)V" time="59" count="7" selfTime="36" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="isGoal" methodSignature="()Z" time="15" count="7" selfTime="15" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Event" methodName="isInternal" methodSignature="()Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.runtime.Settings" methodName="requeue" methodSignature="()Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.runtime.Settings" methodName="retrieve" methodSignature="()Z" time="10" count="7" selfTime="10" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySelEv" methodSignature="()V" time="4350" count="25" selfTime="162" lineNumber="-1" percent="1.2">
              <node leaf="false" class="AgentBrain" methodName="selectEvent" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Event;" time="4112" count="12" selfTime="52" lineNumber="-1" percent="1.2">
                <node leaf="false" class="AgentBrain" methodName="getHighestPriorityEvent" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Event;" time="3957" count="2" selfTime="608" lineNumber="-1" percent="1.1">
                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2160" count="447" selfTime="268" lineNumber="-1" percent="0.6">
                    <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="1892" count="431" selfTime="239" lineNumber="-1" percent="0.5">
                      <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="1653" count="431" selfTime="376" lineNumber="-1" percent="0.5">
                        <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="goNext" methodSignature="()V" time="919" count="431" selfTime="429" lineNumber="-1" percent="0.3">
                          <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="277" count="769" selfTime="277" lineNumber="-1" percent="0.1"/>
                          <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="115" count="156" selfTime="115" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="80" count="162" selfTime="80" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="13" count="6" selfTime="13" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="358" count="431" selfTime="358" lineNumber="-1" percent="0.1"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="627" count="457" selfTime="274" lineNumber="-1" percent="0.2">
                    <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="hasNext" methodSignature="()Z" time="353" count="435" selfTime="206" lineNumber="-1" percent="0.1">
                      <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="147" count="435" selfTime="147" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="228" count="6" selfTime="14" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljava/util/Iterator;)V" time="185" count="6" selfTime="49" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="goNext" methodSignature="()V" time="90" count="6" selfTime="21" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="54" count="6" selfTime="54" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="9" count="12" selfTime="9" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="28" count="6" selfTime="28" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="10" count="6" selfTime="10" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" time="8" count="6" selfTime="8" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="18" count="6" selfTime="18" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" time="11" count="6" selfTime="11" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.lang.String" methodName="contentEquals" methodSignature="(Ljava/lang/CharSequence;)Z" time="161" count="437" selfTime="161" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="114" count="437" selfTime="114" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Queue" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="18" count="4" selfTime="18" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="17" count="8" selfTime="17" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" time="15" count="6" selfTime="11" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="toString" methodSignature="()Ljava/lang/String;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSemantics.Event" methodName="getTrigger" methodSignature="()Ljason/asSyntax/Trigger;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerms" methodSignature="()Ljava/util/List;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.util.Queue" methodName="size" methodSignature="()I" time="41" count="12" selfTime="41" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="java.util.Queue" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="32" count="12" selfTime="31" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSemantics.Event" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Agent" methodName="selectEvent" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Event;" time="30" count="10" selfTime="11" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="19" count="10" selfTime="19" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" time="37" count="25" selfTime="19" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="18" count="25" selfTime="18" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="hasAtomicIntention" methodSignature="()Z" time="14" count="25" selfTime="14" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Agent" methodName="hasCustomSelectOption" methodSignature="()Z" time="9" count="12" selfTime="9" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="removeAtomicEvent" methodSignature="()Ljason/asSemantics/Event;" time="9" count="25" selfTime="9" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getEvents" methodSignature="()Ljava/util/Queue;" time="1" count="12" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyRelPl" methodSignature="()V" time="3319" count="12" selfTime="42" lineNumber="-1" percent="1.0">
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="relevantPlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" time="3223" count="12" selfTime="136" lineNumber="-1" percent="0.9">
                <node leaf="false" class="jason.asSyntax.Plan" methodName="isRelevant" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSemantics/Unifier;)Ljason/asSemantics/Unifier;" time="1757" count="21" selfTime="50" lineNumber="-1" percent="0.5">
                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSyntax/Trigger;)Z" time="1658" count="21" selfTime="53" lineNumber="-1" percent="0.5">
                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1578" count="21" selfTime="112" lineNumber="-1" percent="0.5">
                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1437" count="21" selfTime="239" lineNumber="-1" percent="0.4">
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="940" count="18" selfTime="43" lineNumber="-1" percent="0.3">
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="878" count="18" selfTime="98" lineNumber="-1" percent="0.3">
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="657" count="18" selfTime="97" lineNumber="-1" percent="0.2">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="353" count="18" selfTime="54" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="222" count="18" selfTime="22" lineNumber="-1" percent="0.1">
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="200" count="18" selfTime="33" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="157" count="18" selfTime="32" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="125" count="18" selfTime="21" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="96" count="18" selfTime="41" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="48" count="18" selfTime="25" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="19" count="18" selfTime="12" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="18" selfTime="7" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="18" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="7" count="18" selfTime="7" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="8" count="18" selfTime="8" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="10" count="18" selfTime="10" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="46" count="18" selfTime="14" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="32" count="18" selfTime="17" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="15" count="18" selfTime="8" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="7" count="18" selfTime="7" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="31" count="18" selfTime="21" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="10" count="18" selfTime="10" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="131" count="18" selfTime="41" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="90" count="18" selfTime="37" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="38" count="18" selfTime="19" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="13" count="18" selfTime="13" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="6" count="18" selfTime="6" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="9" count="18" selfTime="9" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="6" count="18" selfTime="6" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="25" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="12" count="18" selfTime="12" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="9" count="18" selfTime="9" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="6" count="18" selfTime="6" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="6" count="18" selfTime="6" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="55" count="18" selfTime="13" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="42" count="18" selfTime="23" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="19" count="18" selfTime="9" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="10" count="18" selfTime="10" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="43" count="4" selfTime="19" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="3" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="isUnary" methodSignature="()Z" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="12" count="18" selfTime="12" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="6" count="18" selfTime="6" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.ArithFunctionTerm" methodName="isArithExpr" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="14" selfTime="2" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="18" selfTime="2" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="15" count="36" selfTime="15" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="18" selfTime="4" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="76" count="21" selfTime="40" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="23" count="21" selfTime="14" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="21" selfTime="9" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="13" count="42" selfTime="13" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="33" count="21" selfTime="27" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="6" count="21" selfTime="6" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="30" count="42" selfTime="20" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="10" count="36" selfTime="10" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="30" count="36" selfTime="24" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="6" count="36" selfTime="6" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="21" count="42" selfTime="21" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="16" count="21" selfTime="16" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="11" count="42" selfTime="11" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="11" count="42" selfTime="11" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="11" count="42" selfTime="11" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="8" count="42" selfTime="8" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="7" count="42" selfTime="7" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="4" count="21" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="19" count="84" selfTime="19" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="10" count="63" selfTime="10" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Trigger" methodName="sameType" methodSignature="(Ljason/asSyntax/Trigger;)Z" time="16" count="21" selfTime="16" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="11" count="42" selfTime="11" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="49" count="21" selfTime="35" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="14" count="21" selfTime="14" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="clone" methodSignature="()Ljason/asSyntax/Trigger;" time="822" count="12" selfTime="37" lineNumber="-1" percent="0.2">
                  <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" time="678" count="12" selfTime="23" lineNumber="-1" percent="0.2">
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="655" count="12" selfTime="11" lineNumber="-1" percent="0.2">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="644" count="12" selfTime="26" lineNumber="-1" percent="0.2">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="614" count="12" selfTime="23" lineNumber="-1" percent="0.2">
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="586" count="12" selfTime="68" lineNumber="-1" percent="0.2">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="263" count="12" selfTime="98" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="68" count="12" selfTime="41" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="25" count="12" selfTime="18" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="12" selfTime="7" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="12" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="25" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="25" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithExpr;)V" time="22" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithFunctionTerm;)V" time="22" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="20" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="17" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="19" count="10" selfTime="19" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="17" count="10" selfTime="17" lineNumber="-1" percent="0.0"/>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="15" count="12" selfTime="9" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="14" count="10" selfTime="7" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="7" count="10" selfTime="7" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="4" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="cloneLT" methodSignature="()Ljason/asSyntax/ListTerm;" time="215" count="12" selfTime="12" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="203" count="12" selfTime="43" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="84" count="12" selfTime="18" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="66" count="12" selfTime="15" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="51" count="12" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="42" count="12" selfTime="27" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="15" count="12" selfTime="11" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="72" count="12" selfTime="4" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="68" count="12" selfTime="17" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="51" count="12" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="42" count="12" selfTime="11" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="31" count="12" selfTime="6" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="25" count="12" selfTime="14" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="12" selfTime="9" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="12" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Pred$1" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="35" count="12" selfTime="25" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="10" count="12" selfTime="10" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" time="107" count="12" selfTime="48" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="41" count="12" selfTime="9" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="32" count="12" selfTime="9" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="23" count="12" selfTime="9" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="14" count="12" selfTime="11" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Trigger" methodName="setTrigOp" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;)V" time="9" count="12" selfTime="9" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" time="351" count="12" selfTime="67" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="159" count="12" selfTime="38" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="52" count="5" selfTime="41" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Trigger$TEType$2" methodName="toString" methodSignature="()Ljava/lang/String;" time="10" count="4" selfTime="10" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Trigger$TEType$1" methodName="toString" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="38" count="5" selfTime="12" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="26" count="5" selfTime="16" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="8" count="10" selfTime="8" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="6" count="5" selfTime="6" lineNumber="-1" percent="0.0"/>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Trigger$TEOperator$1" methodName="toString" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Trigger$TEOperator$2" methodName="toString" methodSignature="()Ljava/lang/String;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="91" count="12" selfTime="30" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="56" count="11" selfTime="27" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="13" count="11" selfTime="10" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="11" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="11" selfTime="8" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="11" selfTime="6" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="11" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="14" count="12" selfTime="14" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="13" count="24" selfTime="13" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="12" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="49" count="21" selfTime="49" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Plan;Ljason/asSemantics/Unifier;)V" time="29" count="21" selfTime="29" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.LinkedList" methodName="&lt;init&gt;" methodSignature="()V" time="26" count="11" selfTime="26" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="23" count="32" selfTime="23" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="17" count="11" selfTime="17" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="13" count="21" selfTime="13" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyRelApplPlRule2" methodSignature="(Ljava/lang/String;)V" time="53" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="removeActionReQueue" methodSignature="(Ljason/asSemantics/Intention;)V" time="31" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)V" time="14" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="removeCurrentStep" methodSignature="()Ljason/asSyntax/Term;" time="9" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyNext" methodSignature="()Ljason/asSyntax/PlanBody;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="7" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="joinRenamedVarsIntoIntentionUnifier" methodSignature="(Ljason/asSemantics/IntendedMeans;Ljason/asSemantics/Unifier;)V" time="7" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="isGoal" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.runtime.Settings" methodName="retrieve" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyAddIM" methodSignature="()V" time="517" count="4" selfTime="85" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="&lt;init&gt;" methodSignature="(Ljason/asSemantics/Option;Ljason/asSyntax/Trigger;)V" time="290" count="4" selfTime="34" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Trigger;" time="250" count="4" selfTime="12" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="219" count="4" selfTime="1" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="218" count="4" selfTime="6" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="211" count="4" selfTime="10" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="setAnnots" methodSignature="(Ljason/asSyntax/ListTerm;)Ljason/asSyntax/Literal;" time="117" count="4" selfTime="18" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="58" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="13" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="10" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="7" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="6" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="12" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="8" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="7" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="4" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="5" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="3" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="19" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="13" count="8" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="12" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="7" count="8" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="9" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="5" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="6" count="12" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="5" count="8" selfTime="4" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="2" count="12" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="40" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="37" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="15" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="11" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="10" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="15" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="13" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="12" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="9" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="7" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="4" selfTime="0" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="38" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="16" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="8" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="5" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" time="19" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="6" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="5" count="4" selfTime="0" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Trigger" methodName="setTrigOp" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;)V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.Plan" methodName="getBody" methodSignature="()Ljason/asSyntax/PlanBody;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="getPlan" methodSignature="()Ljason/asSyntax/Plan;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="getUnifier" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)V" time="43" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="27" count="4" selfTime="27" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="7" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="push" methodSignature="(Ljason/asSemantics/IntendedMeans;)V" time="30" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="push" methodSignature="(Ljava/lang/Object;)V" time="13" count="4" selfTime="13" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isAtomic" methodSignature="()Z" time="10" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.Plan" methodName="isAtomic" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="14" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="9" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="6" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="9" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="7" count="6" selfTime="7" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getTrigger" methodSignature="()Ljason/asSyntax/Trigger;" time="6" count="20" selfTime="6" lineNumber="-1" percent="0.0"/>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="pop" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="pop" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Unifier" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="6" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="jason.asSemantics.Event" methodName="getTrigger" methodSignature="()Ljason/asSyntax/Trigger;" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="isAchvGoal" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="isAddition" methodSignature="()Z" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="isGoal" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getCurrentStep" methodSignature="()Ljason/asSyntax/PlanBody;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="hasGoalListener" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyNext" methodSignature="()Ljason/asSyntax/PlanBody;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.runtime.Settings" methodName="isTROon" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySelAppl" methodSignature="()V" time="90" count="4" selfTime="17" lineNumber="-1" percent="0.0">
              <node leaf="false" class="AgentBrain" methodName="selectOption" methodSignature="(Ljava/util/List;)Ljason/asSemantics/Option;" time="71" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                <node leaf="false" class="AgentBrain" methodName="getHighestPriorityOption" methodSignature="(Ljava/util/List;)Ljason/asSemantics/Option;" time="35" count="4" selfTime="15" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="13" count="4" selfTime="13" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.Option" methodName="getPlan" methodSignature="()Ljason/asSyntax/Plan;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Plan" methodName="getContext" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.util.List" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="15" count="4" selfTime="15" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="11" count="4" selfTime="11" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="false" class="jason.stdlib.wait$WaitEvent" methodName="lambda$resume$e8933e5e$1" methodSignature="(Z)V" time="223" count="3" selfTime="53" lineNumber="-1" percent="0.1">
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="removePendingIntention" methodSignature="(Ljava/lang/String;)Ljason/asSemantics/Intention;" time="55" count="3" selfTime="18" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="33" count="3" selfTime="33" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="resumeIntention" methodSignature="(Ljason/asSemantics/Intention;Ljason/asSyntax/Term;)V" time="41" count="3" selfTime="3" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)V" time="33" count="3" selfTime="10" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="17" count="3" selfTime="17" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="5" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="5" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="removeCurrentStep" methodSignature="()Ljason/asSyntax/Term;" time="37" count="3" selfTime="16" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="20" count="3" selfTime="17" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyNext" methodSignature="()Ljason/asSyntax/PlanBody;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="15" count="3" selfTime="5" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="10" count="3" selfTime="10" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)Z" time="11" count="3" selfTime="3" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Queue" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="8" count="3" selfTime="8" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="10" count="3" selfTime="4" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="6" count="3" selfTime="6" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="isSuspended" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="46" count="21" selfTime="46" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="38" count="38" selfTime="29" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="9" count="38" selfTime="9" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetDeliberate" methodSignature="()V" time="26" count="18" selfTime="26" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="12" count="38" selfTime="12" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="canSleepDeliberate" methodSignature="()Z" time="185" count="31" selfTime="67" lineNumber="-1" percent="0.1">
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" time="54" count="31" selfTime="38" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="16" count="31" selfTime="16" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="canSleep" methodSignature="()Z" time="28" count="13" selfTime="19" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="7" count="13" selfTime="7" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="18" count="21" selfTime="18" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="11" count="13" selfTime="9" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedEvent" methodSignature="()Ljason/asSemantics/Event;" time="7" count="18" selfTime="7" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="12" count="31" selfTime="12" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="jason.architecture.AgArch" methodName="reasoningCycleStarting" methodSignature="()V" time="20154" count="31" selfTime="20154" lineNumber="-1" percent="5.8"/>
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="act" methodSignature="()V" time="10310" count="31" selfTime="79" lineNumber="-1" percent="3.0">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="act" methodSignature="()V" time="9892" count="27" selfTime="189" lineNumber="-1" percent="2.8">
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySemanticRuleAct" methodSignature="()V" time="8778" count="97" selfTime="119" lineNumber="-1" percent="2.5">
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyExecInt" methodSignature="()V" time="7584" count="24" selfTime="465" lineNumber="-1" percent="2.2">
              <node leaf="false" class="jason.stdlib.foreach" methodName="execute" methodSignature="(Ljason/asSemantics/TransitionSystem;Ljason/asSemantics/Unifier;[Ljason/asSyntax/Term;)Ljava/lang/Object;" time="2183" count="3" selfTime="93" lineNumber="-1" percent="0.6">
                <node leaf="false" class="jason.asSemantics.Unifier" methodName="compose" methodSignature="(Ljason/asSemantics/Unifier;)V" time="977" count="3" selfTime="76" lineNumber="-1" percent="0.3">
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="382" count="3" selfTime="2" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="380" count="3" selfTime="7" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="299" count="3" selfTime="2" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="297" count="3" selfTime="5" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="229" count="3" selfTime="1" lineNumber="-1" percent="0.1">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="228" count="3" selfTime="6" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="163" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="159" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="89" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="85" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="49" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="48" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="42" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="39" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="34" count="3" selfTime="14" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="8" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="18" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="16" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="10" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="8" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="10" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="9" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="55" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="51" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="48" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="43" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="39" count="3" selfTime="16" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="9" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="12" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="8" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="48" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="47" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="43" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="39" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="33" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="9" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="9" count="3" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="9" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="50" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="47" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="43" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="38" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="34" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="8" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="10" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="9" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="60" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="56" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="51" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="45" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="40" count="3" selfTime="10" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="8" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="4" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="14" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="12" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="8" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="3" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="192" count="23" selfTime="26" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="164" count="23" selfTime="27" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="135" count="23" selfTime="16" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="119" count="23" selfTime="32" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="80" count="23" selfTime="21" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="51" count="23" selfTime="23" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="26" count="23" selfTime="15" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="23" selfTime="11" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="23" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="8" count="23" selfTime="8" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="7" count="23" selfTime="7" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="23" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="23" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="84" count="25" selfTime="18" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="66" count="25" selfTime="23" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="31" count="23" selfTime="20" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="8" count="23" selfTime="8" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="23" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="7" count="23" selfTime="7" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="25" selfTime="5" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="79" count="25" selfTime="15" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="64" count="25" selfTime="13" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="51" count="25" selfTime="51" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="44" count="25" selfTime="12" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="32" count="25" selfTime="16" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="16" count="25" selfTime="8" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="8" count="25" selfTime="8" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="42" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="28" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="21" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="20" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="18" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="15" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="13" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="17" count="28" selfTime="17" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="17" count="25" selfTime="17" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" time="15" count="3" selfTime="15" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="13" count="12" selfTime="11" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="2" count="12" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="12" count="3" selfTime="12" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="833" count="2" selfTime="7" lineNumber="-1" percent="0.2">
                  <node leaf="false" class="jason.stdlib.member$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="826" count="2" selfTime="15" lineNumber="-1" percent="0.2">
                    <node leaf="false" class="jason.stdlib.member$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="811" count="2" selfTime="4" lineNumber="-1" percent="0.2">
                      <node leaf="false" class="jason.stdlib.member$1" methodName="find" methodSignature="()V" time="807" count="2" selfTime="26" lineNumber="-1" percent="0.2">
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="706" count="1" selfTime="21" lineNumber="-1" percent="0.2">
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="678" count="1" selfTime="307" lineNumber="-1" percent="0.2">
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="311" count="2" selfTime="17" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="289" count="2" selfTime="84" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="188" count="2" selfTime="18" lineNumber="-1" percent="0.1">
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="121" count="2" selfTime="14" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="76" count="1" selfTime="34" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="39" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="32" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="23" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="16" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="11" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="6" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="19" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="16" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="14" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="12" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="9" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="28" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="25" count="2" selfTime="16" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="8" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="11" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="11" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="8" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="23" count="1" selfTime="23" lineNumber="-1" percent="0.0"/>
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="8" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="25" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="18" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="17" count="1" selfTime="11" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="7" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="7" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="25" count="2" selfTime="11" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" time="14" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="25" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljava/lang/Object;" time="19" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljason/asSyntax/Term;" time="13" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="151" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="clone" methodSignature="()Ljason/asSyntax/PlanBody;" time="144" count="2" selfTime="15" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Ljason/asSyntax/Term;Z)V" time="77" count="2" selfTime="21" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Z)V" time="54" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;)V" time="35" count="2" selfTime="21" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="14" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="9" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="setAsBodyTerm" methodSignature="(Z)V" time="7" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyNext" methodSignature="()Ljason/asSyntax/PlanBody;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="52" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="49" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="47" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="42" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="40" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="22" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="19" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="14" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="13" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="10" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="insertAsNextStep" methodSignature="(Ljason/asSyntax/PlanBody;)Ljason/asSyntax/PlanBody;" time="43" count="2" selfTime="18" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Ljason/asSyntax/Term;)V" time="22" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Ljason/asSyntax/Term;Z)V" time="17" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Z)V" time="14" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;)V" time="11" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="8" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyType" methodSignature="()Ljason/asSyntax/PlanBody$BodyType;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="setBodyNext" methodSignature="(Ljason/asSyntax/PlanBody;)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="28" count="3" selfTime="16" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.stdlib.member$1" methodName="hasNext" methodSignature="()Z" time="12" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.stdlib.member$1" methodName="find" methodSignature="()V" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSemantics.Unifier" methodName="clear" methodSignature="()V" time="15" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Map" methodName="clear" methodSignature="()V" time="12" count="3" selfTime="12" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.lang.Boolean" methodName="valueOf" methodSignature="(Z)Ljava/lang/Boolean;" time="13" count="3" selfTime="13" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="setAsBodyTerm" methodSignature="(Z)V" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.ObjectTermImpl" methodName="getObject" methodSignature="()Ljava/lang/Object;" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="5" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getC" methodSignature="()Ljason/asSemantics/Circumstance;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="add" methodSignature="(Ljason/asSyntax/PlanBody;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getCurrentStep" methodSignature="()Ljason/asSyntax/PlanBody;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedIntention" methodSignature="()Ljason/asSemantics/Intention;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.stdlib.wait" methodName="execute" methodSignature="(Ljason/asSemantics/TransitionSystem;Ljason/asSemantics/Unifier;[Ljason/asSyntax/Term;)Ljava/lang/Object;" time="1258" count="2" selfTime="39" lineNumber="-1" percent="0.4">
                <node leaf="false" class="jason.stdlib.wait$WaitEvent" methodName="&lt;init&gt;" methodSignature="(Ljason/stdlib/wait;Ljason/asSyntax/Trigger;Ljason/asSyntax/LogicalFormula;Ljason/asSemantics/Unifier;Ljason/asSemantics/TransitionSystem;JLjason/asSyntax/Term;)V" time="1202" count="2" selfTime="614" lineNumber="-1" percent="0.3">
                  <node leaf="false" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" time="311" count="2" selfTime="8" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" time="303" count="2" selfTime="34" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" time="117" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="toString" methodSignature="()Ljava/lang/String;" time="113" count="2" selfTime="24" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="71" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" time="63" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" time="32" count="2" selfTime="23" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="toString" methodSignature="()Ljava/lang/String;" time="9" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.lang.String" methodName="valueOf" methodSignature="(J)Ljava/lang/String;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="java.lang.Math" methodName="round" methodSignature="(D)J" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="true" class="java.util.List" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.util.stream.Collectors" methodName="joining" methodSignature="(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Literal" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="8" count="2" selfTime="8" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" time="105" count="2" selfTime="77" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="toString" methodSignature="()Ljava/lang/String;" time="28" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.String" methodName="valueOf" methodSignature="(J)Ljava/lang/String;" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.Math" methodName="round" methodSignature="(D)J" time="9" count="2" selfTime="9" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="java.util.List" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.stream.Collectors" methodName="joining" methodSignature="(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="java.util.concurrent.ScheduledExecutorService" methodName="schedule" methodSignature="(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;" time="118" count="2" selfTime="118" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="41" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="3" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="6" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="3" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addPendingIntention" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Term;Ljason/asSemantics/Intention;Z)V" time="37" count="2" selfTime="15" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.Queue" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSemantics.CircumstanceListener" methodName="intentionWaiting" methodSignature="(Ljason/asSemantics/Intention;Ljason/asSyntax/Term;)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSemantics.Intention" methodName="setSuspendedReason" methodSignature="(Ljason/asSyntax/Term;)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="createLiteral" methodSignature="(Ljava/lang/String;[Ljason/asSyntax/Term;)Ljason/asSyntax/Literal;" time="36" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="18" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="13" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="8" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="6" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="addTerms" methodSignature="([Ljason/asSyntax/Term;)Ljason/asSyntax/Literal;" time="11" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="createStructure" methodSignature="(Ljava/lang/String;[Ljason/asSyntax/Term;)Ljason/asSyntax/Structure;" time="15" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="addTerms" methodSignature="([Ljason/asSyntax/Term;)Ljason/asSyntax/Literal;" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addEventListener" methodSignature="(Ljason/asSemantics/CircumstanceListener;)V" time="10" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Queue" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="createNumber" methodSignature="(D)Ljason/asSyntax/NumberTerm;" time="8" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="4" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="java.lang.System" methodName="currentTimeMillis" methodSignature="()J" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getScheduler" methodSignature="()Ljava/util/concurrent/ScheduledExecutorService;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedIntention" methodSignature="()Ljason/asSemantics/Intention;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.Intention" methodName="getId" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getC" methodSignature="()Ljason/asSemantics/Circumstance;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.DefaultInternalAction" methodName="checkArguments" methodSignature="([Ljason/asSyntax/Term;)V" time="8" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.stdlib.wait" methodName="getMinArgs" methodSignature="()I" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.stdlib.wait" methodName="getMaxArgs" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.lang.Boolean" methodName="valueOf" methodSignature="(Z)Ljava/lang/Boolean;" time="8" count="2" selfTime="8" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="prepareBodyForEvent" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;Ljason/asSemantics/IntendedMeans;)Ljason/asSyntax/Literal;" time="768" count="6" selfTime="86" lineNumber="-1" percent="0.2">
                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="375" count="6" selfTime="9" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="366" count="6" selfTime="14" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="352" count="6" selfTime="13" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="337" count="6" selfTime="48" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="196" count="5" selfTime="43" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="114" count="5" selfTime="24" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="87" count="5" selfTime="17" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="39" count="5" selfTime="33" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="31" count="5" selfTime="8" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="13" count="5" selfTime="7" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="6" count="5" selfTime="6" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="17" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="16" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="8" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="65" count="6" selfTime="20" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="37" count="6" selfTime="13" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="21" count="6" selfTime="15" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="9" count="4" selfTime="9" lineNumber="-1" percent="0.0"/>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="7" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="172" count="6" selfTime="38" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="35" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="28" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="25" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="22" count="6" selfTime="14" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="8" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="31" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="22" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="15" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="10" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="25" count="6" selfTime="11" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="14" count="6" selfTime="10" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="22" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="18" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="14" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="8" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="10" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="9" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Literal" methodName="forceFullLiteralImpl" methodSignature="()Ljason/asSyntax/Literal;" time="44" count="6" selfTime="16" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="isAtom" methodSignature="()Z" time="28" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="isAtom" methodSignature="()Z" time="21" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="isAtom" methodSignature="()Z" time="13" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" time="7" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="6" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Pred" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="38" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="32" count="6" selfTime="13" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSemantics.Unifier" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="24" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" time="12" count="6" selfTime="12" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="8" count="6" selfTime="8" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="20" count="6" selfTime="15" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.runtime.Settings" methodName="isTROon" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Pred" methodName="hasSource" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.DefaultInternalAction" methodName="prepareArguments" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)[Ljason/asSyntax/Term;" time="676" count="10" selfTime="76" lineNumber="-1" percent="0.2">
                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="552" count="8" selfTime="10" lineNumber="-1" percent="0.2">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="542" count="8" selfTime="13" lineNumber="-1" percent="0.2">
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="528" count="8" selfTime="15" lineNumber="-1" percent="0.2">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="512" count="8" selfTime="66" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="330" count="6" selfTime="1" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="329" count="6" selfTime="8" lineNumber="-1" percent="0.1">
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="321" count="6" selfTime="7" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="314" count="6" selfTime="23" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="198" count="3" selfTime="17" lineNumber="-1" percent="0.1">
                                  <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="128" count="3" selfTime="58" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="32" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="28" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="12" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="7" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="7" count="3" selfTime="7" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.functions.time" methodName="evaluate" methodSignature="(Ljason/asSemantics/TransitionSystem;[Ljason/asSyntax/Term;)D" time="17" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.lang.System" methodName="currentTimeMillis" methodSignature="()J" time="11" count="3" selfTime="11" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="8" count="3" selfTime="7" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="getTermsArray" methodSignature="()[Ljason/asSyntax/Term;" time="7" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" time="3" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="isGround" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSemantics.DefaultArithFunction" methodName="allowUngroundTerms" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="36" count="3" selfTime="9" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="19" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="15" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="3" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="isUnary" methodSignature="()Z" time="5" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="2" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.ArithExpr$ArithmeticOp$3" methodName="eval" methodSignature="(DD)D" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="58" count="5" selfTime="12" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="21" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="17" count="5" selfTime="8" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="5" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="17" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="14" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="11" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="9" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="20" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="9" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="8" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="66" count="8" selfTime="18" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="39" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="25" count="8" selfTime="23" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="11" count="8" selfTime="11" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="11" count="8" selfTime="11" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="9" count="11" selfTime="9" lineNumber="-1" percent="0.0"/>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="7" count="8" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="6" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="11" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="11" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="18" count="18" selfTime="16" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="18" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="15" count="10" selfTime="14" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="10" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="10" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.stdlib.broadcast" methodName="execute" methodSignature="(Ljason/asSemantics/TransitionSystem;Ljason/asSemantics/Unifier;[Ljason/asSyntax/Term;)Ljava/lang/Object;" time="554" count="8" selfTime="57" lineNumber="-1" percent="0.2">
                <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="broadcast" methodSignature="(Ljason/asSemantics/Message;)V" time="208" count="8" selfTime="59" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.infra.centralised.BaseRuntimeServices" methodName="getAgentsNames" methodSignature="()Ljava/util/Collection;" time="58" count="8" selfTime="28" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" time="26" count="8" selfTime="26" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.infra.centralised.BaseCentralisedMAS" methodName="getAgs" methodSignature="()Ljava/util/Map;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="45" count="8" selfTime="45" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="16" count="8" selfTime="16" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="14" count="16" selfTime="14" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.runtime.RuntimeServicesFactory" methodName="get" methodSignature="()Ljason/runtime/RuntimeServices;" time="10" count="8" selfTime="10" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Message" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" time="178" count="8" selfTime="40" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSemantics.Message" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V" time="69" count="8" selfTime="30" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSemantics.Message" methodName="setIlForce" methodSignature="(Ljava/lang/String;)V" time="39" count="8" selfTime="23" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="16" count="40" selfTime="16" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(I)Ljava/lang/StringBuilder;" time="19" count="8" selfTime="19" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.concurrent.atomic.AtomicInteger" methodName="incrementAndGet" methodSignature="()I" time="18" count="8" selfTime="18" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="14" count="8" selfTime="14" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="10" count="8" selfTime="10" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="8" selfTime="8" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.stdlib.broadcast" methodName="checkArguments" methodSignature="([Ljason/asSyntax/Term;)V" time="55" count="8" selfTime="26" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSemantics.DefaultInternalAction" methodName="checkArguments" methodSignature="([Ljason/asSyntax/Term;)V" time="27" count="8" selfTime="22" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.stdlib.broadcast" methodName="getMinArgs" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.stdlib.broadcast" methodName="getMaxArgs" methodSignature="()I" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="isAtom" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" time="20" count="8" selfTime="16" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="toString" methodSignature="()Ljava/lang/String;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.lang.Boolean" methodName="valueOf" methodSignature="(Z)Ljava/lang/Boolean;" time="17" count="8" selfTime="17" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="15" count="16" selfTime="12" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="getAgName" methodSignature="()Ljava/lang/String;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="353" count="5" selfTime="13" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="340" count="5" selfTime="12" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="327" count="5" selfTime="17" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="308" count="5" selfTime="59" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="115" count="3" selfTime="44" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="57" count="3" selfTime="12" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="45" count="3" selfTime="14" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="20" count="3" selfTime="12" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="3" selfTime="7" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="11" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="6" count="3" selfTime="6" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="4" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="87" count="5" selfTime="38" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="44" count="5" selfTime="20" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="22" count="5" selfTime="10" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="12" count="5" selfTime="12" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="16" count="5" selfTime="7" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="9" count="5" selfTime="9" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="11" count="5" selfTime="7" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="9" count="5" selfTime="9" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="8" count="5" selfTime="8" lineNumber="-1" percent="0.0"/>
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Agent" methodName="brf" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;Ljason/asSemantics/Intention;)[Ljava/util/List;" time="318" count="1" selfTime="6" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSemantics.Agent" methodName="brf" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;Ljason/asSemantics/Intention;Z)[Ljava/util/List;" time="312" count="1" selfTime="41" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="remove" methodSignature="(Ljason/asSyntax/Literal;)Z" time="244" count="1" selfTime="19" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;)Z" time="95" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="51" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="50" count="1" selfTime="15" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="16" count="3" selfTime="16" lineNumber="-1" percent="0.0"/>
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="13" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="12" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Literal" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.lang.String" methodName="compareTo" methodSignature="(Ljava/lang/String;)I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.String" methodName="compareTo" methodSignature="(Ljava/lang/String;)I" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="19" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljava/lang/Object;" time="18" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljason/asSyntax/Term;" time="16" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="14" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="10" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" time="8" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="contains" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSyntax/Literal;" time="44" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="contains" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSyntax/Literal;" time="24" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="22" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="10" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="10" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="calcHashCode" methodSignature="()I" time="8" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" time="6" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="equalsAsStructure" methodSignature="(Ljava/lang/Object;)Z" time="8" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="8" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="8" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="removeFromEntry" methodSignature="(Ljason/asSyntax/Literal;)Z" time="33" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="remove" methodSignature="(Ljason/asSyntax/Literal;)V" time="21" count="1" selfTime="8" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="7" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="equalsAsStructure" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                        <node leaf="true" class="java.util.Deque" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSource" methodSignature="()Z" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl$3" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="isEmpty" methodSignature="()Z" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="delAnnots" methodSignature="(Ljava/util/List;)Z" time="32" count="1" selfTime="8" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="12" count="1" selfTime="11" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Pred" methodName="delAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="8" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="7" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="setValuesFrom" methodSignature="(Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljason/asSyntax/Term;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="21" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="15" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="14" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="5" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="5" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.String" methodName="compareTo" methodSignature="(Ljava/lang/String;)I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.bb.BeliefBase" methodName="getLock" methodSignature="()Ljava/lang/Object;" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Collections" methodName="emptyList" methodSignature="()Ljava/util/List;" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Collections" methodName="singletonList" methodSignature="(Ljava/lang/Object;)Ljava/util/List;" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="removeActionReQueue" methodSignature="(Ljason/asSemantics/Intention;)V" time="213" count="11" selfTime="30" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)V" time="88" count="11" selfTime="22" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="48" count="11" selfTime="48" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="15" count="11" selfTime="9" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="6" count="11" selfTime="6" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="3" count="11" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="removeCurrentStep" methodSignature="()Ljason/asSyntax/Term;" time="43" count="11" selfTime="23" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="15" count="11" selfTime="13" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="2" count="11" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" time="3" count="11" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyNext" methodSignature="()Ljason/asSyntax/PlanBody;" time="2" count="11" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="38" count="11" selfTime="7" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="31" count="11" selfTime="31" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="14" count="11" selfTime="8" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="6" count="11" selfTime="6" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.InternalActionLiteral" methodName="getIA" methodSignature="(Ljason/asSemantics/Agent;)Ljason/asSemantics/InternalAction;" time="131" count="13" selfTime="35" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSemantics.Agent" methodName="getIA" methodSignature="(Ljava/lang/String;)Ljason/asSemantics/InternalAction;" time="94" count="6" selfTime="30" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="20" count="6" selfTime="20" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="16" count="12" selfTime="16" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" time="12" count="6" selfTime="12" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="6" selfTime="9" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="7" count="6" selfTime="7" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addAchvGoal" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Intention;)Ljason/asSemantics/Event;" time="120" count="5" selfTime="27" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addEvent" methodSignature="(Ljason/asSemantics/Event;)V" time="55" count="5" selfTime="9" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="30" count="5" selfTime="30" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSemantics.Event" methodName="isAtomic" methodSignature="()Z" time="9" count="5" selfTime="8" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="7" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" time="31" count="5" selfTime="16" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="11" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="8" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="6" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="5" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Trigger" methodName="setTrigOp" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;)V" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSemantics.Event" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSemantics/Intention;)V" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="checkHardDeadline" methodSignature="(Ljason/asSemantics/Event;)V" time="119" count="5" selfTime="20" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="getAnnot" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/Literal;" time="95" count="5" selfTime="30" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="18" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" time="15" count="5" selfTime="15" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.lang.String" methodName="compareTo" methodSignature="(Ljava/lang/String;)I" time="17" count="5" selfTime="17" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="16" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljava/lang/Object;" time="13" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljason/asSyntax/Term;" time="11" count="5" selfTime="6" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="4" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="12" count="5" selfTime="6" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="6" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSemantics.Event" methodName="getTrigger" methodSignature="()Ljason/asSyntax/Trigger;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="97" count="24" selfTime="76" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="21" count="24" selfTime="21" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.stdlib.foreach" methodName="prepareArguments" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)[Ljason/asSyntax/Term;" time="94" count="3" selfTime="14" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Literal" methodName="getTermsArray" methodSignature="()[Ljason/asSyntax/Term;" time="80" count="3" selfTime="31" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.List" methodName="toArray" methodSignature="([Ljava/lang/Object;)[Ljava/lang/Object;" time="40" count="3" selfTime="40" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" time="8" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerms" methodSignature="()Ljava/util/List;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="62" count="30" selfTime="33" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="29" count="30" selfTime="29" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="51" count="24" selfTime="43" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="8" count="24" selfTime="8" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="updateEvents" methodSignature="([Ljava/util/List;Ljason/asSemantics/Intention;)Z" time="41" count="1" selfTime="15" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="updateEvents" methodSignature="(Ljason/asSemantics/Event;)V" time="10" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addEvent" methodSignature="(Ljason/asSemantics/Event;)V" time="7" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Queue" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSemantics.Event" methodName="isAtomic" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" time="9" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="jason.asSemantics.Event" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSemantics/Intention;)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="java.lang.Boolean" methodName="booleanValue" methodSignature="()Z" time="19" count="13" selfTime="19" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.ActionExec" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Intention;)V" time="13" count="5" selfTime="13" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="12" count="24" selfTime="12" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyType" methodSignature="()Ljason/asSyntax/PlanBody$BodyType;" time="11" count="25" selfTime="11" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" time="9" count="24" selfTime="9" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getCurrentStep" methodSignature="()Ljason/asSyntax/PlanBody;" time="6" count="24" selfTime="6" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.DefaultInternalAction" methodName="suspendIntention" methodSignature="()Z" time="5" count="11" selfTime="5" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.runtime.Settings" methodName="sameFocus" methodSignature="()Z" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.stdlib.wait" methodName="suspendIntention" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyProcAct" methodSignature="()V" time="665" count="27" selfTime="112" lineNumber="-1" percent="0.2">
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyClrInt" methodSignature="(Ljason/asSemantics/Intention;)V" time="207" count="5" selfTime="67" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="joinRenamedVarsIntoIntentionUnifier" methodSignature="(Ljason/asSemantics/IntendedMeans;Ljason/asSemantics/Unifier;)V" time="42" count="3" selfTime="14" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" time="13" count="3" selfTime="13" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="13" count="3" selfTime="13" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="pop" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="23" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="pop" methodSignature="()Ljava/lang/Object;" time="15" count="3" selfTime="15" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="19" count="11" selfTime="8" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="11" count="11" selfTime="11" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="13" count="11" selfTime="12" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="10" count="11" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="6" count="11" selfTime="6" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="removeCurrentStep" methodSignature="()Ljason/asSyntax/Term;" time="9" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="4" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyNext" methodSignature="()Ljason/asSyntax/PlanBody;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getTrigger" methodSignature="()Ljason/asSyntax/Trigger;" time="8" count="9" selfTime="8" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="isMetaEvent" methodSignature="()Z" time="6" count="3" selfTime="6" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="hasGoalListener" methodSignature="()Z" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="isAddition" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="isGoal" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="removeActionReQueue" methodSignature="(Ljason/asSemantics/Intention;)V" time="136" count="5" selfTime="26" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)V" time="57" count="5" selfTime="9" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="39" count="5" selfTime="39" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="7" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="removeCurrentStep" methodSignature="()Ljason/asSyntax/Term;" time="30" count="5" selfTime="15" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="14" count="5" selfTime="12" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="12" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="11" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" time="102" count="27" selfTime="57" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="30" count="27" selfTime="30" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Queue" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="5" selfTime="5" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Intention" methodName="isSuspended" methodSignature="()Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="removePendingAction" methodSignature="(I)Ljason/asSemantics/ActionExec;" time="67" count="5" selfTime="12" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="44" count="5" selfTime="44" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getIntention" methodSignature="()Ljason/asSemantics/Intention;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Agent" methodName="selectAction" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/ActionExec;" time="29" count="5" selfTime="10" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="10" count="5" selfTime="10" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="9" count="5" selfTime="9" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.Intention" methodName="getId" methodSignature="()I" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getIntention" methodSignature="()Ljason/asSemantics/Intention;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getFeedbackActions" methodSignature="()Ljava/util/Queue;" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="hasGoalListener" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySelInt" methodSignature="()V" time="243" count="27" selfTime="102" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSemantics.Agent" methodName="selectIntention" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Intention;" time="71" count="24" selfTime="37" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="34" count="24" selfTime="34" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="()Z" time="29" count="27" selfTime="14" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="15" count="27" selfTime="15" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="removeAtomicIntention" methodSignature="()Ljason/asSemantics/Intention;" time="18" count="27" selfTime="18" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="10" count="24" selfTime="10" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getRunningIntentions" methodSignature="()Ljava/util/Queue;" time="8" count="24" selfTime="8" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="isAtomicIntentionSuspended" methodSignature="()Z" time="5" count="27" selfTime="5" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyClrInt" methodSignature="(Ljason/asSemantics/Intention;)V" time="167" count="19" selfTime="48" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="37" count="23" selfTime="26" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="11" count="23" selfTime="11" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="24" count="23" selfTime="17" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="7" count="21" selfTime="7" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="23" count="23" selfTime="7" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="16" count="23" selfTime="16" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="pop" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="14" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="pop" methodSignature="()Ljava/lang/Object;" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="removeCurrentStep" methodSignature="()Ljason/asSyntax/Term;" time="8" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="joinRenamedVarsIntoIntentionUnifier" methodSignature="(Ljason/asSemantics/IntendedMeans;Ljason/asSemantics/Unifier;)V" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getTrigger" methodSignature="()Ljason/asSyntax/Trigger;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="isAddition" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="isGoal" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="isMetaEvent" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="act" methodSignature="(Ljason/asSemantics/ActionExec;)V" time="717" count="5" selfTime="15" lineNumber="-1" percent="0.2">
            <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="act" methodSignature="(Ljava/lang/String;Ljason/asSemantics/ActionExec;)V" time="702" count="5" selfTime="15" lineNumber="-1" percent="0.2">
              <node leaf="false" class="jason.environment.Environment" methodName="scheduleAction" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Structure;Ljava/lang/Object;)V" time="686" count="5" selfTime="14" lineNumber="-1" percent="0.2">
                <node leaf="true" class="java.util.concurrent.ExecutorService" methodName="execute" methodSignature="(Ljava/lang/Runnable;)V" time="658" count="5" selfTime="658" lineNumber="-1" percent="0.2"/>
                <node leaf="true" class="jason.environment.Environment$1" methodName="&lt;init&gt;" methodSignature="(Ljason/environment/Environment;Ljava/lang/String;Ljason/asSyntax/Structure;Ljava/lang/Object;)V" time="14" count="5" selfTime="14" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getActionTerm" methodSignature="()Ljason/asSyntax/Structure;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addPendingAction" methodSignature="(Ljason/asSemantics/ActionExec;)V" time="96" count="5" selfTime="35" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="28" count="5" selfTime="28" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="10" count="5" selfTime="10" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="7" count="5" selfTime="3" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getIntention" methodSignature="()Ljason/asSemantics/Intention;" time="5" count="5" selfTime="5" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getActionTerm" methodSignature="()Ljason/asSyntax/Structure;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="setSuspendedReason" methodSignature="(Ljason/asSyntax/Term;)V" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="getId" methodSignature="()I" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="66" count="75" selfTime="48" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="18" count="75" selfTime="18" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetAct" methodSignature="()V" time="25" count="27" selfTime="25" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="14" count="70" selfTime="14" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getAction" methodSignature="()Ljason/asSemantics/ActionExec;" time="7" count="27" selfTime="7" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="canSleepAct" methodSignature="()Z" time="321" count="31" selfTime="55" lineNumber="-1" percent="0.1">
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" time="208" count="12" selfTime="44" lineNumber="-1" percent="0.1">
            <node leaf="true" class="java.util.Queue" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="65" count="5" selfTime="65" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="41" count="5" selfTime="41" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="34" count="5" selfTime="34" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="19" count="12" selfTime="19" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getIntention" methodSignature="()Ljason/asSemantics/Intention;" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="isSuspended" methodSignature="()Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="()Z" time="49" count="31" selfTime="31" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="18" count="31" selfTime="18" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="canSleep" methodSignature="()Z" time="5" count="4" selfTime="2" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="18" count="31" selfTime="18" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="sense" methodSignature="()V" time="8693" count="31" selfTime="107" lineNumber="-1" percent="2.5">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="sense" methodSignature="()V" time="8552" count="31" selfTime="478" lineNumber="-1" percent="2.5">
          <node leaf="false" class="jason.asSemantics.Agent" methodName="buf" methodSignature="(Ljava/util/Collection;)I" time="6730" count="31" selfTime="386" lineNumber="-1" percent="1.9">
            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="add" methodSignature="(Ljason/asSyntax/Literal;)Z" time="2004" count="13" selfTime="15" lineNumber="-1" percent="0.6">
              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="add" methodSignature="(Ljason/asSyntax/Literal;Z)Z" time="1989" count="13" selfTime="85" lineNumber="-1" percent="0.6">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="689" count="13" selfTime="112" lineNumber="-1" percent="0.2">
                  <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="488" count="13" selfTime="14" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="474" count="13" selfTime="159" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="180" count="13" selfTime="10" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="170" count="13" selfTime="105" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.String" methodName="compareTo" methodSignature="(Ljava/lang/String;)I" time="14" count="13" selfTime="14" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="12" count="39" selfTime="12" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="7" count="39" selfTime="7" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="6" count="26" selfTime="6" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isNumeric" methodSignature="()Z" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="5" count="26" selfTime="5" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="5" count="26" selfTime="5" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="5" count="26" selfTime="5" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="compareTo" methodSignature="(Ljava/lang/String;)I" time="30" count="13" selfTime="30" lineNumber="-1" percent="0.0"/>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="24" count="26" selfTime="20" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="26" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="23" count="26" selfTime="15" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="8" count="26" selfTime="8" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="12" count="26" selfTime="12" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isNumeric" methodSignature="()Z" time="10" count="13" selfTime="10" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="9" count="39" selfTime="9" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="8" count="39" selfTime="8" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="7" count="26" selfTime="7" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="6" count="26" selfTime="6" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="40" count="13" selfTime="6" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="34" count="13" selfTime="7" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="27" count="13" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="15" count="13" selfTime="9" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="25" count="13" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="18" count="13" selfTime="12" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="12" count="13" selfTime="8" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Pred" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="13" selfTime="7" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="5" count="26" selfTime="5" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" time="473" count="13" selfTime="9" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="464" count="13" selfTime="9" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="455" count="13" selfTime="19" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="434" count="13" selfTime="11" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="418" count="13" selfTime="40" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="cloneLT" methodSignature="()Ljason/asSyntax/ListTerm;" time="200" count="13" selfTime="15" lineNumber="-1" percent="0.1">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="185" count="13" selfTime="41" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="78" count="13" selfTime="8" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="70" count="13" selfTime="20" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="50" count="13" selfTime="10" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="40" count="13" selfTime="10" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="30" count="13" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="25" count="13" selfTime="13" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="12" count="13" selfTime="8" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="61" count="13" selfTime="11" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="50" count="13" selfTime="14" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="36" count="13" selfTime="9" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="27" count="13" selfTime="12" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="15" count="13" selfTime="8" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="13" selfTime="7" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Pred$1" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="150" count="13" selfTime="30" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="36" count="13" selfTime="16" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="15" count="13" selfTime="9" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="23" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="21" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithExpr;)V" time="20" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithFunctionTerm;)V" time="20" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="17" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="14" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="4" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="22" count="16" selfTime="15" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="14" count="13" selfTime="10" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="11" count="9" selfTime="11" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="7" count="13" selfTime="7" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="25" count="13" selfTime="19" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="provideBelEntry" methodSignature="(Ljason/asSyntax/Literal;)Ljason/bb/DefaultBeliefBase$BelEntry;" time="319" count="13" selfTime="44" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;)V" time="115" count="10" selfTime="46" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.concurrent.LinkedBlockingDeque" methodName="&lt;init&gt;" methodSignature="()V" time="60" count="10" selfTime="60" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.concurrent.ConcurrentHashMap" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="10" selfTime="9" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="86" count="23" selfTime="28" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="42" count="13" selfTime="8" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="34" count="13" selfTime="18" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="11" count="13" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="12" count="13" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="13" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="37" count="10" selfTime="36" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="10" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="30" count="13" selfTime="16" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="13" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="5" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="13" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="7" count="13" selfTime="7" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="contains" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSyntax/Literal;" time="202" count="13" selfTime="40" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="105" count="13" selfTime="42" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="46" count="13" selfTime="16" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="30" count="13" selfTime="14" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="10" count="13" selfTime="9" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="13" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="7" count="13" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="31" count="13" selfTime="11" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="17" count="3" selfTime="11" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="4" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="contains" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSyntax/Literal;" time="25" count="3" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="16" count="3" selfTime="10" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="6" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="13" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="add" methodSignature="(Ljason/asSyntax/Literal;Z)V" time="179" count="13" selfTime="24" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="82" count="13" selfTime="63" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="19" count="13" selfTime="11" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="8" count="13" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="true" class="java.util.Deque" methodName="addFirst" methodSignature="(Ljava/lang/Object;)V" time="67" count="13" selfTime="67" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Set" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="36" count="13" selfTime="27" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="13" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="canBeAddedInBB" methodSignature="()Z" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="java.util.Iterator" methodName="remove" methodSignature="()V" time="967" count="13" selfTime="18" lineNumber="-1" percent="0.3">
              <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="remove" methodSignature="()V" time="949" count="13" selfTime="44" lineNumber="-1" percent="0.3">
                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="removeFromEntry" methodSignature="(Ljason/asSyntax/Literal;)Z" time="673" count="13" selfTime="84" lineNumber="-1" percent="0.2">
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="remove" methodSignature="(Ljason/asSyntax/Literal;)V" time="284" count="13" selfTime="35" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="140" count="13" selfTime="86" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="35" count="13" selfTime="17" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="equalsAsStructure" methodSignature="(Ljava/lang/Object;)Z" time="18" count="13" selfTime="13" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="19" count="13" selfTime="11" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="8" count="13" selfTime="5" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="java.util.Deque" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="96" count="13" selfTime="79" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="17" count="15" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="13" count="13" selfTime="13" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSource" methodSignature="()Z" time="154" count="13" selfTime="25" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="87" count="13" selfTime="36" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="51" count="13" selfTime="24" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="27" count="13" selfTime="27" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="42" count="13" selfTime="23" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" time="19" count="13" selfTime="16" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="73" count="13" selfTime="31" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="38" count="3" selfTime="13" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="13" count="3" selfTime="13" lineNumber="-1" percent="0.0"/>
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="9" count="3" selfTime="7" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="34" count="10" selfTime="31" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="isEmpty" methodSignature="()Z" time="29" count="13" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="24" count="13" selfTime="24" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="10" count="13" selfTime="10" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Pred" methodName="delAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="186" count="13" selfTime="28" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="158" count="13" selfTime="101" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="setValuesFrom" methodSignature="(Ljason/asSyntax/ListTerm;)V" time="37" count="13" selfTime="25" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="8" count="13" selfTime="8" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="11" count="26" selfTime="11" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Pred" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="9" count="13" selfTime="9" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="java.util.Iterator" methodName="remove" methodSignature="()V" time="46" count="13" selfTime="35" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="11" count="13" selfTime="9" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
              </node>
            </node>
            <node leaf="false" class="java.util.Set" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="674" count="37" selfTime="110" lineNumber="-1" percent="0.2">
              <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="519" count="24" selfTime="15" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="equalsAsStructure" methodSignature="(Ljava/lang/Object;)Z" time="504" count="24" selfTime="22" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="482" count="24" selfTime="242" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="86" count="22" selfTime="46" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="19" selfTime="12" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="9" count="38" selfTime="9" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="9" count="38" selfTime="9" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="isAtom" methodSignature="()Z" time="7" count="19" selfTime="7" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="19" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="44" count="48" selfTime="28" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="16" count="48" selfTime="16" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="44" count="52" selfTime="30" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="14" count="52" selfTime="14" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="18" count="4" selfTime="16" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="24" selfTime="12" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="10" count="48" selfTime="10" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="10" count="24" selfTime="10" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="9" count="48" selfTime="9" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="24" selfTime="7" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="45" count="37" selfTime="18" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="27" count="37" selfTime="13" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="14" count="37" selfTime="14" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="updateEvents" methodSignature="(Ljason/asSemantics/Event;)V" time="512" count="13" selfTime="78" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="hasCandidatePlan" methodSignature="(Ljason/asSyntax/Trigger;)Z" time="319" count="13" selfTime="13" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" time="306" count="13" selfTime="43" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="181" count="13" selfTime="54" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="46" count="13" selfTime="13" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="33" count="13" selfTime="18" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="13" selfTime="5" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="20" count="13" selfTime="14" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Trigger$TEType$1" methodName="toString" methodSignature="()Ljava/lang/String;" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="13" count="26" selfTime="13" lineNumber="-1" percent="0.0"/>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="12" count="13" selfTime="10" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="9" count="13" selfTime="9" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Trigger$TEOperator$1" methodName="toString" methodSignature="()Ljava/lang/String;" time="8" count="13" selfTime="8" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="13" selfTime="8" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="56" count="13" selfTime="23" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="31" count="7" selfTime="19" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="6" count="7" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="9" count="13" selfTime="9" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="7" count="26" selfTime="7" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addEvent" methodSignature="(Ljason/asSemantics/Event;)V" time="78" count="7" selfTime="16" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="49" count="7" selfTime="49" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="9" count="7" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSemantics.Event" methodName="isAtomic" methodSignature="()Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="19" count="13" selfTime="7" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="12" count="13" selfTime="12" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.Event" methodName="isInternal" methodSignature="()Z" time="12" count="13" selfTime="12" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Agent" methodName="getPL" methodSignature="()Ljason/asSyntax/PlanLibrary;" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="418" count="13" selfTime="82" lineNumber="-1" percent="0.1">
              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="115" count="13" selfTime="15" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="100" count="13" selfTime="11" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="89" count="13" selfTime="69" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="20" count="13" selfTime="16" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="62" count="13" selfTime="21" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="41" count="13" selfTime="9" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="32" count="13" selfTime="11" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="21" count="13" selfTime="8" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="13" selfTime="9" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="61" count="13" selfTime="10" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="51" count="13" selfTime="16" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="35" count="13" selfTime="8" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="27" count="13" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="21" count="13" selfTime="9" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="12" count="13" selfTime="8" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="50" count="13" selfTime="15" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="35" count="13" selfTime="20" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="15" count="13" selfTime="15" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="22" count="13" selfTime="17" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="19" count="13" selfTime="12" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="7" count="13" selfTime="7" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="7" count="13" selfTime="7" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="hasCandidatePlan" methodSignature="(Ljason/asSyntax/Trigger;)Z" time="404" count="13" selfTime="16" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" time="388" count="13" selfTime="80" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="259" count="13" selfTime="96" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="55" count="13" selfTime="22" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="33" count="13" selfTime="20" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="13" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="40" count="13" selfTime="31" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.Trigger$TEType$1" methodName="toString" methodSignature="()Ljava/lang/String;" time="9" count="13" selfTime="9" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="22" count="26" selfTime="22" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="15" count="13" selfTime="15" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="10" count="13" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Trigger$TEOperator$2" methodName="toString" methodSignature="()Ljava/lang/String;" time="9" count="13" selfTime="9" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="7" count="13" selfTime="7" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="28" count="13" selfTime="27" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="13" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="12" count="13" selfTime="12" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="26" selfTime="4" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" time="317" count="13" selfTime="20" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="297" count="13" selfTime="23" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="274" count="13" selfTime="25" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="244" count="13" selfTime="23" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="216" count="13" selfTime="15" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="194" count="13" selfTime="64" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="52" count="13" selfTime="19" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="31" count="13" selfTime="23" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="13" selfTime="8" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="13" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="32" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="29" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithExpr;)V" time="28" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithFunctionTerm;)V" time="25" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="22" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="20" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="14" count="16" selfTime="12" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="16" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="9" count="9" selfTime="7" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="2" count="9" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="9" count="13" selfTime="9" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="7" count="13" selfTime="7" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" time="289" count="26" selfTime="116" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="146" count="26" selfTime="40" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="106" count="26" selfTime="27" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="79" count="26" selfTime="27" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="52" count="26" selfTime="39" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="26" selfTime="13" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="setTrigOp" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;)V" time="13" count="26" selfTime="13" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="9" count="26" selfTime="9" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="5" count="26" selfTime="5" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="132" count="102" selfTime="78" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="hasNext" methodSignature="()Z" time="54" count="42" selfTime="26" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="28" count="42" selfTime="28" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="121" count="87" selfTime="50" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="71" count="37" selfTime="26" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="45" count="37" selfTime="26" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="19" count="37" selfTime="19" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="java.util.Set" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="120" count="37" selfTime="46" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="74" count="37" selfTime="42" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="32" count="37" selfTime="19" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="13" count="37" selfTime="13" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getPercepts" methodSignature="()Ljava/util/Iterator;" time="111" count="5" selfTime="22" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="66" count="5" selfTime="66" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.bb.DefaultBeliefBase$1" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljava/util/Iterator;)V" time="23" count="5" selfTime="23" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSyntax.Literal" methodName="forceFullLiteralImpl" methodSignature="()Ljason/asSyntax/Literal;" time="71" count="13" selfTime="20" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="isAtom" methodSignature="()Z" time="51" count="13" selfTime="11" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="isAtom" methodSignature="()Z" time="40" count="13" selfTime="9" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="isAtom" methodSignature="()Z" time="31" count="13" selfTime="12" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" time="19" count="13" selfTime="7" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="12" count="13" selfTime="12" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="51" count="74" selfTime="51" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Event" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSemantics/Intention;)V" time="32" count="13" selfTime="32" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="27" count="13" selfTime="12" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="15" count="13" selfTime="15" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.util.HashSet" methodName="&lt;init&gt;" methodSignature="()V" time="27" count="5" selfTime="27" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="24" count="5" selfTime="24" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="15" count="5" selfTime="15" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="13" count="18" selfTime="13" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.Literal" methodName="subjectToBUF" methodSignature="()Z" time="8" count="37" selfTime="8" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getC" methodSignature="()Ljason/asSemantics/Circumstance;" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="perceive" methodSignature="()Ljava/util/Collection;" time="770" count="31" selfTime="192" lineNumber="-1" percent="0.2">
            <node leaf="false" class="jason.environment.Environment" methodName="getPercepts" methodSignature="(Ljava/lang/String;)Ljava/util/Collection;" time="511" count="31" selfTime="71" lineNumber="-1" percent="0.1">
              <node leaf="true" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="285" count="31" selfTime="285" lineNumber="-1" percent="0.1"/>
              <node leaf="true" class="java.util.Collection" methodName="addAll" methodSignature="(Ljava/util/Collection;)Z" time="48" count="5" selfTime="48" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.Set" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="41" count="5" selfTime="41" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="23" count="5" selfTime="23" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="20" count="5" selfTime="20" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="16" count="5" selfTime="16" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="jason.architecture.AgArch" methodName="perceive" methodSignature="()Ljava/util/Collection;" time="28" count="31" selfTime="28" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="21" count="31" selfTime="21" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="getAgName" methodSignature="()Ljava/lang/String;" time="14" count="31" selfTime="14" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedEnvironment" methodName="getUserEnvironment" methodSignature="()Ljason/environment/Environment;" time="4" count="31" selfTime="4" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySemanticRuleSense" methodSignature="()V" time="208" count="31" selfTime="71" lineNumber="-1" percent="0.1">
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyProcMsg" methodSignature="()V" time="137" count="31" selfTime="53" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasMsg" methodSignature="()Z" time="84" count="31" selfTime="23" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="61" count="31" selfTime="61" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="checkMail" methodSignature="()V" time="185" count="31" selfTime="81" lineNumber="-1" percent="0.1">
            <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="92" count="31" selfTime="92" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="7" count="31" selfTime="7" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getC" methodSignature="()Ljason/asSemantics/Circumstance;" time="5" count="31" selfTime="5" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="87" count="31" selfTime="87" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="67" count="62" selfTime="53" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="14" count="62" selfTime="14" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetSense" methodSignature="()V" time="12" count="31" selfTime="12" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.runtime.Settings" methodName="nrcbp" methodSignature="()I" time="10" count="31" selfTime="10" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.PlanLibrary" methodName="hasJagPlans" methodSignature="()Z" time="5" count="31" selfTime="5" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="34" count="31" selfTime="34" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="125" count="62" selfTime="125" lineNumber="-1" percent="0.0"/>
      <node leaf="true" class="jason.architecture.AgArch" methodName="reasoningCycleFinished" methodSignature="()V" time="8" count="31" selfTime="8" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="sleep" methodSignature="()V" time="361" count="14" selfTime="149" lineNumber="-1" percent="0.1">
      <node leaf="true" class="java.lang.Object" methodName="wait" methodSignature="(J)V" time="199" count="14" selfTime="199" lineNumber="-1" percent="0.1"/>
      <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="7" count="14" selfTime="7" lineNumber="-1" percent="0.0"/>
      <node leaf="true" class="jason.runtime.Settings" methodName="isSync" methodSignature="()Z" time="4" count="14" selfTime="4" lineNumber="-1" percent="0.0"/>
      <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getSettings" methodSignature="()Ljason/runtime/Settings;" time="2" count="14" selfTime="2" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="canSleep" methodSignature="()Z" time="279" count="31" selfTime="117" lineNumber="-1" percent="0.1">
      <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" time="44" count="31" selfTime="23" lineNumber="-1" percent="0.0">
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="21" count="31" selfTime="21" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="jason.asSemantics.Circumstance" methodName="isAtomicIntentionSuspended" methodSignature="()Z" time="28" count="31" selfTime="28" lineNumber="-1" percent="0.0"/>
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="canSleep" methodSignature="()Z" time="25" count="14" selfTime="17" lineNumber="-1" percent="0.0">
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="6" count="14" selfTime="6" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="2" count="14" selfTime="2" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="()Z" time="24" count="25" selfTime="11" lineNumber="-1" percent="0.0">
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="13" count="25" selfTime="13" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="17" count="14" selfTime="9" lineNumber="-1" percent="0.0">
        <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="8" count="14" selfTime="8" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" time="11" count="14" selfTime="6" lineNumber="-1" percent="0.0">
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="5" count="14" selfTime="5" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasMsg" methodSignature="()Z" time="11" count="14" selfTime="8" lineNumber="-1" percent="0.0">
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="3" count="14" selfTime="3" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="14" selfTime="2" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasMsg" methodSignature="()Z" time="214" count="4" selfTime="140" lineNumber="-1" percent="0.1">
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="74" count="4" selfTime="74" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="true" class="jason.runtime.Settings" methodName="isSync" methodSignature="()Z" time="98" count="34" selfTime="98" lineNumber="-1" percent="0.0"/>
    <node leaf="false" class="jason.architecture.AgArch" methodName="incCycleNumber" methodSignature="()V" time="89" count="32" selfTime="62" lineNumber="-1" percent="0.0">
      <node leaf="true" class="jason.architecture.AgArch" methodName="setCycleNumber" methodSignature="(I)V" time="27" count="32" selfTime="27" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.environment.Environment" methodName="getPercepts" methodSignature="(Ljava/lang/String;)Ljava/util/Collection;" time="87" count="1" selfTime="22" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="65" count="1" selfTime="65" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getSettings" methodSignature="()Ljason/runtime/Settings;" time="52" count="32" selfTime="52" lineNumber="-1" percent="0.0"/>
    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" time="44" count="4" selfTime="37" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="7" count="4" selfTime="7" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetSense" methodSignature="()V" time="40" count="2" selfTime="40" lineNumber="-1" percent="0.0"/>
    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="()Z" time="28" count="5" selfTime="22" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="6" count="5" selfTime="6" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" time="22" count="5" selfTime="16" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="6" count="5" selfTime="6" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="21" count="32" selfTime="21" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.infra.centralised.CentralisedEnvironment" methodName="getUserEnvironment" methodSignature="()Ljason/environment/Environment;" time="16" count="1" selfTime="16" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSyntax.PlanLibrary" methodName="hasJagPlans" methodSignature="()Z" time="15" count="1" selfTime="15" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Agent" methodName="buf" methodSignature="(Ljava/util/Collection;)I" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.runtime.Settings" methodName="nrcbp" methodSignature="()I" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedEvent" methodSignature="()Ljason/asSemantics/Event;" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedIntention" methodSignature="()Ljason/asSemantics/Intention;" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="isAtomicIntentionSuspended" methodSignature="()Z" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getAction" methodSignature="()Ljason/asSemantics/ActionExec;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetAct" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="removeAtomicIntention" methodSignature="()Ljason/asSemantics/Intention;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
  </node>
  <node leaf="false" class="java.util.concurrent.ThreadPoolExecutor$Worker" methodName="run" methodSignature="()V" time="172335" count="6" selfTime="7247" lineNumber="-1" percent="49.4">
    <node leaf="false" class="jason.environment.Environment$1" methodName="run" methodSignature="()V" time="162257" count="5" selfTime="97" lineNumber="-1" percent="46.5">
      <node leaf="false" class="NavigatorGridWorld" methodName="executeAction" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Structure;)Z" time="161960" count="5" selfTime="267" lineNumber="-1" percent="46.5">
        <node leaf="false" class="NavigatorGridWorld" methodName="updatePercepts" methodSignature="()V" time="153504" count="5" selfTime="208" lineNumber="-1" percent="44.0">
          <node leaf="false" class="jason.environment.Environment" methodName="addPercept" methodSignature="([Ljason/asSyntax/Literal;)V" time="101962" count="37" selfTime="57" lineNumber="-1" percent="29.2">
            <node leaf="false" class="java.util.List" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="101817" count="37" selfTime="127" lineNumber="-1" percent="29.2">
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="101690" count="119" selfTime="90" lineNumber="-1" percent="29.2">
                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="101600" count="238" selfTime="28552" lineNumber="-1" percent="29.1">
                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="72599" count="238" selfTime="72599" lineNumber="-1" percent="20.8"/>
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="calcHashCode" methodSignature="()I" time="441" count="37" selfTime="35" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" time="397" count="37" selfTime="64" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="175" count="42" selfTime="28" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="147" count="42" selfTime="35" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="60" count="23" selfTime="25" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="15" count="23" selfTime="10" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="23" selfTime="5" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="8" count="23" selfTime="8" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="7" count="23" selfTime="7" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="23" selfTime="5" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" time="20" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="calcHashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="17" count="38" selfTime="17" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="11" count="42" selfTime="11" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="calcHashCode" methodSignature="()I" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="109" count="37" selfTime="54" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="26" count="37" selfTime="18" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="8" count="37" selfTime="8" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="15" count="37" selfTime="15" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="8" count="37" selfTime="8" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="6" count="37" selfTime="6" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="28" count="42" selfTime="17" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="11" count="42" selfTime="11" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="21" count="37" selfTime="18" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="37" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="9" count="37" selfTime="9" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="8" count="37" selfTime="8" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="true" class="java.util.Set" methodName="clear" methodSignature="()V" time="54" count="37" selfTime="54" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="34" count="37" selfTime="34" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSyntax.Literal" methodName="parseLiteral" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/Literal;" time="33956" count="37" selfTime="83" lineNumber="-1" percent="9.7">
            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" time="29889" count="37" selfTime="196" lineNumber="-1" percent="8.6">
              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="23220" count="37" selfTime="47" lineNumber="-1" percent="6.7">
                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="23173" count="37" selfTime="112" lineNumber="-1" percent="6.6">
                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="22504" count="37" selfTime="50" lineNumber="-1" percent="6.5">
                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" time="21957" count="17" selfTime="30" lineNumber="-1" percent="6.3">
                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJJJ)I" time="21910" count="17" selfTime="21663" lineNumber="-1" percent="6.3">
                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfa_0" methodSignature="(IJJ)I" time="247" count="17" selfTime="23" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="211" count="17" selfTime="88" lineNumber="-1" percent="0.1">
                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" time="86" count="54" selfTime="64" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="22" count="108" selfTime="22" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="37" count="54" selfTime="24" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="13" count="54" selfTime="13" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopStringLiteralDfa_0" methodSignature="(IJJ)I" time="13" count="17" selfTime="13" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="17" count="17" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="5" count="17" selfTime="5" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="497" count="20" selfTime="202" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" time="176" count="160" selfTime="123" lineNumber="-1" percent="0.1">
                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="53" count="320" selfTime="53" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="119" count="160" selfTime="77" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="42" count="160" selfTime="42" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="267" count="37" selfTime="128" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" time="64" count="37" selfTime="43" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" time="21" count="37" selfTime="21" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="43" count="37" selfTime="24" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="19" count="37" selfTime="19" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="11" count="37" selfTime="11" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="11" count="37" selfTime="11" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="6" count="37" selfTime="6" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="4" count="37" selfTime="4" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="261" count="37" selfTime="45" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="216" count="37" selfTime="66" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="FillBuff" methodSignature="()V" time="129" count="37" selfTime="40" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.io.Reader" methodName="read" methodSignature="([CII)I" time="89" count="37" selfTime="89" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="21" count="37" selfTime="21" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="29" count="74" selfTime="29" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" time="4886" count="37" selfTime="180" lineNumber="-1" percent="1.4">
                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" time="3459" count="37" selfTime="91" lineNumber="-1" percent="1.0">
                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" time="3267" count="42" selfTime="44" lineNumber="-1" percent="0.9">
                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" time="2939" count="42" selfTime="31" lineNumber="-1" percent="0.8">
                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" time="2908" count="42" selfTime="31" lineNumber="-1" percent="0.8">
                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" time="2877" count="42" selfTime="39" lineNumber="-1" percent="0.8">
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" time="1926" count="42" selfTime="45" lineNumber="-1" percent="0.6">
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" time="1881" count="42" selfTime="39" lineNumber="-1" percent="0.5">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" time="1842" count="42" selfTime="34" lineNumber="-1" percent="0.5">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" time="1808" count="42" selfTime="33" lineNumber="-1" percent="0.5">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" time="1585" count="42" selfTime="83" lineNumber="-1" percent="0.5">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" time="1194" count="27" selfTime="31" lineNumber="-1" percent="0.3">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" time="1017" count="27" selfTime="108" lineNumber="-1" percent="0.3">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" time="294" count="22" selfTime="19" lineNumber="-1" percent="0.1">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" time="260" count="22" selfTime="28" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" time="193" count="22" selfTime="15" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="178" count="22" selfTime="43" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="85" count="22" selfTime="45" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="21" count="22" selfTime="18" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="3" count="22" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="10" count="22" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="6" count="22" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="2" count="22" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="1" count="22" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="21" count="22" selfTime="14" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" time="7" count="22" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="19" count="22" selfTime="10" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="9" count="22" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="10" count="22" selfTime="10" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" time="39" count="22" selfTime="13" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_35" methodSignature="()Z" time="26" count="22" selfTime="10" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" time="16" count="22" selfTime="16" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_save" methodSignature="(II)V" time="15" count="22" selfTime="15" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" time="215" count="22" selfTime="23" lineNumber="-1" percent="0.1">
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="139" count="22" selfTime="42" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="81" count="22" selfTime="24" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="57" count="22" selfTime="29" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="18" count="22" selfTime="13" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="22" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="10" count="22" selfTime="10" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="7" count="22" selfTime="7" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="22" selfTime="5" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="22" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="53" count="22" selfTime="45" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="8" count="22" selfTime="8" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" time="165" count="22" selfTime="57" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="71" count="22" selfTime="8" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="63" count="22" selfTime="20" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="43" count="22" selfTime="10" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="33" count="22" selfTime="14" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="19" count="22" selfTime="10" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="22" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="11" count="22" selfTime="11" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="10" count="22" selfTime="10" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="9" count="22" selfTime="9" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="7" count="22" selfTime="7" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="139" count="22" selfTime="27" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="112" count="22" selfTime="24" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="82" count="22" selfTime="24" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="53" count="22" selfTime="29" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="21" count="22" selfTime="14" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="22" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="22" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="22" selfTime="5" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="6" count="22" selfTime="6" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" time="50" count="22" selfTime="13" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="37" count="22" selfTime="22" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="15" count="22" selfTime="9" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="6" count="22" selfTime="6" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" time="25" count="22" selfTime="25" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="10" count="44" selfTime="10" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" time="7" count="22" selfTime="7" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" time="146" count="27" selfTime="66" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.directives.FunctionRegister" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" time="56" count="27" selfTime="31" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="25" count="27" selfTime="25" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="18" count="27" selfTime="18" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="4" count="22" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="parseNumber" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/NumberTerm;" time="147" count="13" selfTime="25" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.lang.Double" methodName="parseDouble" methodSignature="(Ljava/lang/String;)D" time="89" count="13" selfTime="89" lineNumber="-1" percent="0.0"/>
                                      <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="33" count="13" selfTime="22" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="13" selfTime="11" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithExpr$ArithmeticOp;Ljason/asSyntax/NumberTerm;)V" time="78" count="2" selfTime="47" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="20" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="13" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="addTerm" methodSignature="(Ljason/asSyntax/Term;)V" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.ArithExpr$ArithmeticOp$3" methodName="toString" methodSignature="()Ljava/lang/String;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" time="66" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="41" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="39" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="16" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="14" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddStates" methodSignature="(II)V" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="13" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="parseNumber" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/NumberTerm;" time="17" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.lang.Double" methodName="parseDouble" methodSignature="(Ljava/lang/String;)D" time="11" count="2" selfTime="11" lineNumber="-1" percent="0.0"/>
                                        <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="7" count="15" selfTime="7" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="190" count="20" selfTime="20" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="170" count="20" selfTime="41" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="77" count="20" selfTime="35" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="19" count="20" selfTime="12" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="7" count="20" selfTime="7" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="8" count="20" selfTime="8" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="7" count="20" selfTime="7" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="4" count="20" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="4" count="20" selfTime="4" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="23" count="20" selfTime="16" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="7" count="20" selfTime="7" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="23" count="20" selfTime="15" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" time="8" count="20" selfTime="8" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="6" count="20" selfTime="6" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="912" count="42" selfTime="40" lineNumber="-1" percent="0.3">
                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="872" count="42" selfTime="104" lineNumber="-1" percent="0.3">
                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="468" count="42" selfTime="25" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="283" count="30" selfTime="100" lineNumber="-1" percent="0.1">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" time="77" count="69" selfTime="53" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="24" count="138" selfTime="24" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="66" count="80" selfTime="41" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="25" count="80" selfTime="25" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddStates" methodSignature="(II)V" time="37" count="13" selfTime="29" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="8" count="65" selfTime="8" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" time="158" count="10" selfTime="12" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJJJ)I" time="130" count="10" selfTime="21" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfa_0" methodSignature="(IJJ)I" time="56" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="47" count="5" selfTime="15" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" time="18" count="15" selfTime="9" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="9" count="30" selfTime="9" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="14" count="15" selfTime="12" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="2" count="15" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopStringLiteralDfa_0" methodSignature="(IJJ)I" time="5" count="5" selfTime="5" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa3_0" methodSignature="(JJ)I" time="46" count="5" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa4_0" methodSignature="(JJ)I" time="29" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfaWithStates_0" methodSignature="(III)I" time="15" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="7" count="4" selfTime="7" lineNumber="-1" percent="0.0"/>
                                          <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="5" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="5" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="5" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfaWithStates_0" methodSignature="(III)I" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="7" count="5" selfTime="6" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="16" count="10" selfTime="9" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="7" count="10" selfTime="7" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="214" count="42" selfTime="92" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" time="46" count="35" selfTime="36" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" time="10" count="35" selfTime="10" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="36" count="42" selfTime="17" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="19" count="42" selfTime="19" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="14" count="42" selfTime="14" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="11" count="42" selfTime="11" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="10" count="42" selfTime="10" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="5" count="42" selfTime="5" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="68" count="42" selfTime="26" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="42" count="42" selfTime="27" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="15" count="42" selfTime="15" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="18" count="82" selfTime="18" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="changeToAtom" methodSignature="(Ljava/lang/Object;)Ljason/asSyntax/Term;" time="284" count="42" selfTime="89" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="isAtom" methodSignature="()Z" time="97" count="22" selfTime="30" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="isAtom" methodSignature="()Z" time="65" count="22" selfTime="19" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="isAtom" methodSignature="()Z" time="41" count="22" selfTime="22" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" time="19" count="22" selfTime="18" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="22" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="5" count="22" selfTime="5" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="22" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="69" count="22" selfTime="27" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="38" count="22" selfTime="17" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="17" count="22" selfTime="12" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="22" selfTime="5" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="22" selfTime="4" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="22" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="18" count="44" selfTime="18" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="6" count="44" selfTime="6" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isAtom" methodSignature="()Z" time="3" count="13" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.ArithFunctionTerm" methodName="isAtom" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="java.util.ArrayList" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="45" count="42" selfTime="45" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.ArrayList" methodName="trimToSize" methodSignature="()V" time="39" count="37" selfTime="39" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="37" selfTime="13" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="921" count="74" selfTime="47" lineNumber="-1" percent="0.3">
                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="874" count="37" selfTime="71" lineNumber="-1" percent="0.3">
                    <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="646" count="37" selfTime="38" lineNumber="-1" percent="0.2">
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="608" count="37" selfTime="73" lineNumber="-1" percent="0.2">
                        <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="FillBuff" methodSignature="()V" time="535" count="37" selfTime="278" lineNumber="-1" percent="0.2">
                          <node leaf="true" class="java.io.IOException" methodName="&lt;init&gt;" methodSignature="()V" time="187" count="37" selfTime="187" lineNumber="-1" percent="0.1"/>
                          <node leaf="true" class="java.io.Reader" methodName="read" methodSignature="([CII)I" time="39" count="37" selfTime="39" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.io.Reader" methodName="close" methodSignature="()V" time="17" count="37" selfTime="17" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="14" count="37" selfTime="14" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="157" count="37" selfTime="81" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="36" count="37" selfTime="24" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="12" count="37" selfTime="12" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="19" count="37" selfTime="19" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="8" count="37" selfTime="8" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="7" count="37" selfTime="7" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="6" count="37" selfTime="6" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="180" count="37" selfTime="38" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="142" count="37" selfTime="21" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="121" count="37" selfTime="26" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="95" count="37" selfTime="40" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="55" count="37" selfTime="30" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="25" count="37" selfTime="25" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="58" count="111" selfTime="58" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSyntax.Structure" methodName="setTerms" methodSignature="(Ljava/util/List;)Ljason/asSyntax/Literal;" time="46" count="37" selfTime="39" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="7" count="37" selfTime="7" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="31" count="37" selfTime="31" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="11" count="37" selfTime="11" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" time="525" count="37" selfTime="54" lineNumber="-1" percent="0.2">
                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" time="443" count="37" selfTime="36" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" time="328" count="37" selfTime="29" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="299" count="37" selfTime="67" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="142" count="37" selfTime="69" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="39" count="37" selfTime="31" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="8" count="37" selfTime="8" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="12" count="37" selfTime="12" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="9" count="37" selfTime="9" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="8" count="37" selfTime="8" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="5" count="37" selfTime="5" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="43" count="37" selfTime="29" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="14" count="37" selfTime="14" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="40" count="37" selfTime="30" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" time="10" count="37" selfTime="10" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="7" count="37" selfTime="7" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" time="79" count="37" selfTime="26" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_35" methodSignature="()Z" time="53" count="37" selfTime="22" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" time="31" count="37" selfTime="31" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_save" methodSignature="(II)V" time="28" count="37" selfTime="28" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="477" count="37" selfTime="34" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="443" count="37" selfTime="45" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="390" count="37" selfTime="133" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="86" count="37" selfTime="39" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="39" count="37" selfTime="32" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="37" selfTime="7" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="8" count="37" selfTime="8" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="46" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="40" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithExpr;)V" time="38" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithFunctionTerm;)V" time="35" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="29" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="21" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="39" count="42" selfTime="26" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="13" count="42" selfTime="13" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="27" count="37" selfTime="11" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="16" count="37" selfTime="16" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="21" count="37" selfTime="21" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="16" count="42" selfTime="16" lineNumber="-1" percent="0.0"/>
                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="15" count="13" selfTime="11" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="4" count="13" selfTime="4" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="7" count="27" selfTime="7" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="8" count="37" selfTime="8" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" time="427" count="37" selfTime="47" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="260" count="37" selfTime="84" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="136" count="37" selfTime="42" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="94" count="37" selfTime="47" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="27" count="37" selfTime="23" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="37" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="20" count="37" selfTime="20" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="24" count="37" selfTime="15" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="9" count="37" selfTime="9" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="9" count="37" selfTime="9" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="7" count="37" selfTime="7" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="120" count="37" selfTime="110" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="10" count="37" selfTime="10" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" time="74" count="37" selfTime="25" lineNumber="-1" percent="0.0">
                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="49" count="37" selfTime="26" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="23" count="37" selfTime="18" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="37" selfTime="5" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
              </node>
              <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" time="56" count="37" selfTime="56" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" time="19" count="37" selfTime="19" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="9" count="74" selfTime="9" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;)V" time="3932" count="37" selfTime="411" lineNumber="-1" percent="1.1">
              <node leaf="false" class="jason.asSyntax.directives.DirectiveProcessor" methodName="getInstance" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/directives/Directive;" time="1919" count="37" selfTime="157" lineNumber="-1" percent="0.6">
                <node leaf="true" class="java.lang.reflect.Constructor" methodName="newInstance" methodSignature="([Ljava/lang/Object;)Ljava/lang/Object;" time="1273" count="37" selfTime="1273" lineNumber="-1" percent="0.4"/>
                <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" time="369" count="37" selfTime="369" lineNumber="-1" percent="0.1"/>
                <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="73" count="111" selfTime="73" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="32" count="37" selfTime="32" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.directives.NameSpace" methodName="isSingleton" methodSignature="()Z" time="15" count="37" selfTime="15" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;II)V" time="1108" count="37" selfTime="44" lineNumber="-1" percent="0.3">
                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;III)V" time="1064" count="37" selfTime="1064" lineNumber="-1" percent="0.3"/>
              </node>
              <node leaf="false" class="jason.asSyntax.parser.as2j$LookaheadSuccess" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/parser/as2j$1;)V" time="266" count="37" selfTime="31" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.parser.as2j$LookaheadSuccess" methodName="&lt;init&gt;" methodSignature="()V" time="235" count="37" selfTime="26" lineNumber="-1" percent="0.1">
                  <node leaf="true" class="java.lang.Error" methodName="&lt;init&gt;" methodSignature="()V" time="209" count="37" selfTime="209" lineNumber="-1" percent="0.1"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.directives.DirectiveProcessor" methodName="&lt;init&gt;" methodSignature="()V" time="75" count="37" selfTime="48" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="27" count="37" selfTime="27" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/parser/SimpleCharStream;)V" time="64" count="37" selfTime="64" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.parser.as2j$JJCalls" methodName="&lt;init&gt;" methodSignature="()V" time="43" count="148" selfTime="43" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="()V" time="29" count="37" selfTime="29" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="17" count="37" selfTime="17" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.io.StringReader" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="52" count="37" selfTime="52" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.io.PrintStream" methodName="println" methodSignature="(Ljava/lang/String;)V" time="16559" count="15" selfTime="16559" lineNumber="-1" percent="4.8"/>
          <node leaf="false" class="NavMap" methodName="perceive" methodSignature="()Ljava/util/List;" time="561" count="5" selfTime="77" lineNumber="-1" percent="0.2">
            <node leaf="false" class="NavMap" methodName="perceiveBattery" methodSignature="()Ljava/util/List;" time="104" count="5" selfTime="30" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.lang.Integer" methodName="toString" methodSignature="(I)Ljava/lang/String;" time="23" count="5" selfTime="23" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="13" count="30" selfTime="13" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.Boolean" methodName="toString" methodSignature="(Z)Ljava/lang/String;" time="11" count="5" selfTime="11" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="11" count="10" selfTime="11" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="NavMap" methodName="perceiveObstacles" methodSignature="()Ljava/util/List;" time="85" count="5" selfTime="33" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="isFreeOfObstacle" methodSignature="(II)Z" time="37" count="20" selfTime="19" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="isFree" methodSignature="(III)Z" time="18" count="20" selfTime="12" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="6" count="20" selfTime="6" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="9" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="7" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="5" count="5" selfTime="5" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.environment.grid.Location" methodName="toString" methodSignature="()Ljava/lang/String;" time="60" count="5" selfTime="22" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(I)Ljava/lang/StringBuilder;" time="19" count="10" selfTime="19" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="5" count="5" selfTime="5" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.util.List" methodName="addAll" methodSignature="(Ljava/util/Collection;)Z" time="55" count="20" selfTime="55" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="NavMap" methodName="perceiveMap" methodSignature="()Ljava/util/List;" time="46" count="5" selfTime="23" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="8" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="5" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="7" count="20" selfTime="7" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="NavMap" methodName="perceivePedestrians" methodSignature="()Ljava/util/List;" time="46" count="5" selfTime="18" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="hasObject" methodSignature="(III)Z" time="18" count="20" selfTime="17" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="1" count="20" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="9" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="6" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="17" count="15" selfTime="17" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="16" count="5" selfTime="5" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="11" count="5" selfTime="9" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="14" count="5" selfTime="14" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="14" count="5" selfTime="14" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="12" count="5" selfTime="12" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="5" selfTime="9" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="NavMap" methodName="updateBattery" methodSignature="()V" time="6" count="5" selfTime="6" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" time="118" count="5" selfTime="118" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.environment.Environment" methodName="clearPercepts" methodSignature="()V" time="69" count="5" selfTime="13" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="22" count="5" selfTime="22" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Set" methodName="clear" methodSignature="()V" time="21" count="5" selfTime="21" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.List" methodName="clear" methodSignature="()V" time="13" count="5" selfTime="13" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="28" count="5" selfTime="28" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="25" count="42" selfTime="25" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="18" count="37" selfTime="18" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="NavMap" methodName="move" methodSignature="(Ljava/lang/String;)Z" time="3123" count="3" selfTime="53" lineNumber="-1" percent="0.9">
          <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="setAgPos" methodSignature="(ILjason/environment/grid/Location;)V" time="2979" count="3" selfTime="19" lineNumber="-1" percent="0.9">
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="add" methodSignature="(III)V" time="2501" count="3" selfTime="6" lineNumber="-1" percent="0.7">
              <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="update" methodSignature="(II)V" time="2495" count="3" selfTime="67" lineNumber="-1" percent="0.7">
                <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="draw" methodSignature="(Ljava/awt/Graphics;II)V" time="2196" count="3" selfTime="156" lineNumber="-1" percent="0.6">
                  <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawAgent" methodSignature="(Ljava/awt/Graphics;IILjava/awt/Color;I)V" time="1874" count="3" selfTime="37" lineNumber="-1" percent="0.5">
                    <node leaf="true" class="java.awt.Graphics" methodName="fillOval" methodSignature="(IIII)V" time="1365" count="3" selfTime="1365" lineNumber="-1" percent="0.4"/>
                    <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawString" methodSignature="(Ljava/awt/Graphics;IILjava/awt/Font;Ljava/lang/String;)V" time="413" count="3" selfTime="16" lineNumber="-1" percent="0.1">
                      <node leaf="true" class="java.awt.Graphics" methodName="drawString" methodSignature="(Ljava/lang/String;II)V" time="260" count="3" selfTime="260" lineNumber="-1" percent="0.1"/>
                      <node leaf="true" class="java.awt.Graphics" methodName="getFontMetrics" methodSignature="()Ljava/awt/FontMetrics;" time="69" count="3" selfTime="69" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.awt.FontMetrics" methodName="stringWidth" methodSignature="(Ljava/lang/String;)I" time="47" count="3" selfTime="47" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.awt.FontMetrics" methodName="getHeight" methodSignature="()I" time="11" count="3" selfTime="11" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.awt.Graphics" methodName="setFont" methodSignature="(Ljava/awt/Font;)V" time="10" count="3" selfTime="10" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.lang.String" methodName="valueOf" methodSignature="(I)Ljava/lang/String;" time="35" count="3" selfTime="35" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.awt.Graphics" methodName="setColor" methodSignature="(Ljava/awt/Color;)V" time="24" count="6" selfTime="24" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="NavMapView" methodName="draw" methodSignature="(Ljava/awt/Graphics;III)V" time="161" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="NavMapView" methodName="drawCharger" methodSignature="(Ljava/awt/Graphics;II)V" time="156" count="1" selfTime="26" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawString" methodSignature="(Ljava/awt/Graphics;IILjava/awt/Font;Ljava/lang/String;)V" time="97" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.awt.Graphics" methodName="drawString" methodSignature="(Ljava/lang/String;II)V" time="69" count="1" selfTime="69" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.awt.Graphics" methodName="getFontMetrics" methodSignature="()Ljava/awt/FontMetrics;" time="19" count="1" selfTime="19" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.awt.FontMetrics" methodName="stringWidth" methodSignature="(Ljava/lang/String;)I" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.awt.Graphics" methodName="setFont" methodSignature="(Ljava/awt/Font;)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.awt.FontMetrics" methodName="getHeight" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawObstacle" methodSignature="(Ljava/awt/Graphics;II)V" time="25" count="1" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.awt.Graphics" methodName="fillRect" methodSignature="(IIII)V" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.awt.Graphics" methodName="drawRect" methodSignature="(IIII)V" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.awt.Graphics" methodName="setColor" methodSignature="(Ljava/awt/Color;)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.awt.Graphics" methodName="setColor" methodSignature="(Ljava/awt/Color;)V" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="getAgAtPos" methodSignature="(II)I" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawEmpty" methodSignature="(Ljava/awt/Graphics;II)V" time="232" count="3" selfTime="11" lineNumber="-1" percent="0.1">
                  <node leaf="true" class="java.awt.Graphics" methodName="drawRect" methodSignature="(IIII)V" time="128" count="3" selfTime="128" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.awt.Graphics" methodName="fillRect" methodSignature="(IIII)V" time="82" count="3" selfTime="82" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.awt.Graphics" methodName="setColor" methodSignature="(Ljava/awt/Color;)V" time="11" count="6" selfTime="11" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="remove" methodSignature="(III)V" time="452" count="3" selfTime="17" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="update" methodSignature="(II)V" time="435" count="3" selfTime="184" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawEmpty" methodSignature="(Ljava/awt/Graphics;II)V" time="235" count="3" selfTime="36" lineNumber="-1" percent="0.1">
                  <node leaf="true" class="java.awt.Graphics" methodName="fillRect" methodSignature="(IIII)V" time="138" count="3" selfTime="138" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.awt.Graphics" methodName="drawRect" methodSignature="(IIII)V" time="39" count="3" selfTime="39" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.awt.Graphics" methodName="setColor" methodSignature="(Ljava/awt/Color;)V" time="22" count="6" selfTime="22" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.environment.grid.GridWorldView" methodName="draw" methodSignature="(Ljava/awt/Graphics;II)V" time="16" count="3" selfTime="16" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="7" count="3" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="5" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="47" count="3" selfTime="21" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="26" count="3" selfTime="13" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="13" count="3" selfTime="13" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="isFree" methodSignature="(Ljason/environment/grid/Location;)Z" time="24" count="3" selfTime="8" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="isFree" methodSignature="(II)Z" time="16" count="3" selfTime="10" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="6" count="3" selfTime="6" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="6" selfTime="12" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="8" count="3" selfTime="8" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="java.util.logging.Logger" methodName="info" methodSignature="(Ljava/lang/String;)V" time="2009" count="5" selfTime="1830" lineNumber="-1" percent="0.6">
          <node leaf="false" class="jason.runtime.MASConsoleLogFormatter" methodName="format" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" time="179" count="5" selfTime="45" lineNumber="-1" percent="0.1">
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="43" count="15" selfTime="43" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.runtime.MASConsoleLogFormatter" methodName="getAgName" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" time="34" count="5" selfTime="10" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.lang.String" methodName="lastIndexOf" methodSignature="(I)I" time="13" count="5" selfTime="13" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.LogRecord" methodName="getLoggerName" methodSignature="()Ljava/lang/String;" time="11" count="5" selfTime="11" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="23" count="5" selfTime="23" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="11" count="5" selfTime="11" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.logging.LogRecord" methodName="getMessage" methodSignature="()Ljava/lang/String;" time="8" count="5" selfTime="8" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.logging.LogRecord" methodName="getThrown" methodSignature="()Ljava/lang/Throwable;" time="8" count="5" selfTime="8" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="1770" count="5" selfTime="24" lineNumber="-1" percent="0.5">
          <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" time="1746" count="5" selfTime="1235" lineNumber="-1" percent="0.5">
            <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" time="292" count="5" selfTime="281" lineNumber="-1" percent="0.1">
              <node leaf="true" class="jason.asSyntax.Atom" methodName="toString" methodSignature="()Ljava/lang/String;" time="11" count="5" selfTime="11" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.util.List" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" time="60" count="5" selfTime="60" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.stream.Collectors" methodName="joining" methodSignature="(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;" time="51" count="5" selfTime="51" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" time="51" count="5" selfTime="51" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="10" count="10" selfTime="10" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="10" count="10" selfTime="10" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="8" count="5" selfTime="4" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="5" selfTime="8" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="8" count="5" selfTime="8" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="5" count="5" selfTime="5" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="417" count="17" selfTime="38" lineNumber="-1" percent="0.1">
          <node leaf="false" class="jason.asSyntax.Pred" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="193" count="5" selfTime="19" lineNumber="-1" percent="0.1">
            <node leaf="false" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="160" count="5" selfTime="76" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSyntax.Atom" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="49" count="5" selfTime="29" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="10" count="5" selfTime="10" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="isAtom" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="12" count="10" selfTime="9" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="8" count="10" selfTime="6" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="5" selfTime="8" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="10" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;)Z" time="14" count="10" selfTime="10" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="186" count="34" selfTime="22" lineNumber="-1" percent="0.1">
            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="calcHashCode" methodSignature="()I" time="143" count="5" selfTime="21" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" time="120" count="5" selfTime="25" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="57" count="5" selfTime="36" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="10" count="5" selfTime="10" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="8" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="24" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="20" count="5" selfTime="9" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="7" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="5" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="12" count="5" selfTime="12" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="9" count="34" selfTime="9" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="jason.environment.Environment" methodName="informAgsEnvironmentChanged" methodSignature="([Ljava/lang/String;)V" time="385" count="5" selfTime="50" lineNumber="-1" percent="0.1">
          <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="informAgsEnvironmentChanged" methodSignature="([Ljava/lang/String;)V" time="335" count="5" selfTime="132" lineNumber="-1" percent="0.1">
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="47" count="5" selfTime="43" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wakeUpSense" methodSignature="()V" time="47" count="5" selfTime="7" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" time="40" count="5" selfTime="22" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" time="18" count="5" selfTime="18" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="33" count="5" selfTime="33" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" time="30" count="5" selfTime="30" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="19" count="10" selfTime="19" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.infra.centralised.BaseCentralisedMAS" methodName="getAgs" methodSignature="()Ljava/util/Map;" time="13" count="5" selfTime="13" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="12" count="5" selfTime="12" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" time="327" count="5" selfTime="54" lineNumber="-1" percent="0.1">
          <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" time="159" count="5" selfTime="155" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.asSyntax.Atom" methodName="toString" methodSignature="()Ljava/lang/String;" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.List" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" time="30" count="5" selfTime="30" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.util.stream.Collectors" methodName="joining" methodSignature="(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;" time="28" count="5" selfTime="28" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" time="22" count="5" selfTime="22" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="5" selfTime="3" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="java.lang.String" methodName="contains" methodSignature="(Ljava/lang/CharSequence;)Z" time="52" count="10" selfTime="52" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="java.lang.Thread" methodName="sleep" methodSignature="(J)V" time="39" count="5" selfTime="39" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="25" count="10" selfTime="25" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="20" count="5" selfTime="20" lineNumber="-1" percent="0.0"/>
        <node leaf="false" class="NavMap" methodName="connectCharger" methodSignature="()V" time="11" count="1" selfTime="7" lineNumber="-1" percent="0.0">
          <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="hasObject" methodSignature="(ILjason/environment/grid/Location;)Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="10" count="5" selfTime="10" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="NavMap" methodName="disconnectCharger" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="actionExecuted" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Structure;ZLjava/lang/Object;)V" time="200" count="5" selfTime="36" lineNumber="-1" percent="0.1">
        <node leaf="false" class="jason.architecture.AgArch" methodName="actionExecuted" methodSignature="(Ljason/asSemantics/ActionExec;)V" time="123" count="5" selfTime="38" lineNumber="-1" percent="0.0">
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addFeedbackAction" methodSignature="(Ljason/asSemantics/ActionExec;)V" time="67" count="5" selfTime="12" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="52" count="5" selfTime="52" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getIntention" methodSignature="()Ljason/asSemantics/Intention;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wakeUpAct" methodSignature="()V" time="14" count="5" selfTime="5" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" time="9" count="5" selfTime="6" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getC" methodSignature="()Ljason/asSemantics/Circumstance;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.infra.centralised.BaseCentralisedMAS" methodName="getAg" methodSignature="(Ljava/lang/String;)Ljason/infra/centralised/CentralisedAgArch;" time="34" count="5" selfTime="9" lineNumber="-1" percent="0.0">
          <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="25" count="5" selfTime="25" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="jason.asSemantics.ActionExec" methodName="setResult" methodSignature="(Z)V" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
      </node>
    </node>
    <node leaf="false" class="jason.stdlib.wait$WaitEvent" methodName="lambda$new$0" methodSignature="()V" time="2831" count="3" selfTime="25" lineNumber="-1" percent="0.8">
      <node leaf="false" class="jason.stdlib.wait$WaitEvent" methodName="resume" methodSignature="(Z)V" time="2806" count="3" selfTime="2616" lineNumber="-1" percent="0.8">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="runAtBeginOfNextCycle" methodSignature="(Ljava/lang/Runnable;)V" time="102" count="3" selfTime="22" lineNumber="-1" percent="0.0">
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" time="36" count="3" selfTime="22" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" time="14" count="3" selfTime="14" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="31" count="3" selfTime="31" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="13" count="3" selfTime="11" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSemantics.Circumstance" methodName="removeEventListener" methodSignature="(Ljason/asSemantics/CircumstanceListener;)V" time="56" count="3" selfTime="14" lineNumber="-1" percent="0.0">
          <node leaf="true" class="java.util.Queue" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="42" count="3" selfTime="42" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wakeUpDeliberate" methodSignature="()V" time="27" count="3" selfTime="8" lineNumber="-1" percent="0.0">
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" time="19" count="3" selfTime="16" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="5" count="3" selfTime="3" lineNumber="-1" percent="0.0">
          <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
        </node>
      </node>
    </node>
  </node>
</tree>