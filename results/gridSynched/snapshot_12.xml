<?xml version="1.0" encoding="UTF-8"?>
<tree type="Call Tree" threadSelection="All thread groups" threadStatus="Runnable" aggregationLevel="Methods">
  <node leaf="false" class="java.util.concurrent.ThreadPoolExecutor$Worker" methodName="run" methodSignature="()V" time="144650" count="4" selfTime="27" lineNumber="-1" percent="53.7">
    <node leaf="false" class="jason.environment.Environment$1" methodName="run" methodSignature="()V" time="141840" count="2" selfTime="68" lineNumber="-1" percent="52.6">
      <node leaf="false" class="NavigatorGridWorld" methodName="executeAction" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Structure;)Z" time="141668" count="2" selfTime="175" lineNumber="-1" percent="52.6">
        <node leaf="false" class="NavigatorGridWorld" methodName="updatePercepts" methodSignature="()V" time="136221" count="2" selfTime="116" lineNumber="-1" percent="50.6">
          <node leaf="false" class="jason.environment.Environment" methodName="addPercept" methodSignature="([Ljason/asSyntax/Literal;)V" time="101427" count="16" selfTime="24" lineNumber="-1" percent="37.6">
            <node leaf="false" class="java.util.List" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="101362" count="16" selfTime="69" lineNumber="-1" percent="37.6">
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="101293" count="56" selfTime="41" lineNumber="-1" percent="37.6">
                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="101252" count="112" selfTime="28468" lineNumber="-1" percent="37.6">
                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="72584" count="112" selfTime="72584" lineNumber="-1" percent="26.9"/>
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="calcHashCode" methodSignature="()I" time="194" count="16" selfTime="15" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" time="175" count="16" selfTime="24" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="78" count="18" selfTime="10" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="68" count="18" selfTime="16" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="26" count="10" selfTime="6" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="8" count="10" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" time="10" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                          <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="6" count="18" selfTime="6" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="calcHashCode" methodSignature="()I" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="45" count="16" selfTime="24" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="16" selfTime="5" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="16" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="18" count="18" selfTime="9" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="9" count="18" selfTime="9" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="10" count="16" selfTime="7" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="true" class="java.util.Set" methodName="clear" methodSignature="()V" time="23" count="16" selfTime="23" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="18" count="16" selfTime="18" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSyntax.Literal" methodName="parseLiteral" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/Literal;" time="27949" count="16" selfTime="45" lineNumber="-1" percent="10.4">
            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" time="25509" count="16" selfTime="100" lineNumber="-1" percent="9.5">
              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="22365" count="16" selfTime="27" lineNumber="-1" percent="8.3">
                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="22338" count="16" selfTime="49" lineNumber="-1" percent="8.3">
                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="22038" count="16" selfTime="33" lineNumber="-1" percent="8.2">
                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" time="21794" count="8" selfTime="19" lineNumber="-1" percent="8.1">
                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJJJ)I" time="21766" count="8" selfTime="21655" lineNumber="-1" percent="8.1">
                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfa_0" methodSignature="(IJJ)I" time="111" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="91" count="8" selfTime="35" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" time="37" count="24" selfTime="29" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="8" count="48" selfTime="8" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="19" count="24" selfTime="13" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="6" count="24" selfTime="6" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopStringLiteralDfa_0" methodSignature="(IJJ)I" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="9" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="211" count="8" selfTime="75" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" time="83" count="64" selfTime="54" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="29" count="128" selfTime="29" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="53" count="64" selfTime="38" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="15" count="64" selfTime="15" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="124" count="16" selfTime="56" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" time="32" count="16" selfTime="21" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" time="11" count="16" selfTime="11" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="23" count="16" selfTime="14" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="2" count="16" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="1" count="16" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="115" count="16" selfTime="20" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="95" count="16" selfTime="22" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="FillBuff" methodSignature="()V" time="63" count="16" selfTime="17" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.io.Reader" methodName="read" methodSignature="([CII)I" time="46" count="16" selfTime="46" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="12" count="32" selfTime="12" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" time="2277" count="16" selfTime="91" lineNumber="-1" percent="0.8">
                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="terms" methodSignature="()Ljava/util/List;" time="1631" count="16" selfTime="51" lineNumber="-1" percent="0.6">
                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="term" methodSignature="()Ljason/asSyntax/Term;" time="1516" count="18" selfTime="19" lineNumber="-1" percent="0.6">
                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr" methodSignature="()Ljava/lang/Object;" time="1360" count="18" selfTime="12" lineNumber="-1" percent="0.5">
                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_trm" methodSignature="()Ljava/lang/Object;" time="1348" count="18" selfTime="19" lineNumber="-1" percent="0.5">
                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="log_expr_factor" methodSignature="()Ljava/lang/Object;" time="1329" count="18" selfTime="16" lineNumber="-1" percent="0.5">
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="rel_expr" methodSignature="()Ljava/lang/Object;" time="923" count="18" selfTime="20" lineNumber="-1" percent="0.3">
                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr" methodSignature="()Ljava/lang/Object;" time="903" count="18" selfTime="17" lineNumber="-1" percent="0.3">
                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_trm" methodSignature="()Ljava/lang/Object;" time="886" count="18" selfTime="14" lineNumber="-1" percent="0.3">
                                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_factor" methodSignature="()Ljava/lang/Object;" time="872" count="18" selfTime="19" lineNumber="-1" percent="0.3">
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" time="778" count="18" selfTime="51" lineNumber="-1" percent="0.3">
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="function" methodSignature="()Ljason/asSyntax/Term;" time="557" count="12" selfTime="16" lineNumber="-1" percent="0.2">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="literal" methodSignature="()Ljason/asSyntax/Literal;" time="458" count="12" selfTime="50" lineNumber="-1" percent="0.2">
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" time="123" count="10" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" time="112" count="10" selfTime="17" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" time="80" count="10" selfTime="4" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="76" count="10" selfTime="17" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="37" count="10" selfTime="19" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="9" count="10" selfTime="8" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="1" count="10" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="1" count="10" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="10" count="10" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="9" count="10" selfTime="6" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" time="15" count="10" selfTime="4" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_35" methodSignature="()Z" time="11" count="10" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_save" methodSignature="(II)V" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" time="103" count="10" selfTime="11" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="61" count="10" selfTime="18" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="35" count="10" selfTime="8" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="27" count="10" selfTime="13" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="10" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="31" count="10" selfTime="26" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="pred" methodSignature="()Ljason/asSyntax/Pred;" time="73" count="10" selfTime="27" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="32" count="10" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="28" count="10" selfTime="8" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="20" count="10" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="15" count="10" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="10" selfTime="5" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="58" count="10" selfTime="6" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="52" count="10" selfTime="11" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="38" count="10" selfTime="13" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="22" count="10" selfTime="10" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="10" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" time="23" count="10" selfTime="6" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="17" count="10" selfTime="12" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="10" selfTime="4" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="10" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" time="19" count="10" selfTime="19" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="20" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="getArithFunction" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSemantics/ArithFunction;" time="83" count="12" selfTime="36" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.directives.FunctionRegister" methodName="getFunction" methodSignature="(Ljava/lang/String;I)Ljason/asSemantics/ArithFunction;" time="32" count="12" selfTime="18" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="14" count="12" selfTime="14" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="14" count="12" selfTime="14" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="parseNumber" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/NumberTerm;" time="69" count="5" selfTime="14" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.lang.Double" methodName="parseDouble" methodSignature="(Ljava/lang/String;)D" time="36" count="5" selfTime="36" lineNumber="-1" percent="0.0"/>
                                      <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="19" count="5" selfTime="12" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithExpr$ArithmeticOp;Ljason/asSyntax/NumberTerm;)V" time="63" count="1" selfTime="41" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="14" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="8" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.ArithExpr$ArithmeticOp$3" methodName="toString" methodSignature="()Ljava/lang/String;" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="addTerm" methodSignature="(Ljason/asSyntax/Term;)V" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="arithm_expr_simple" methodSignature="()Ljava/lang/Object;" time="33" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="21" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="20" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="8" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="7" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddStates" methodSignature="(II)V" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="parseNumber" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/NumberTerm;" time="8" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.lang.Double" methodName="parseDouble" methodSignature="(Ljava/lang/String;)D" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
                                        <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="75" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="68" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="31" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="9" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="11" count="8" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="10" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="390" count="18" selfTime="16" lineNumber="-1" percent="0.1">
                            <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="374" count="18" selfTime="40" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="206" count="18" selfTime="9" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="124" count="13" selfTime="41" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" time="36" count="32" selfTime="27" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="9" count="64" selfTime="9" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="31" count="37" selfTime="22" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="9" count="37" selfTime="9" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddStates" methodSignature="(II)V" time="16" count="5" selfTime="13" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="3" count="25" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa1_0" methodSignature="(JJ)I" time="72" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa2_0" methodSignature="(JJJJ)I" time="61" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa3_0" methodSignature="(JJ)I" time="24" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa4_0" methodSignature="(JJ)I" time="17" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfaWithStates_0" methodSignature="(III)I" time="8" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStartNfa_0" methodSignature="(IJJ)I" time="22" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveNfa_0" methodSignature="(II)I" time="19" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAddTwoStates" methodSignature="(II)V" time="7" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjCheckNAdd" methodSignature="(I)V" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopStringLiteralDfa_0" methodSignature="(IJJ)I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="5" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="87" count="18" selfTime="38" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="GetImage" methodSignature="()Ljava/lang/String;" time="17" count="15" selfTime="10" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="([CII)V" time="7" count="15" selfTime="7" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="16" count="18" selfTime="7" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="9" count="18" selfTime="9" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="5" count="18" selfTime="5" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="5" count="18" selfTime="5" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="5" count="18" selfTime="5" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="1" count="18" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="32" count="18" selfTime="11" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="21" count="18" selfTime="14" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="UpdateLineColumn" methodSignature="(C)V" time="7" count="18" selfTime="7" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="9" count="35" selfTime="9" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="changeToAtom" methodSignature="(Ljava/lang/Object;)Ljason/asSyntax/Term;" time="137" count="18" selfTime="43" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="isAtom" methodSignature="()Z" time="46" count="10" selfTime="15" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="isAtom" methodSignature="()Z" time="30" count="10" selfTime="9" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="isAtom" methodSignature="()Z" time="18" count="10" selfTime="9" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" time="9" count="10" selfTime="9" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="10" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="32" count="10" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="17" count="10" selfTime="8" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="10" selfTime="4" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="20" selfTime="8" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="20" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isAtom" methodSignature="()Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.ArithFunctionTerm" methodName="isAtom" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="java.util.ArrayList" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="31" count="18" selfTime="31" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.ArrayList" methodName="trimToSize" methodSignature="()V" time="25" count="16" selfTime="25" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_ntk_f" methodSignature="()I" time="401" count="32" selfTime="20" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="381" count="16" selfTime="22" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="289" count="16" selfTime="17" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="272" count="16" selfTime="24" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="FillBuff" methodSignature="()V" time="248" count="16" selfTime="139" lineNumber="-1" percent="0.1">
                          <node leaf="true" class="java.io.IOException" methodName="&lt;init&gt;" methodSignature="()V" time="78" count="16" selfTime="78" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.io.Reader" methodName="read" methodSignature="([CII)I" time="17" count="16" selfTime="17" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.io.Reader" methodName="close" methodSignature="()V" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="70" count="16" selfTime="37" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="14" count="16" selfTime="10" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="13" count="16" selfTime="13" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="2" count="16" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="1" count="16" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="83" count="16" selfTime="14" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="69" count="16" selfTime="13" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="56" count="16" selfTime="11" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="45" count="16" selfTime="19" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="26" count="16" selfTime="10" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="16" count="16" selfTime="16" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_consume_token" methodSignature="(I)Ljason/asSyntax/parser/Token;" time="28" count="48" selfTime="28" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.SourceInfo" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="20" count="16" selfTime="20" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSyntax.Structure" methodName="setTerms" methodSignature="(Ljava/util/List;)Ljason/asSyntax/Literal;" time="20" count="16" selfTime="15" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="239" count="16" selfTime="14" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="225" count="16" selfTime="27" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="194" count="16" selfTime="59" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="41" count="16" selfTime="17" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="21" count="16" selfTime="17" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="31" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="26" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithExpr;)V" time="25" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithFunctionTerm;)V" time="22" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="18" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="11" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="24" count="18" selfTime="19" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="5" count="18" selfTime="5" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="13" count="16" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="7" count="18" selfTime="7" lineNumber="-1" percent="0.0"/>
                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="5" count="5" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_2_4" methodSignature="(I)Z" time="232" count="16" selfTime="31" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3_4" methodSignature="()Z" time="190" count="16" selfTime="16" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" time="140" count="16" selfTime="12" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="getNextToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="128" count="16" selfTime="24" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjFillToken" methodSignature="()Ljason/asSyntax/parser/Token;" time="63" count="16" selfTime="29" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.parser.Token" methodName="newToken" methodSignature="(ILjava/lang/String;)Ljason/asSyntax/parser/Token;" time="20" count="16" selfTime="16" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="(ILjava/lang/String;)V" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginColumn" methodSignature="()I" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndColumn" methodSignature="()I" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getBeginLine" methodSignature="()I" time="2" count="16" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="getEndLine" methodSignature="()I" time="2" count="16" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="BeginToken" methodSignature="()C" time="22" count="16" selfTime="18" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="readChar" methodSignature="()C" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjMoveStringLiteralDfa0_0" methodSignature="()I" time="17" count="16" selfTime="15" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="jjStopAtPos" methodSignature="(II)I" time="2" count="16" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="backup" methodSignature="(I)V" time="2" count="16" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_17" methodSignature="()Z" time="34" count="16" selfTime="11" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="jj_3R_35" methodSignature="()Z" time="23" count="16" selfTime="11" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_scan_token" methodSignature="(I)Z" time="12" count="16" selfTime="12" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.parser.as2j" methodName="jj_save" methodSignature="(II)V" time="11" count="16" selfTime="11" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="isKeyword" methodSignature="(Ljason/asSyntax/Literal;)Z" time="209" count="16" selfTime="26" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.Literal" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="126" count="16" selfTime="38" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="68" count="16" selfTime="22" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="46" count="16" selfTime="21" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="14" count="16" selfTime="13" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="16" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="11" count="16" selfTime="11" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="12" count="16" selfTime="6" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="57" count="16" selfTime="50" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="java.lang.String" methodName="indexOf" methodSignature="(Ljava/lang/String;)I" time="43" count="16" selfTime="43" lineNumber="-1" percent="0.0"/>
              <node leaf="false" class="jason.asSyntax.directives.NameSpace" methodName="map" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Atom;" time="32" count="16" selfTime="7" lineNumber="-1" percent="0.0">
                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="25" count="16" selfTime="15" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="10" count="16" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
              </node>
              <node leaf="true" class="java.lang.String" methodName="charAt" methodSignature="(I)C" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="32" selfTime="4" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSyntax.parser.as2j" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;)V" time="2370" count="16" selfTime="222" lineNumber="-1" percent="0.9">
              <node leaf="false" class="jason.asSyntax.directives.DirectiveProcessor" methodName="getInstance" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/directives/Directive;" time="1414" count="16" selfTime="85" lineNumber="-1" percent="0.5">
                <node leaf="true" class="java.lang.reflect.Constructor" methodName="newInstance" methodSignature="([Ljava/lang/Object;)Ljava/lang/Object;" time="1081" count="16" selfTime="1081" lineNumber="-1" percent="0.4"/>
                <node leaf="true" class="java.lang.Class" methodName="getConstructor" methodSignature="([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" time="185" count="16" selfTime="185" lineNumber="-1" percent="0.1"/>
                <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="43" count="48" selfTime="43" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="15" count="16" selfTime="15" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.directives.NameSpace" methodName="isSingleton" methodSignature="()Z" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;II)V" time="471" count="16" selfTime="19" lineNumber="-1" percent="0.2">
                <node leaf="true" class="jason.asSyntax.parser.SimpleCharStream" methodName="&lt;init&gt;" methodSignature="(Ljava/io/Reader;III)V" time="452" count="16" selfTime="452" lineNumber="-1" percent="0.2"/>
              </node>
              <node leaf="false" class="jason.asSyntax.parser.as2j$LookaheadSuccess" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/parser/as2j$1;)V" time="136" count="16" selfTime="14" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.parser.as2j$LookaheadSuccess" methodName="&lt;init&gt;" methodSignature="()V" time="122" count="16" selfTime="13" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.lang.Error" methodName="&lt;init&gt;" methodSignature="()V" time="109" count="16" selfTime="109" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.directives.DirectiveProcessor" methodName="&lt;init&gt;" methodSignature="()V" time="43" count="16" selfTime="25" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="18" count="16" selfTime="18" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSyntax.parser.as2jTokenManager" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/parser/SimpleCharStream;)V" time="39" count="16" selfTime="39" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.parser.Token" methodName="&lt;init&gt;" methodSignature="()V" time="18" count="16" selfTime="18" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.parser.as2j$JJCalls" methodName="&lt;init&gt;" methodSignature="()V" time="17" count="64" selfTime="17" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.io.StringReader" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="25" count="16" selfTime="25" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.io.PrintStream" methodName="println" methodSignature="(Ljava/lang/String;)V" time="6165" count="6" selfTime="6165" lineNumber="-1" percent="2.3"/>
          <node leaf="false" class="NavMap" methodName="perceive" methodSignature="()Ljava/util/List;" time="388" count="2" selfTime="63" lineNumber="-1" percent="0.1">
            <node leaf="false" class="NavMap" methodName="perceiveBattery" methodSignature="()Ljava/util/List;" time="68" count="2" selfTime="19" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.lang.Integer" methodName="toString" methodSignature="(I)Ljava/lang/String;" time="15" count="2" selfTime="15" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.String" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="9" count="4" selfTime="9" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.Boolean" methodName="toString" methodSignature="(Z)Ljava/lang/String;" time="8" count="2" selfTime="8" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="8" count="12" selfTime="8" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="NavMap" methodName="perceiveObstacles" methodSignature="()Ljava/util/List;" time="53" count="2" selfTime="20" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="isFreeOfObstacle" methodSignature="(II)Z" time="22" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="isFree" methodSignature="(III)Z" time="13" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.environment.grid.Location" methodName="toString" methodSignature="()Ljava/lang/String;" time="49" count="2" selfTime="17" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(I)Ljava/lang/StringBuilder;" time="15" count="4" selfTime="15" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="NavMap" methodName="perceiveMap" methodSignature="()Ljava/util/List;" time="32" count="2" selfTime="19" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.util.List" methodName="addAll" methodSignature="(Ljava/util/Collection;)Z" time="31" count="8" selfTime="31" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="NavMap" methodName="perceivePedestrians" methodSignature="()Ljava/util/List;" time="28" count="2" selfTime="11" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="hasObject" methodSignature="(III)Z" time="11" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="14" count="6" selfTime="14" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="12" count="2" selfTime="12" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="2" selfTime="11" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="9" count="2" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="7" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="NavMap" methodName="updateBattery" methodSignature="()V" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" time="82" count="2" selfTime="82" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.environment.Environment" methodName="clearPercepts" methodSignature="()V" time="46" count="2" selfTime="9" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="16" count="2" selfTime="16" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Set" methodName="clear" methodSignature="()V" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.List" methodName="clear" methodSignature="()V" time="8" count="2" selfTime="8" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="22" count="2" selfTime="22" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="13" count="18" selfTime="13" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="13" count="16" selfTime="13" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="NavMap" methodName="move" methodSignature="(Ljava/lang/String;)Z" time="2393" count="2" selfTime="48" lineNumber="-1" percent="0.9">
          <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="setAgPos" methodSignature="(ILjason/environment/grid/Location;)V" time="2262" count="2" selfTime="16" lineNumber="-1" percent="0.8">
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="add" methodSignature="(III)V" time="1883" count="2" selfTime="5" lineNumber="-1" percent="0.7">
              <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="update" methodSignature="(II)V" time="1878" count="2" selfTime="45" lineNumber="-1" percent="0.7">
                <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="draw" methodSignature="(Ljava/awt/Graphics;II)V" time="1661" count="2" selfTime="109" lineNumber="-1" percent="0.6">
                  <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawAgent" methodSignature="(Ljava/awt/Graphics;IILjava/awt/Color;I)V" time="1548" count="2" selfTime="34" lineNumber="-1" percent="0.6">
                    <node leaf="true" class="java.awt.Graphics" methodName="fillOval" methodSignature="(IIII)V" time="1123" count="2" selfTime="1123" lineNumber="-1" percent="0.4"/>
                    <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawString" methodSignature="(Ljava/awt/Graphics;IILjava/awt/Font;Ljava/lang/String;)V" time="340" count="2" selfTime="13" lineNumber="-1" percent="0.1">
                      <node leaf="true" class="java.awt.Graphics" methodName="drawString" methodSignature="(Ljava/lang/String;II)V" time="203" count="2" selfTime="203" lineNumber="-1" percent="0.1"/>
                      <node leaf="true" class="java.awt.Graphics" methodName="getFontMetrics" methodSignature="()Ljava/awt/FontMetrics;" time="60" count="2" selfTime="60" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.awt.FontMetrics" methodName="stringWidth" methodSignature="(Ljava/lang/String;)I" time="44" count="2" selfTime="44" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.awt.FontMetrics" methodName="getHeight" methodSignature="()I" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.awt.Graphics" methodName="setFont" methodSignature="(Ljava/awt/Font;)V" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.lang.String" methodName="valueOf" methodSignature="(I)Ljava/lang/String;" time="31" count="2" selfTime="31" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.awt.Graphics" methodName="setColor" methodSignature="(Ljava/awt/Color;)V" time="20" count="4" selfTime="20" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="getAgAtPos" methodSignature="(II)I" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawEmpty" methodSignature="(Ljava/awt/Graphics;II)V" time="172" count="2" selfTime="8" lineNumber="-1" percent="0.1">
                  <node leaf="true" class="java.awt.Graphics" methodName="drawRect" methodSignature="(IIII)V" time="121" count="2" selfTime="121" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.awt.Graphics" methodName="fillRect" methodSignature="(IIII)V" time="36" count="2" selfTime="36" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.awt.Graphics" methodName="setColor" methodSignature="(Ljava/awt/Color;)V" time="7" count="4" selfTime="7" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="remove" methodSignature="(III)V" time="357" count="2" selfTime="15" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="update" methodSignature="(II)V" time="342" count="2" selfTime="139" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.environment.grid.GridWorldView" methodName="drawEmpty" methodSignature="(Ljava/awt/Graphics;II)V" time="189" count="2" selfTime="31" lineNumber="-1" percent="0.1">
                  <node leaf="true" class="java.awt.Graphics" methodName="fillRect" methodSignature="(IIII)V" time="109" count="2" selfTime="109" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.awt.Graphics" methodName="drawRect" methodSignature="(IIII)V" time="29" count="2" selfTime="29" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.awt.Graphics" methodName="setColor" methodSignature="(Ljava/awt/Color;)V" time="20" count="4" selfTime="20" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.environment.grid.GridWorldView" methodName="draw" methodSignature="(Ljava/awt/Graphics;II)V" time="14" count="2" selfTime="14" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="getAgPos" methodSignature="(I)Ljason/environment/grid/Location;" time="44" count="2" selfTime="20" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.environment.grid.Location" methodName="clone" methodSignature="()Ljava/lang/Object;" time="24" count="2" selfTime="12" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="12" count="2" selfTime="12" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="isFree" methodSignature="(Ljason/environment/grid/Location;)Z" time="21" count="2" selfTime="7" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.environment.grid.GridWorldModel" methodName="isFree" methodSignature="(II)Z" time="14" count="2" selfTime="9" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.environment.grid.GridWorldModel" methodName="inGrid" methodSignature="(II)Z" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="11" count="4" selfTime="11" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.environment.grid.Location" methodName="&lt;init&gt;" methodSignature="(II)V" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="1462" count="2" selfTime="15" lineNumber="-1" percent="0.5">
          <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" time="1447" count="2" selfTime="1193" lineNumber="-1" percent="0.5">
            <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" time="124" count="2" selfTime="116" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.asSyntax.Atom" methodName="toString" methodSignature="()Ljava/lang/String;" time="8" count="2" selfTime="8" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.util.List" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" time="32" count="2" selfTime="32" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" time="32" count="2" selfTime="32" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.stream.Collectors" methodName="joining" methodSignature="(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;" time="28" count="2" selfTime="28" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="7" count="4" selfTime="7" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="7" count="4" selfTime="7" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="java.util.logging.Logger" methodName="info" methodSignature="(Ljava/lang/String;)V" time="649" count="2" selfTime="548" lineNumber="-1" percent="0.2">
          <node leaf="false" class="jason.runtime.MASConsoleLogFormatter" methodName="format" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" time="101" count="2" selfTime="28" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.runtime.MASConsoleLogFormatter" methodName="getAgName" methodSignature="(Ljava/util/logging/LogRecord;)Ljava/lang/String;" time="23" count="2" selfTime="6" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.lang.String" methodName="lastIndexOf" methodSignature="(I)I" time="9" count="2" selfTime="9" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.LogRecord" methodName="getLoggerName" methodSignature="()Ljava/lang/String;" time="8" count="2" selfTime="8" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="10" count="6" selfTime="10" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.logging.LogRecord" methodName="getMessage" methodSignature="()Ljava/lang/String;" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.logging.LogRecord" methodName="getThrown" methodSignature="()Ljava/lang/Throwable;" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="259" count="4" selfTime="22" lineNumber="-1" percent="0.1">
          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="126" count="8" selfTime="14" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="calcHashCode" methodSignature="()I" time="98" count="2" selfTime="19" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSyntax.Structure" methodName="calcHashCode" methodSignature="()I" time="78" count="2" selfTime="16" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Atom" methodName="calcHashCode" methodSignature="()I" time="40" count="2" selfTime="22" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="13" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSyntax.Pred" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="111" count="2" selfTime="14" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="89" count="2" selfTime="36" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSyntax.Atom" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="27" count="2" selfTime="14" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="2" selfTime="8" lineNumber="-1" percent="0.0"/>
              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;)Z" time="8" count="4" selfTime="5" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
        </node>
        <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" time="210" count="2" selfTime="37" lineNumber="-1" percent="0.1">
          <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" time="98" count="2" selfTime="96" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.asSyntax.Atom" methodName="toString" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.stream.Collectors" methodName="joining" methodSignature="(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;" time="19" count="2" selfTime="19" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.util.List" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" time="18" count="2" selfTime="18" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.environment.Environment" methodName="informAgsEnvironmentChanged" methodSignature="([Ljava/lang/String;)V" time="208" count="2" selfTime="36" lineNumber="-1" percent="0.1">
          <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="informAgsEnvironmentChanged" methodSignature="([Ljava/lang/String;)V" time="172" count="2" selfTime="69" lineNumber="-1" percent="0.1">
            <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wakeUpSense" methodSignature="()V" time="25" count="2" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" time="23" count="2" selfTime="16" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="22" count="2" selfTime="22" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" time="22" count="2" selfTime="22" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="10" count="4" selfTime="10" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.infra.centralised.BaseCentralisedMAS" methodName="getAgs" methodSignature="()Ljava/util/Map;" time="9" count="2" selfTime="9" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="2" selfTime="9" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
              <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="true" class="java.lang.String" methodName="contains" methodSignature="(Ljava/lang/CharSequence;)Z" time="34" count="4" selfTime="34" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="18" count="4" selfTime="18" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="java.lang.Thread" methodName="sleep" methodSignature="(J)V" time="17" count="2" selfTime="17" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="9" count="2" selfTime="9" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="actionExecuted" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Structure;ZLjava/lang/Object;)V" time="104" count="2" selfTime="22" lineNumber="-1" percent="0.0">
        <node leaf="false" class="jason.architecture.AgArch" methodName="actionExecuted" methodSignature="(Ljason/asSemantics/ActionExec;)V" time="56" count="2" selfTime="25" lineNumber="-1" percent="0.0">
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addFeedbackAction" methodSignature="(Ljason/asSemantics/ActionExec;)V" time="24" count="2" selfTime="5" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="18" count="2" selfTime="18" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getIntention" methodSignature="()Ljason/asSemantics/Intention;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wakeUpAct" methodSignature="()V" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getC" methodSignature="()Ljason/asSemantics/Circumstance;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.infra.centralised.BaseCentralisedMAS" methodName="getAg" methodSignature="(Ljava/lang/String;)Ljason/infra/centralised/CentralisedAgArch;" time="23" count="2" selfTime="7" lineNumber="-1" percent="0.0">
          <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="16" count="2" selfTime="16" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="jason.asSemantics.ActionExec" methodName="setResult" methodSignature="(Z)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
      </node>
    </node>
    <node leaf="false" class="jason.stdlib.wait$WaitEvent" methodName="lambda$new$0" methodSignature="()V" time="2783" count="2" selfTime="21" lineNumber="-1" percent="1.0">
      <node leaf="false" class="jason.stdlib.wait$WaitEvent" methodName="resume" methodSignature="(Z)V" time="2762" count="2" selfTime="2601" lineNumber="-1" percent="1.0">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="runAtBeginOfNextCycle" methodSignature="(Ljava/lang/Runnable;)V" time="86" count="2" selfTime="18" lineNumber="-1" percent="0.0">
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" time="32" count="2" selfTime="21" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" time="11" count="2" selfTime="11" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="26" count="2" selfTime="26" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="10" count="2" selfTime="8" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSemantics.Circumstance" methodName="removeEventListener" methodSignature="(Ljason/asSemantics/CircumstanceListener;)V" time="46" count="2" selfTime="11" lineNumber="-1" percent="0.0">
          <node leaf="true" class="java.util.Queue" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="35" count="2" selfTime="35" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wakeUpDeliberate" methodSignature="()V" time="25" count="2" selfTime="8" lineNumber="-1" percent="0.0">
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="wake" methodSignature="()V" time="17" count="2" selfTime="14" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.lang.Object" methodName="notifyAll" methodSignature="()V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
          <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
        </node>
      </node>
    </node>
  </node>
  <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="run" methodSignature="()V" time="124808" count="1" selfTime="2336" lineNumber="-1" percent="46.3">
    <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="reasoningCycle" methodSignature="()V" time="121505" count="13" selfTime="43730" lineNumber="-1" percent="45.1">
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="deliberate" methodSignature="()V" time="46605" count="12" selfTime="33" lineNumber="-1" percent="17.3">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="deliberate" methodSignature="()V" time="46487" count="6" selfTime="77" lineNumber="-1" percent="17.3">
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySemanticRuleDeliberate" methodSignature="()V" time="46173" count="19" selfTime="48" lineNumber="-1" percent="17.1">
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyApplPl" methodSignature="()V" time="41223" count="4" selfTime="73" lineNumber="-1" percent="15.3">
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applicablePlans" methodSignature="(Ljava/util/List;)Ljava/util/List;" time="41099" count="4" selfTime="121" lineNumber="-1" percent="15.3">
                <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="40469" count="18" selfTime="25" lineNumber="-1" percent="15.0">
                  <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="40372" count="6" selfTime="8" lineNumber="-1" percent="15.0">
                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="40364" count="6" selfTime="32" lineNumber="-1" percent="15.0">
                      <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="40062" count="23" selfTime="33" lineNumber="-1" percent="14.9">
                        <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="39125" count="12" selfTime="8" lineNumber="-1" percent="14.5">
                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="39117" count="6" selfTime="33" lineNumber="-1" percent="14.5">
                            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="38587" count="23" selfTime="18" lineNumber="-1" percent="14.3">
                              <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="27492" count="8" selfTime="8" lineNumber="-1" percent="10.2">
                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="27484" count="4" selfTime="26" lineNumber="-1" percent="10.2">
                                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="27061" count="17" selfTime="21" lineNumber="-1" percent="10.0">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="22764" count="5" selfTime="3" lineNumber="-1" percent="8.4">
                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="22761" count="3" selfTime="8" lineNumber="-1" percent="8.4">
                                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="22721" count="5" selfTime="6" lineNumber="-1" percent="8.4">
                                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="22261" count="3" selfTime="1" lineNumber="-1" percent="8.3">
                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="22260" count="3" selfTime="80" lineNumber="-1" percent="8.3">
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="18717" count="16" selfTime="25" lineNumber="-1" percent="6.9">
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="18672" count="4" selfTime="3" lineNumber="-1" percent="6.9">
                                                  <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="18669" count="4" selfTime="19" lineNumber="-1" percent="6.9">
                                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="18475" count="15" selfTime="18" lineNumber="-1" percent="6.9">
                                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="11295" count="8" selfTime="6" lineNumber="-1" percent="4.2">
                                                        <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="11289" count="4" selfTime="17" lineNumber="-1" percent="4.2">
                                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="11120" count="15" selfTime="14" lineNumber="-1" percent="4.1">
                                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="11106" count="15" selfTime="16" lineNumber="-1" percent="4.1">
                                                              <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="11090" count="11" selfTime="365" lineNumber="-1" percent="4.1">
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="8867" count="110" selfTime="406" lineNumber="-1" percent="3.3">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="8302" count="110" selfTime="1225" lineNumber="-1" percent="3.1">
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="5491" count="118" selfTime="334" lineNumber="-1" percent="2.0">
                                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="5015" count="118" selfTime="548" lineNumber="-1" percent="1.9">
                                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="3217" count="124" selfTime="320" lineNumber="-1" percent="1.2">
                                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2765" count="124" selfTime="1034" lineNumber="-1" percent="1.0">
                                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="484" count="13" selfTime="32" lineNumber="-1" percent="0.2">
                                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="441" count="13" selfTime="105" lineNumber="-1" percent="0.2">
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="143" count="4" selfTime="19" lineNumber="-1" percent="0.1">
                                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="84" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="55" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="48" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="39" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="35" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="26" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="17" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                                </node>
                                                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                              </node>
                                                                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                            </node>
                                                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                          </node>
                                                                                        </node>
                                                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="14" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="9" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                        </node>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="7" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="29" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="21" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="11" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                      </node>
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="63" count="2" selfTime="15" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="26" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="11" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="10" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                        </node>
                                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                      </node>
                                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="isUnary" methodSignature="()Z" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.ArithExpr$ArithmeticOp$2" methodName="eval" methodSignature="(DD)D" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.ArithExpr$ArithmeticOp$3" methodName="eval" methodSignature="(DD)D" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="22" count="5" selfTime="12" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="5" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="17" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="15" count="10" selfTime="10" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="14" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="10" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="8" count="20" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="8" count="22" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="7" count="10" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="5" count="20" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.ArithFunctionTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="7" count="31" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="182" count="2" selfTime="78" lineNumber="-1" percent="0.1">
                                                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="55" count="2" selfTime="14" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="28" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="20" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="11" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="15" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="9" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="isUnary" methodSignature="()Z" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.ArithExpr$ArithmeticOp$2" methodName="eval" methodSignature="(DD)D" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="173" count="4" selfTime="24" lineNumber="-1" percent="0.1">
                                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="108" count="4" selfTime="16" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="65" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="62" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="51" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="45" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="35" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="23" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                                                                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                            </node>
                                                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                          </node>
                                                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                        </node>
                                                                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                      </node>
                                                                                    </node>
                                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="19" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="17" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                    </node>
                                                                                  </node>
                                                                                </node>
                                                                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="8" count="4" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="31" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="26" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="13" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="125" count="240" selfTime="125" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="104" count="232" selfTime="104" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="98" count="220" selfTime="98" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="95" count="242" selfTime="95" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="91" count="220" selfTime="91" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="83" count="232" selfTime="83" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="63" count="116" selfTime="63" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="58" count="14" selfTime="33" lineNumber="-1" percent="0.0">
                                                                              <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="19" count="14" selfTime="15" lineNumber="-1" percent="0.0">
                                                                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="14" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="6" count="28" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="56" count="116" selfTime="56" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="39" count="6" selfTime="15" lineNumber="-1" percent="0.0">
                                                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="23" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="15" count="12" selfTime="9" lineNumber="-1" percent="0.0">
                                                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="15" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                                                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="13" count="34" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="9" count="24" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.ArithFunctionTerm" methodName="isArithExpr" methodSignature="()Z" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="6" count="18" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="126" count="360" selfTime="126" lineNumber="-1" percent="0.0"/>
                                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="895" count="110" selfTime="174" lineNumber="-1" percent="0.3">
                                                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="683" count="110" selfTime="197" lineNumber="-1" percent="0.3">
                                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="360" count="110" selfTime="233" lineNumber="-1" percent="0.1">
                                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="69" count="220" selfTime="69" lineNumber="-1" percent="0.0"/>
                                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="58" count="110" selfTime="58" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="126" count="110" selfTime="88" lineNumber="-1" percent="0.0">
                                                                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="38" count="110" selfTime="38" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="38" count="110" selfTime="38" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="64" count="110" selfTime="64" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="61" count="126" selfTime="61" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="54" count="110" selfTime="54" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="47" count="126" selfTime="47" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="32" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                                                                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="13" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="26" count="16" selfTime="18" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="23" count="44" selfTime="23" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="19" count="32" selfTime="19" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="16" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="94" count="220" selfTime="94" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="48" count="134" selfTime="48" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="425" count="110" selfTime="172" lineNumber="-1" percent="0.2">
                                                                      <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="174" count="110" selfTime="120" lineNumber="-1" percent="0.1">
                                                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="54" count="110" selfTime="54" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="79" count="220" selfTime="79" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="293" count="236" selfTime="189" lineNumber="-1" percent="0.1">
                                                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="104" count="236" selfTime="104" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="253" count="220" selfTime="166" lineNumber="-1" percent="0.1">
                                                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="87" count="220" selfTime="87" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="93" count="220" selfTime="93" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="83" count="220" selfTime="83" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="83" count="220" selfTime="83" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="82" count="220" selfTime="82" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="81" count="220" selfTime="81" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="78" count="220" selfTime="78" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="62" count="110" selfTime="62" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="45" count="110" selfTime="45" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="8" count="5" selfTime="7" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="95" count="330" selfTime="95" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="64" count="230" selfTime="64" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="1118" count="110" selfTime="151" lineNumber="-1" percent="0.4">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="790" count="110" selfTime="106" lineNumber="-1" percent="0.3">
                                                                    <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="684" count="110" selfTime="353" lineNumber="-1" percent="0.3">
                                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="331" count="372" selfTime="207" lineNumber="-1" percent="0.1">
                                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="124" count="372" selfTime="124" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="177" count="110" selfTime="119" lineNumber="-1" percent="0.1">
                                                                    <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="58" count="110" selfTime="58" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="407" count="110" selfTime="107" lineNumber="-1" percent="0.2">
                                                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="300" count="110" selfTime="111" lineNumber="-1" percent="0.1">
                                                                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="189" count="110" selfTime="111" lineNumber="-1" percent="0.1">
                                                                      <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="78" count="110" selfTime="78" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="285" count="116" selfTime="119" lineNumber="-1" percent="0.1">
                                                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="166" count="116" selfTime="104" lineNumber="-1" percent="0.1">
                                                                    <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="62" count="116" selfTime="62" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="42" count="110" selfTime="42" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="6" count="11" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="125" count="4" selfTime="29" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="70" count="4" selfTime="14" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="39" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="26" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="14" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="7" count="4" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="14" count="5" selfTime="6" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="8" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="13" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="7162" count="7" selfTime="8" lineNumber="-1" percent="2.7">
                                                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="7154" count="7" selfTime="242" lineNumber="-1" percent="2.7">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="5652" count="79" selfTime="295" lineNumber="-1" percent="2.1">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="5238" count="79" selfTime="922" lineNumber="-1" percent="1.9">
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="3127" count="86" selfTime="251" lineNumber="-1" percent="1.2">
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2786" count="86" selfTime="378" lineNumber="-1" percent="1.0">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1520" count="86" selfTime="229" lineNumber="-1" percent="0.6">
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1222" count="86" selfTime="687" lineNumber="-1" percent="0.5">
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="82" count="172" selfTime="82" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="69" count="172" selfTime="69" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="62" count="172" selfTime="62" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="60" count="172" selfTime="60" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="59" count="172" selfTime="59" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="53" count="172" selfTime="53" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="53" count="86" selfTime="53" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="50" count="11" selfTime="23" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="18" count="11" selfTime="13" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="11" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="9" count="22" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="34" count="86" selfTime="34" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="9" count="22" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="4" count="11" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="69" count="258" selfTime="69" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="749" count="86" selfTime="120" lineNumber="-1" percent="0.3">
                                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="592" count="86" selfTime="192" lineNumber="-1" percent="0.2">
                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="294" count="86" selfTime="204" lineNumber="-1" percent="0.1">
                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="45" count="172" selfTime="45" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="45" count="86" selfTime="45" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="106" count="86" selfTime="73" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="33" count="86" selfTime="33" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="37" count="86" selfTime="37" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="40" count="86" selfTime="40" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="37" count="86" selfTime="37" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="34" count="86" selfTime="34" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="28" count="86" selfTime="28" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="62" count="172" selfTime="62" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="28" count="86" selfTime="28" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="342" count="79" selfTime="144" lineNumber="-1" percent="0.1">
                                                                <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="144" count="79" selfTime="106" lineNumber="-1" percent="0.1">
                                                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="38" count="79" selfTime="38" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="54" count="158" selfTime="54" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="230" count="158" selfTime="131" lineNumber="-1" percent="0.1">
                                                                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="99" count="158" selfTime="99" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="189" count="172" selfTime="131" lineNumber="-1" percent="0.1">
                                                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="58" count="172" selfTime="58" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="70" count="158" selfTime="70" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="63" count="79" selfTime="63" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="58" count="158" selfTime="58" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="54" count="158" selfTime="54" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="53" count="158" selfTime="53" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="46" count="158" selfTime="46" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="44" count="158" selfTime="44" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="32" count="79" selfTime="32" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="8" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="67" count="237" selfTime="67" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="52" count="166" selfTime="52" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="738" count="79" selfTime="117" lineNumber="-1" percent="0.3">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="487" count="79" selfTime="83" lineNumber="-1" percent="0.2">
                                                              <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="404" count="79" selfTime="233" lineNumber="-1" percent="0.1">
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="171" count="191" selfTime="111" lineNumber="-1" percent="0.1">
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="60" count="191" selfTime="60" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="134" count="79" selfTime="94" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="40" count="79" selfTime="40" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="287" count="79" selfTime="76" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="211" count="79" selfTime="78" lineNumber="-1" percent="0.1">
                                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="133" count="79" selfTime="72" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="61" count="79" selfTime="61" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="203" count="82" selfTime="88" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="115" count="82" selfTime="69" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="46" count="82" selfTime="46" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="28" count="79" selfTime="28" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="147" count="4" selfTime="5" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="142" count="4" selfTime="10" lineNumber="-1" percent="0.1">
                                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="123" count="4" selfTime="29" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="68" count="4" selfTime="15" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="36" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="28" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="12" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="9" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="14" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="14" count="5" selfTime="6" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="20" count="12" selfTime="11" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="9" count="12" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2330" count="11" selfTime="53" lineNumber="-1" percent="0.9">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2254" count="11" selfTime="224" lineNumber="-1" percent="0.8">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1774" count="33" selfTime="117" lineNumber="-1" percent="0.7">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1616" count="33" selfTime="236" lineNumber="-1" percent="0.6">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="1135" count="23" selfTime="157" lineNumber="-1" percent="0.4">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="548" count="23" selfTime="59" lineNumber="-1" percent="0.2">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="323" count="21" selfTime="35" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="288" count="21" selfTime="40" lineNumber="-1" percent="0.1">
                                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="235" count="21" selfTime="21" lineNumber="-1" percent="0.1">
                                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="214" count="21" selfTime="40" lineNumber="-1" percent="0.1">
                                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="158" count="21" selfTime="41" lineNumber="-1" percent="0.1">
                                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="106" count="21" selfTime="45" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="52" count="21" selfTime="33" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="19" count="21" selfTime="19" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="9" count="21" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="11" count="21" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="16" count="21" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="13" count="21" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="82" count="23" selfTime="26" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="56" count="23" selfTime="26" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="30" count="23" selfTime="24" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="6" count="23" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="62" count="23" selfTime="25" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="37" count="23" selfTime="37" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="22" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="15" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="14" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="11" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="8" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="173" count="23" selfTime="94" lineNumber="-1" percent="0.1">
                                                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="57" count="23" selfTime="43" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="14" count="23" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="22" count="46" selfTime="22" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="148" count="23" selfTime="28" lineNumber="-1" percent="0.1">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="120" count="23" selfTime="49" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="59" count="23" selfTime="33" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="16" count="23" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="10" count="23" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="7" count="23" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="5" count="23" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="20" count="23" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="16" count="23" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="15" count="23" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="15" count="23" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="14" count="23" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="12" count="23" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="10" count="23" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="7" count="23" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="96" count="25" selfTime="27" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="68" count="25" selfTime="35" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="28" count="25" selfTime="18" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="10" count="25" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="29" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="23" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="21" count="41" selfTime="21" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="13" count="41" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="12" count="16" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="12" count="25" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="11" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="10" count="25" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="8" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="27" count="69" selfTime="27" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="14" count="30" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="82" count="66" selfTime="53" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="29" count="66" selfTime="29" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="74" count="11" selfTime="37" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="20" count="11" selfTime="12" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="11" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="17" count="22" selfTime="17" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="28" count="22" selfTime="17" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="11" count="22" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="11" count="22" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="10" count="22" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="10" count="22" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="10" count="11" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="9" count="22" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="7" count="22" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="6" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="5" count="11" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="4" count="22" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="15" count="32" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="8" count="33" selfTime="8" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="399" count="3" selfTime="3" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="396" count="3" selfTime="7" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="387" count="3" selfTime="7" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="378" count="3" selfTime="38" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="258" count="9" selfTime="87" lineNumber="-1" percent="0.1">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="100" count="9" selfTime="20" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="78" count="9" selfTime="20" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="45" count="8" selfTime="30" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="10" count="16" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="13" count="9" selfTime="9" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="9" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="20" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="14" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="10" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="10" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="7" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="15" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="7" count="9" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="33" count="3" selfTime="15" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="15" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="24" count="9" selfTime="17" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="7" count="9" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="10" count="9" selfTime="10" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="6" count="3" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="()Ljason/asSyntax/Literal;" time="350" count="4" selfTime="10" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="330" count="4" selfTime="7" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="317" count="4" selfTime="33" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="varToReplace" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)Ljason/asSyntax/VarTerm;" time="213" count="1" selfTime="45" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;)V" time="84" count="1" selfTime="16" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;I)V" time="56" count="1" selfTime="15" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="12" count="1" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="10" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="8" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(I)Ljava/lang/StringBuilder;" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="java.util.concurrent.atomic.AtomicInteger" methodName="incrementAndGet" methodSignature="()I" time="12" count="1" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/VarTerm;)V" time="72" count="1" selfTime="10" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="46" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="14" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="12" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="10" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="10" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="7" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="12" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="10" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="12" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="9" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="6" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="9" count="1" selfTime="8" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.UnnamedVar" methodName="isUnnamedVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="7" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="9" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="8" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="27" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="20" count="4" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="18" count="12" selfTime="12" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="setTerm" methodSignature="(ILjason/asSyntax/Term;)V" time="16" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.util.List" methodName="set" methodSignature="(ILjava/lang/Object;)Ljava/lang/Object;" time="12" count="1" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="5" count="11" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.Pred$1" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="161" count="4" selfTime="5" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="156" count="4" selfTime="11" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="135" count="4" selfTime="34" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="72" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="41" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="27" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="13" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="7" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="10" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Rule" methodName="headCApply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="116" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="115" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="113" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="112" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="46" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="24" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="10" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="9" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="6" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="setAnnots" methodSignature="(Ljason/asSyntax/ListTerm;)Ljason/asSyntax/Literal;" time="45" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="23" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="15" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="14" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="4" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Pred$1" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="48" count="11" selfTime="13" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="34" count="10" selfTime="14" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="20" count="10" selfTime="8" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="12" count="10" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="23" count="10" selfTime="20" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Literal" methodName="useDerefVars" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)V" time="12" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="3" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="4" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="useDerefVars" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)V" time="1" count="3" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="9" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="7" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="5" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="7" count="7" selfTime="7" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Rule" methodName="isRule" methodSignature="()Z" time="6" count="10" selfTime="6" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Rule" methodName="getBody" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="454" count="2" selfTime="1" lineNumber="-1" percent="0.2">
                                            <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="453" count="1" selfTime="1" lineNumber="-1" percent="0.2">
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="283" count="3" selfTime="3" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="154" count="2" selfTime="0" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="154" count="1" selfTime="4" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="123" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="121" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="120" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="71" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="66" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="44" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="41" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="34" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="22" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="16" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="15" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="13" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="12" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="8" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                                  </node>
                                                                                </node>
                                                                              </node>
                                                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                          </node>
                                                                        </node>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                          <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="33" count="1" selfTime="12" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="1" selfTime="12" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="8" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="7" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="20" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="12" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="6" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="false" class="jason.asSyntax.LogExpr$3" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="126" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="124" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="88" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="80" count="2" selfTime="15" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="46" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="41" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="25" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="19" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="11" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="4" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="23" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="12" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="11" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="163" count="1" selfTime="2" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="161" count="1" selfTime="0" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="159" count="1" selfTime="14" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="119" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="117" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="117" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="82" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="75" count="2" selfTime="20" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="43" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="38" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="21" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="16" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="11" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="10" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                  </node>
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="4" selfTime="0" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="18" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="14" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="12" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="10" selfTime="6" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="10" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                            </node>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="21" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="13" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="7" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="createUnifIterator" methodSignature="([Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="&lt;init&gt;" methodSignature="([Ljason/asSemantics/Unifier;)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="27" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="25" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="22" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="13" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="7" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="4276" count="8" selfTime="8" lineNumber="-1" percent="1.6">
                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="4268" count="8" selfTime="135" lineNumber="-1" percent="1.6">
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="3304" count="35" selfTime="170" lineNumber="-1" percent="1.2">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="3066" count="35" selfTime="463" lineNumber="-1" percent="1.1">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1957" count="40" selfTime="158" lineNumber="-1" percent="0.7">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1747" count="40" selfTime="192" lineNumber="-1" percent="0.6">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="743" count="34" selfTime="121" lineNumber="-1" percent="0.3">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="570" count="34" selfTime="327" lineNumber="-1" percent="0.2">
                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="32" count="68" selfTime="32" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="32" count="68" selfTime="32" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="31" count="68" selfTime="31" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="28" count="68" selfTime="28" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="28" count="68" selfTime="28" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="24" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="22" count="68" selfTime="22" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="22" count="34" selfTime="22" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="20" count="34" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="52" count="102" selfTime="52" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="386" count="6" selfTime="57" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="141" count="6" selfTime="14" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="90" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="82" count="6" selfTime="11" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="67" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="58" count="6" selfTime="11" lineNumber="-1" percent="0.0">
                                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="43" count="6" selfTime="11" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="28" count="6" selfTime="13" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="25" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="16" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="9" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="12" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="103" count="6" selfTime="11" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="92" count="6" selfTime="50" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="21" count="6" selfTime="14" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="16" count="6" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="35" count="2" selfTime="16" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="9" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="20" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="13" count="4" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="347" count="40" selfTime="69" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="266" count="40" selfTime="78" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="134" count="34" selfTime="90" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="23" count="68" selfTime="23" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="21" count="34" selfTime="21" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="54" count="40" selfTime="35" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="19" count="40" selfTime="19" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="12" count="34" selfTime="12" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="23" count="40" selfTime="23" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="22" count="40" selfTime="22" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="20" count="40" selfTime="20" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="14" count="40" selfTime="14" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="36" count="80" selfTime="36" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="16" count="40" selfTime="16" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="190" count="35" selfTime="98" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="59" count="35" selfTime="42" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="17" count="35" selfTime="17" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="33" count="70" selfTime="33" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="121" count="80" selfTime="82" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="39" count="80" selfTime="39" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="97" count="70" selfTime="63" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="34" count="70" selfTime="34" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="37" count="70" selfTime="37" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="33" count="70" selfTime="33" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="33" count="70" selfTime="33" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="30" count="70" selfTime="30" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="25" count="35" selfTime="25" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="25" count="70" selfTime="25" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="23" count="70" selfTime="23" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="23" count="35" selfTime="23" lineNumber="-1" percent="0.0"/>
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="9" count="5" selfTime="7" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="36" count="105" selfTime="36" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="32" count="80" selfTime="32" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="548" count="35" selfTime="73" lineNumber="-1" percent="0.2">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="409" count="35" selfTime="31" lineNumber="-1" percent="0.2">
                                            <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="378" count="35" selfTime="204" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="174" count="134" selfTime="127" lineNumber="-1" percent="0.1">
                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="47" count="134" selfTime="47" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="66" count="35" selfTime="48" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="18" count="35" selfTime="18" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="152" count="35" selfTime="41" lineNumber="-1" percent="0.1">
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="111" count="35" selfTime="41" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="70" count="35" selfTime="36" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="34" count="35" selfTime="34" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="107" count="38" selfTime="50" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="57" count="38" selfTime="34" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="23" count="38" selfTime="23" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="14" count="35" selfTime="14" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="8" count="8" selfTime="8" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="365" count="5" selfTime="25" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="148" count="3" selfTime="12" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="126" count="3" selfTime="27" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="74" count="3" selfTime="17" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="41" count="3" selfTime="12" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="26" count="3" selfTime="12" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="7" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="13" count="3" selfTime="8" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="6" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="10" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="7" count="3" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="119" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="107" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="104" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="59" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="43" count="2" selfTime="20" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="9" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="23" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="16" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="14" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                            </node>
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="7" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="5" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="55" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="32" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="18" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="12" count="2" selfTime="12" lineNumber="-1" percent="0.0"/>
                                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="16" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="11" count="5" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="16" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="10" count="5" selfTime="6" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="11077" count="11" selfTime="15" lineNumber="-1" percent="4.1">
                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="11062" count="11" selfTime="214" lineNumber="-1" percent="4.1">
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="7161" count="33" selfTime="174" lineNumber="-1" percent="2.7">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="6911" count="33" selfTime="522" lineNumber="-1" percent="2.6">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="5718" count="58" selfTime="197" lineNumber="-1" percent="2.1">
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="5433" count="58" selfTime="881" lineNumber="-1" percent="2.0">
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2321" count="36" selfTime="154" lineNumber="-1" percent="0.9">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="2113" count="36" selfTime="333" lineNumber="-1" percent="0.8">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1249" count="34" selfTime="129" lineNumber="-1" percent="0.5">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="1072" count="34" selfTime="441" lineNumber="-1" percent="0.4">
                                                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="217" count="25" selfTime="150" lineNumber="-1" percent="0.1">
                                                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="35" count="50" selfTime="35" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="18" count="25" selfTime="18" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="14" count="25" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="171" count="7" selfTime="27" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="136" count="7" selfTime="63" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="45" count="7" selfTime="30" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="8" count="14" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="9" count="14" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="8" count="7" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="8" count="14" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="8" count="21" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="86" count="7" selfTime="21" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="62" count="7" selfTime="18" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="32" count="7" selfTime="17" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="9" count="14" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="7" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="12" count="7" selfTime="8" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="39" count="61" selfTime="39" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="33" count="61" selfTime="33" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="18" count="25" selfTime="18" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="15" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="11" count="25" selfTime="11" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="10" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="43" count="88" selfTime="43" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="5" count="14" selfTime="5" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="298" count="25" selfTime="59" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="227" count="25" selfTime="64" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="120" count="25" selfTime="77" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="25" count="50" selfTime="25" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="18" count="25" selfTime="18" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="43" count="25" selfTime="30" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="13" count="25" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="12" count="25" selfTime="12" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="44" count="7" selfTime="19" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="18" count="7" selfTime="14" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="7" count="14" selfTime="7" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="25" count="14" selfTime="16" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="9" count="14" selfTime="9" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="24" count="47" selfTime="24" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="23" count="47" selfTime="23" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="22" count="25" selfTime="22" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="20" count="32" selfTime="20" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="17" count="25" selfTime="17" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="15" count="28" selfTime="15" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="9" count="14" selfTime="9" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="9" count="14" selfTime="9" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="7" selfTime="7" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="6" count="14" selfTime="6" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="5" count="7" selfTime="5" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="29" count="58" selfTime="29" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="25" count="50" selfTime="25" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="1487" count="29" selfTime="241" lineNumber="-1" percent="0.6">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="745" count="29" selfTime="89" lineNumber="-1" percent="0.3">
                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="472" count="29" selfTime="33" lineNumber="-1" percent="0.2">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="439" count="29" selfTime="73" lineNumber="-1" percent="0.2">
                                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="350" count="29" selfTime="44" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="306" count="29" selfTime="65" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="226" count="29" selfTime="67" lineNumber="-1" percent="0.1">
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="146" count="29" selfTime="62" lineNumber="-1" percent="0.1">
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="71" count="29" selfTime="40" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="31" count="29" selfTime="31" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="13" count="29" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="13" count="29" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="15" count="29" selfTime="15" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="16" count="29" selfTime="16" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="128" count="29" selfTime="46" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="82" count="29" selfTime="39" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="43" count="29" selfTime="26" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="17" count="29" selfTime="17" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="56" count="29" selfTime="39" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="17" count="29" selfTime="17" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="241" count="29" selfTime="46" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="195" count="29" selfTime="75" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="91" count="29" selfTime="53" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="25" count="29" selfTime="25" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="13" count="29" selfTime="13" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="19" count="29" selfTime="19" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="10" count="29" selfTime="10" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="136" count="25" selfTime="72" lineNumber="-1" percent="0.1">
                                              <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="45" count="25" selfTime="28" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="17" count="25" selfTime="17" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="19" count="50" selfTime="19" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="24" count="29" selfTime="24" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="18" count="25" selfTime="18" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="14" count="29" selfTime="14" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="14" count="29" selfTime="14" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="14" count="29" selfTime="14" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="13" count="25" selfTime="13" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="13" count="25" selfTime="13" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="10" count="25" selfTime="10" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="172" count="33" selfTime="41" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="127" count="33" selfTime="57" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="54" count="33" selfTime="34" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="20" count="33" selfTime="20" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="16" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="141" count="25" selfTime="69" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="47" count="25" selfTime="30" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="17" count="25" selfTime="17" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="25" count="50" selfTime="25" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="getArity" methodSignature="()I" time="91" count="50" selfTime="65" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="26" count="50" selfTime="26" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="54" count="114" selfTime="54" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="54" count="100" selfTime="54" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="47" count="83" selfTime="47" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="46" count="83" selfTime="46" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="32" count="33" selfTime="32" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="31" count="50" selfTime="31" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isLiteral" methodSignature="()Z" time="23" count="50" selfTime="23" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="16" count="50" selfTime="16" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="12" count="25" selfTime="12" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="25" selfTime="12" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="11" count="33" selfTime="11" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="60" count="112" selfTime="60" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="28" count="62" selfTime="28" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="174" count="33" selfTime="74" lineNumber="-1" percent="0.1">
                                        <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="70" count="33" selfTime="48" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="22" count="33" selfTime="22" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="30" count="66" selfTime="30" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="165" count="116" selfTime="107" lineNumber="-1" percent="0.1">
                                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="58" count="116" selfTime="58" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="104" count="66" selfTime="64" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="40" count="66" selfTime="40" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="35" count="66" selfTime="35" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="31" count="66" selfTime="31" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="30" count="66" selfTime="30" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="30" count="33" selfTime="30" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="29" count="66" selfTime="29" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="22" count="66" selfTime="22" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="20" count="66" selfTime="20" lineNumber="-1" percent="0.0"/>
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="17" count="10" selfTime="12" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="5" count="10" selfTime="5" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="14" count="33" selfTime="14" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="39" count="99" selfTime="39" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="37" count="86" selfTime="37" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1937" count="42" selfTime="53" lineNumber="-1" percent="0.7">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="1823" count="8" selfTime="10" lineNumber="-1" percent="0.7">
                                      <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="1813" count="8" selfTime="24" lineNumber="-1" percent="0.7">
                                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1608" count="24" selfTime="40" lineNumber="-1" percent="0.6">
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="hasNext" methodSignature="()Z" time="1107" count="16" selfTime="12" lineNumber="-1" percent="0.4">
                                            <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="get" methodSignature="()V" time="1095" count="8" selfTime="46" lineNumber="-1" percent="0.4">
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="679" count="24" selfTime="27" lineNumber="-1" percent="0.3">
                                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="637" count="8" selfTime="11" lineNumber="-1" percent="0.2">
                                                  <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="626" count="8" selfTime="32" lineNumber="-1" percent="0.2">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="513" count="4" selfTime="23" lineNumber="-1" percent="0.2">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="479" count="4" selfTime="60" lineNumber="-1" percent="0.2">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="358" count="4" selfTime="11" lineNumber="-1" percent="0.1">
                                                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="340" count="4" selfTime="20" lineNumber="-1" percent="0.1">
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="301" count="4" selfTime="18" lineNumber="-1" percent="0.1">
                                                              <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="157" count="4" selfTime="9" lineNumber="-1" percent="0.1">
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="148" count="4" selfTime="126" lineNumber="-1" percent="0.1">
                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="12" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                    <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="8" count="4" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="114" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="79" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="77" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="66" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="63" count="4" selfTime="19" lineNumber="-1" percent="0.0">
                                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="38" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="28" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="20" count="4" selfTime="14" lineNumber="-1" percent="0.0">
                                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                            </node>
                                                                          </node>
                                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                                        </node>
                                                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                                      </node>
                                                                    </node>
                                                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="16" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="11" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                    </node>
                                                                  </node>
                                                                </node>
                                                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                            </node>
                                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="14" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="12" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                                </node>
                                                              </node>
                                                            </node>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="16" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="10" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="9" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="9" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="34" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="18" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="16" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="21" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="14" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="18" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="17" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="11" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="hasNext" methodSignature="()Z" time="15" count="16" selfTime="15" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.RelExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="324" count="4" selfTime="105" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="145" count="8" selfTime="31" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="78" count="8" selfTime="14" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="60" count="8" selfTime="20" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="29" count="8" selfTime="16" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="11" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="22" count="8" selfTime="10" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="12" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.LogExpr" methodName="createUnifIterator" methodSignature="([Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="27" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="&lt;init&gt;" methodSignature="([Ljason/asSemantics/Unifier;)V" time="18" count="4" selfTime="18" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="18" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="9" count="4" selfTime="9" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="14" count="4" selfTime="14" lineNumber="-1" percent="0.0"/>
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="12" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="31" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.LogExpr$3" methodName="next" methodSignature="()Ljava/lang/Object;" time="12" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.LogExpr$3" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="15" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="10" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="461" count="8" selfTime="6" lineNumber="-1" percent="0.2">
                                            <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="455" count="8" selfTime="23" lineNumber="-1" percent="0.2">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="326" count="4" selfTime="20" lineNumber="-1" percent="0.1">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="292" count="4" selfTime="35" lineNumber="-1" percent="0.1">
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="181" count="4" selfTime="10" lineNumber="-1" percent="0.1">
                                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="164" count="4" selfTime="18" lineNumber="-1" percent="0.1">
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="74" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="57" count="4" selfTime="36" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="37" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="28" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="15" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                      <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="28" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="isUnary" methodSignature="()Z" time="7" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                      <node leaf="true" class="jason.asSyntax.ArithFunctionTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                      <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="22" count="4" selfTime="14" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="12" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="7" count="8" selfTime="3" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="6" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="8" count="16" selfTime="8" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="67" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="50" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="40" count="4" selfTime="34" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                </node>
                                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="19" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="12" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="15" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="142" count="4" selfTime="4" lineNumber="-1" percent="0.1">
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="138" count="4" selfTime="10" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="118" count="4" selfTime="28" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="67" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="37" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="27" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="11" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="7" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="10" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="28" count="8" selfTime="12" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="10" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="11" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="61" count="34" selfTime="34" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="27" count="34" selfTime="27" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Rule" methodName="headCApply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="610" count="4" selfTime="14" lineNumber="-1" percent="0.2">
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="596" count="4" selfTime="3" lineNumber="-1" percent="0.2">
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="593" count="4" selfTime="11" lineNumber="-1" percent="0.2">
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="581" count="4" selfTime="30" lineNumber="-1" percent="0.2">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="setAnnots" methodSignature="(Ljason/asSyntax/ListTerm;)Ljason/asSyntax/Literal;" time="261" count="4" selfTime="45" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="124" count="4" selfTime="29" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="28" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="25" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="19" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="14" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="10" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="24" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="20" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="15" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="9" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="19" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="15" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="11" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="9" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="6" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="39" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="31" count="8" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="27" count="8" selfTime="11" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="16" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="20" count="12" selfTime="13" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="7" count="12" selfTime="7" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="15" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="14" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="10" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="171" count="4" selfTime="24" lineNumber="-1" percent="0.1">
                                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="90" count="4" selfTime="16" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="55" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="46" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="22" count="4" selfTime="20" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="15" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="10" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="6" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="34" count="4" selfTime="14" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="17" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="7" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="91" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="83" count="4" selfTime="20" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="31" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="28" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="25" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="18" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="15" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="11" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                          </node>
                                                        </node>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="30" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="24" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="17" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="13" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                      </node>
                                                    </node>
                                                  </node>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Pred$1" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="25" count="4" selfTime="22" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="426" count="29" selfTime="60" lineNumber="-1" percent="0.2">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="301" count="29" selfTime="36" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="265" count="29" selfTime="160" lineNumber="-1" percent="0.1">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="105" count="79" selfTime="63" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="42" count="79" selfTime="42" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="65" count="29" selfTime="49" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="16" count="29" selfTime="16" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="()Ljason/asSyntax/Literal;" time="181" count="8" selfTime="20" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="143" count="8" selfTime="66" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="62" count="8" selfTime="29" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="13" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="12" count="8" selfTime="6" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="6" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Pred$1" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="18" count="8" selfTime="13" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="161" count="4" selfTime="4" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="157" count="4" selfTime="7" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="149" count="4" selfTime="7" lineNumber="-1" percent="0.1">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="140" count="4" selfTime="22" lineNumber="-1" percent="0.1">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="71" count="4" selfTime="18" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="35" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="27" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="13" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="14" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="27" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="15" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="156" count="33" selfTime="51" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="97" count="29" selfTime="33" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="64" count="29" selfTime="33" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="31" count="29" selfTime="31" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="8" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="126" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="121" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="103" count="4" selfTime="20" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="61" count="4" selfTime="11" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="34" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="25" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="6" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                              <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="10" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="9" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="useDerefVars" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)V" time="48" count="4" selfTime="24" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="12" count="8" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="useDerefVars" methodSignature="(Ljason/asSyntax/Term;Ljason/asSemantics/Unifier;)V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="12" count="15" selfTime="12" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="11" count="25" selfTime="11" lineNumber="-1" percent="0.0"/>
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Rule" methodName="getBody" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Rule" methodName="isRule" methodSignature="()Z" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="457" count="6" selfTime="42" lineNumber="-1" percent="0.2">
                              <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="166" count="4" selfTime="12" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="142" count="4" selfTime="27" lineNumber="-1" percent="0.1">
                                  <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="85" count="4" selfTime="23" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="44" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="28" count="4" selfTime="14" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="15" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="7" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="12" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="7" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="140" count="2" selfTime="1" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="139" count="2" selfTime="4" lineNumber="-1" percent="0.1">
                                  <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="135" count="2" selfTime="9" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="77" count="2" selfTime="11" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="58" count="2" selfTime="25" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="12" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="5" count="8" selfTime="5" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="26" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="15" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="13" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="12" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="96" count="2" selfTime="15" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="63" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="28" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="18" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="22" count="2" selfTime="18" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="20" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="12" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="20" count="7" selfTime="10" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="904" count="11" selfTime="15" lineNumber="-1" percent="0.3">
                          <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="889" count="11" selfTime="82" lineNumber="-1" percent="0.3">
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="576" count="6" selfTime="41" lineNumber="-1" percent="0.2">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="526" count="6" selfTime="84" lineNumber="-1" percent="0.2">
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="347" count="8" selfTime="31" lineNumber="-1" percent="0.1">
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="306" count="8" selfTime="56" lineNumber="-1" percent="0.1">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="182" count="4" selfTime="27" lineNumber="-1" percent="0.1">
                                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="109" count="4" selfTime="12" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="70" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="63" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="52" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="45" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="34" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="20" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                    </node>
                                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="18" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="12" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="9" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="37" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="28" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="14" count="4" selfTime="10" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="20" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="13" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="13" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="7" count="12" selfTime="7" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="6" count="8" selfTime="6" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="28" count="6" selfTime="13" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="10" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="18" count="16" selfTime="11" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="15" count="12" selfTime="5" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="10" count="12" selfTime="10" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="9" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="12" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="7" count="24" selfTime="7" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="2" count="18" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="136" count="6" selfTime="18" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="97" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="89" count="6" selfTime="81" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="8" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="21" count="6" selfTime="17" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="43" count="11" selfTime="22" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="21" count="11" selfTime="10" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="11" count="11" selfTime="11" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="40" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="32" count="6" selfTime="13" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="19" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="13" count="6" selfTime="13" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="7" count="11" selfTime="7" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isRule" methodSignature="()Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="218" count="6" selfTime="8" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="210" count="6" selfTime="13" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="182" count="6" selfTime="36" lineNumber="-1" percent="0.1">
                            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="110" count="6" selfTime="20" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="64" count="6" selfTime="19" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="40" count="6" selfTime="19" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="9" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="17" count="6" selfTime="10" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="7" count="6" selfTime="7" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="8" count="12" selfTime="8" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="7" count="6" selfTime="7" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="15" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="10" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="33" count="7" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="20" count="6" selfTime="17" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getRHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="19" count="6" selfTime="10" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="9" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Literal$1" methodName="hasNext" methodSignature="()Z" time="72" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Literal$1" methodName="get" methodSignature="()V" time="71" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="54" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="50" count="1" selfTime="8" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="33" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="30" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="25" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="15" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="10" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="8" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="7" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="6" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="true" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="7" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="5" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="5" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                        <node leaf="true" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.LogExpr" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="408" count="6" selfTime="27" lineNumber="-1" percent="0.2">
                  <node leaf="false" class="jason.asSyntax.LogExpr$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/LogExpr;Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)V" time="381" count="6" selfTime="48" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="306" count="6" selfTime="74" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="153" count="6" selfTime="31" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="58" count="6" selfTime="38" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="20" count="6" selfTime="20" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="57" count="6" selfTime="16" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="38" count="6" selfTime="18" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="9" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="40" count="6" selfTime="40" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="10" count="6" selfTime="10" lineNumber="-1" percent="0.0"/>
                      <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="9" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="7" count="6" selfTime="7" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.LogExpr" methodName="getLHS" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="27" count="6" selfTime="16" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="11" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="22" count="4" selfTime="22" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSyntax.Literal" methodName="logicalConsequence" methodSignature="(Ljason/asSemantics/Agent;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="20" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getCandidateBeliefs" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Ljava/util/Iterator;" time="12" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="6" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.bb.DefaultBeliefBase$EntryIteratorWrapper" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljason/bb/DefaultBeliefBase$BelEntry;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Literal$1" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/architecture/AgArch;Ljason/asSemantics/Unifier;ZLjason/asSemantics/Agent;Ljava/util/Iterator;I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="16" count="9" selfTime="14" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.Literal$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.LogExpr$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="9" count="14" selfTime="9" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="getPlan" methodSignature="()Ljason/asSyntax/Plan;" time="7" count="14" selfTime="7" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Plan" methodName="getContext" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="6" count="7" selfTime="6" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Plan" methodName="isAllUnifs" methodSignature="()Z" time="6" count="7" selfTime="6" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getLogger" methodSignature="()Ljava/util/logging/Logger;" time="5" count="14" selfTime="5" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="getUnifier" methodSignature="()Ljason/asSemantics/Unifier;" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.LinkedList" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="setUnifier" methodSignature="(Ljason/asSemantics/Unifier;)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyRelApplPlRule2" methodSignature="(Ljava/lang/String;)V" time="43" count="3" selfTime="26" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="isGoal" methodSignature="()Z" time="12" count="3" selfTime="12" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.runtime.Settings" methodName="requeue" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Event" methodName="isInternal" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.runtime.Settings" methodName="retrieve" methodSignature="()Z" time="8" count="3" selfTime="8" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySelEv" methodSignature="()V" time="3017" count="9" selfTime="90" lineNumber="-1" percent="1.1">
              <node leaf="false" class="AgentBrain" methodName="selectEvent" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Event;" time="2893" count="4" selfTime="39" lineNumber="-1" percent="1.1">
                <node leaf="false" class="AgentBrain" methodName="getHighestPriorityEvent" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Event;" time="2794" count="1" selfTime="415" lineNumber="-1" percent="1.0">
                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="1513" count="225" selfTime="182" lineNumber="-1" percent="0.6">
                    <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="1331" count="217" selfTime="150" lineNumber="-1" percent="0.5">
                      <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="1181" count="217" selfTime="260" lineNumber="-1" percent="0.4">
                        <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="goNext" methodSignature="()V" time="615" count="217" selfTime="285" lineNumber="-1" percent="0.2">
                          <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="172" count="386" selfTime="172" lineNumber="-1" percent="0.1"/>
                          <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="89" count="78" selfTime="89" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="54" count="81" selfTime="54" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="12" count="3" selfTime="12" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="306" count="217" selfTime="306" lineNumber="-1" percent="0.1"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="417" count="230" selfTime="193" lineNumber="-1" percent="0.2">
                    <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="hasNext" methodSignature="()Z" time="224" count="219" selfTime="137" lineNumber="-1" percent="0.1">
                      <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="87" count="219" selfTime="87" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="201" count="3" selfTime="11" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljava/util/Iterator;)V" time="164" count="3" selfTime="41" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.bb.DefaultBeliefBase$2" methodName="goNext" methodSignature="()V" time="79" count="3" selfTime="17" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.Deque" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="52" count="3" selfTime="52" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="7" count="6" selfTime="7" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="27" count="3" selfTime="27" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="10" count="3" selfTime="10" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" time="7" count="3" selfTime="7" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="16" count="3" selfTime="16" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.Map" methodName="values" methodSignature="()Ljava/util/Collection;" time="10" count="3" selfTime="10" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.lang.String" methodName="contentEquals" methodSignature="(Ljava/lang/CharSequence;)Z" time="119" count="220" selfTime="119" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="80" count="220" selfTime="80" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="15" count="4" selfTime="15" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Queue" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="15" count="2" selfTime="15" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" time="12" count="3" selfTime="10" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="toString" methodSignature="()Ljava/lang/String;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSemantics.Event" methodName="getTrigger" methodSignature="()Ljason/asSyntax/Trigger;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerms" methodSignature="()Ljava/util/List;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Queue" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="22" count="4" selfTime="21" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSemantics.Event" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.util.Queue" methodName="size" methodSignature="()I" time="22" count="4" selfTime="22" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.Agent" methodName="selectEvent" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Event;" time="16" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="12" count="3" selfTime="12" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" time="17" count="9" selfTime="8" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="9" count="9" selfTime="9" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.Agent" methodName="hasCustomSelectOption" methodSignature="()Z" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="removeAtomicEvent" methodSignature="()Ljason/asSemantics/Event;" time="4" count="9" selfTime="4" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="hasAtomicIntention" methodSignature="()Z" time="3" count="9" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getEvents" methodSignature="()Ljava/util/Queue;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyRelPl" methodSignature="()V" time="1648" count="4" selfTime="19" lineNumber="-1" percent="0.6">
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="relevantPlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" time="1629" count="4" selfTime="73" lineNumber="-1" percent="0.6">
                <node leaf="false" class="jason.asSyntax.Plan" methodName="isRelevant" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSemantics/Unifier;)Ljason/asSemantics/Unifier;" time="1015" count="7" selfTime="31" lineNumber="-1" percent="0.4">
                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSyntax/Trigger;)Z" time="952" count="7" selfTime="35" lineNumber="-1" percent="0.4">
                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="907" count="7" selfTime="67" lineNumber="-1" percent="0.3">
                      <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="831" count="7" selfTime="140" lineNumber="-1" percent="0.3">
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="533" count="7" selfTime="20" lineNumber="-1" percent="0.2">
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="502" count="7" selfTime="68" lineNumber="-1" percent="0.2">
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="366" count="7" selfTime="59" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="187" count="7" selfTime="32" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="112" count="7" selfTime="13" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="99" count="7" selfTime="21" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="75" count="7" selfTime="13" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="62" count="7" selfTime="12" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="45" count="7" selfTime="16" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="26" count="7" selfTime="13" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="7" selfTime="6" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="7" selfTime="5" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="5" count="7" selfTime="5" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="24" count="7" selfTime="8" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="16" count="7" selfTime="6" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="10" count="7" selfTime="6" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="19" count="7" selfTime="14" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="5" count="7" selfTime="5" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="81" count="7" selfTime="33" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="48" count="7" selfTime="14" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="23" count="7" selfTime="10" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="10" count="7" selfTime="10" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="6" count="7" selfTime="6" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="7" selfTime="5" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="16" count="3" selfTime="7" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="5" count="7" selfTime="5" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="30" count="7" selfTime="7" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="23" count="7" selfTime="11" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="12" count="7" selfTime="7" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="5" count="7" selfTime="5" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="26" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="isUnary" methodSignature="()Z" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.ArithFunctionTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="10" count="14" selfTime="10" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="7" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="52" count="7" selfTime="31" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="14" count="7" selfTime="9" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="7" selfTime="5" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="7" count="14" selfTime="7" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="24" count="7" selfTime="21" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="17" count="14" selfTime="14" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="14" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="13" count="14" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="7" count="14" selfTime="7" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="13" count="7" selfTime="13" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="9" count="14" selfTime="9" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="7" count="14" selfTime="7" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="6" count="14" selfTime="6" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="5" count="14" selfTime="5" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="14" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="4" count="14" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="5" count="28" selfTime="5" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="4" count="21" selfTime="4" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Trigger" methodName="sameType" methodSignature="(Ljason/asSyntax/Trigger;)Z" time="7" count="7" selfTime="7" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="3" count="14" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="32" count="7" selfTime="24" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="7" selfTime="8" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="clone" methodSignature="()Ljason/asSyntax/Trigger;" time="293" count="4" selfTime="15" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" time="234" count="4" selfTime="8" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="226" count="4" selfTime="5" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="221" count="4" selfTime="10" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="209" count="4" selfTime="10" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="198" count="4" selfTime="15" lineNumber="-1" percent="0.1">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="88" count="4" selfTime="24" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="22" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="12" count="4" selfTime="9" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="14" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="14" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithExpr;)V" time="12" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithFunctionTerm;)V" time="12" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="11" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="9" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="8" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="8" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                              <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="cloneLT" methodSignature="()Ljason/asSyntax/ListTerm;" time="82" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="79" count="4" selfTime="17" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="31" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="30" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="24" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="19" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="16" count="4" selfTime="3" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="13" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="29" count="4" selfTime="6" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="23" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="18" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="14" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="7" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Pred$1" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="11" count="4" selfTime="8" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" time="44" count="4" selfTime="17" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="19" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="15" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="11" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Trigger" methodName="setTrigOp" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;)V" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" time="151" count="4" selfTime="28" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="67" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="38" count="1" selfTime="29" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Trigger$TEType$2" methodName="toString" methodSignature="()Ljava/lang/String;" time="9" count="1" selfTime="9" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="8" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="45" count="4" selfTime="13" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="29" count="4" selfTime="14" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="8" count="4" selfTime="7" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="29" count="7" selfTime="29" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Plan;Ljason/asSemantics/Unifier;)V" time="19" count="7" selfTime="19" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="15" count="11" selfTime="15" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.LinkedList" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="4" selfTime="13" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="12" count="4" selfTime="12" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="9" count="7" selfTime="9" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyAddIM" methodSignature="()V" time="184" count="1" selfTime="31" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="&lt;init&gt;" methodSignature="(Ljason/asSemantics/Option;Ljason/asSyntax/Trigger;)V" time="111" count="1" selfTime="23" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Trigger;" time="84" count="1" selfTime="8" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="69" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="69" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="67" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="setAnnots" methodSignature="(Ljason/asSyntax/ListTerm;)Ljason/asSyntax/Literal;" time="36" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="19" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="4" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="14" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="13" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="12" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/ListTerm;" time="4" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" time="7" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Trigger" methodName="setTrigOp" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.Plan" methodName="getBody" methodSignature="()Ljason/asSyntax/PlanBody;" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Option" methodName="getPlan" methodSignature="()Ljason/asSyntax/Plan;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="push" methodSignature="(Ljason/asSemantics/IntendedMeans;)V" time="19" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="push" methodSignature="(Ljava/lang/Object;)V" time="9" count="1" selfTime="9" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isAtomic" methodSignature="()Z" time="6" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.Plan" methodName="isAtomic" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)V" time="13" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getTrigger" methodSignature="()Ljason/asSyntax/Trigger;" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getCurrentStep" methodSignature="()Ljason/asSyntax/PlanBody;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="hasGoalListener" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyNext" methodSignature="()Ljason/asSyntax/PlanBody;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="isAchvGoal" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="isAddition" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySelAppl" methodSignature="()V" time="53" count="1" selfTime="12" lineNumber="-1" percent="0.0">
              <node leaf="false" class="AgentBrain" methodName="selectOption" methodSignature="(Ljava/util/List;)Ljason/asSemantics/Option;" time="40" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                <node leaf="false" class="AgentBrain" methodName="getHighestPriorityOption" methodSignature="(Ljava/util/List;)Ljason/asSemantics/Option;" time="18" count="1" selfTime="10" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.List" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Plan" methodName="getContext" methodSignature="()Ljason/asSyntax/LogicalFormula;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.util.List" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="false" class="jason.stdlib.wait$WaitEvent" methodName="lambda$resume$e8933e5e$1" methodSignature="(Z)V" time="182" count="2" selfTime="44" lineNumber="-1" percent="0.1">
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="removePendingIntention" methodSignature="(Ljava/lang/String;)Ljason/asSemantics/Intention;" time="44" count="2" selfTime="15" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="25" count="2" selfTime="25" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="removeCurrentStep" methodSignature="()Ljason/asSyntax/Term;" time="32" count="2" selfTime="13" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="18" count="2" selfTime="15" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyNext" methodSignature="()Ljason/asSyntax/PlanBody;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="resumeIntention" methodSignature="(Ljason/asSemantics/Intention;Ljason/asSyntax/Term;)V" time="30" count="2" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)V" time="26" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="13" count="2" selfTime="4" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="9" count="2" selfTime="9" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)Z" time="9" count="2" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Queue" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="isSuspended" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="22" count="8" selfTime="22" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="18" count="13" selfTime="12" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="6" count="13" selfTime="6" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetDeliberate" methodSignature="()V" time="10" count="6" selfTime="10" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="5" count="13" selfTime="5" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="canSleepDeliberate" methodSignature="()Z" time="79" count="12" selfTime="28" lineNumber="-1" percent="0.0">
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" time="19" count="12" selfTime="14" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="canSleep" methodSignature="()Z" time="14" count="6" selfTime="8" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="10" count="9" selfTime="10" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="5" count="6" selfTime="4" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedEvent" methodSignature="()Ljason/asSemantics/Event;" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="jason.architecture.AgArch" methodName="reasoningCycleStarting" methodSignature="()V" time="20144" count="12" selfTime="20144" lineNumber="-1" percent="7.5"/>
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="act" methodSignature="()V" time="5904" count="12" selfTime="31" lineNumber="-1" percent="2.2">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="act" methodSignature="()V" time="5645" count="9" selfTime="68" lineNumber="-1" percent="2.1">
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySemanticRuleAct" methodSignature="()V" time="4909" count="31" selfTime="38" lineNumber="-1" percent="1.8">
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyExecInt" methodSignature="()V" time="4371" count="7" selfTime="220" lineNumber="-1" percent="1.6">
              <node leaf="false" class="jason.stdlib.foreach" methodName="execute" methodSignature="(Ljason/asSemantics/TransitionSystem;Ljason/asSemantics/Unifier;[Ljason/asSyntax/Term;)Ljava/lang/Object;" time="1956" count="2" selfTime="86" lineNumber="-1" percent="0.7">
                <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="833" count="2" selfTime="7" lineNumber="-1" percent="0.3">
                  <node leaf="false" class="jason.stdlib.member$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="826" count="2" selfTime="15" lineNumber="-1" percent="0.3">
                    <node leaf="false" class="jason.stdlib.member$1" methodName="next" methodSignature="()Ljason/asSemantics/Unifier;" time="811" count="2" selfTime="4" lineNumber="-1" percent="0.3">
                      <node leaf="false" class="jason.stdlib.member$1" methodName="find" methodSignature="()V" time="807" count="2" selfTime="26" lineNumber="-1" percent="0.3">
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="706" count="1" selfTime="21" lineNumber="-1" percent="0.3">
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="678" count="1" selfTime="307" lineNumber="-1" percent="0.3">
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNoUndo" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="311" count="2" selfTime="17" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifyTerms" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)Z" time="289" count="2" selfTime="84" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="bind" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSyntax/Term;)Z" time="188" count="2" selfTime="18" lineNumber="-1" percent="0.1">
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="getVarForUnifier" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="121" count="2" selfTime="14" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="76" count="1" selfTime="34" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="39" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="32" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="23" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="16" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="11" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="6" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="19" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="16" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="14" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="12" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="9" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="deref" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/VarTerm;" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="setNegated" methodSignature="(Z)Ljason/asSyntax/Literal;" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="28" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="25" count="2" selfTime="16" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="8" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="11" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="java.lang.String" methodName="startsWith" methodSignature="(Ljava/lang/String;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="11" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="8" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isVar" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isArithExpr" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.VarTerm" methodName="isCyclicTerm" methodSignature="()Z" time="5" count="4" selfTime="5" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="23" count="1" selfTime="23" lineNumber="-1" percent="0.0"/>
                            <node leaf="false" class="jason.asSemantics.Unifier" methodName="unifiesNamespace" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSyntax/Literal;)Z" time="8" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="java.lang.Object" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="4" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSubsetAnnot" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)Z" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isArithExpr" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="clone" methodSignature="()Ljason/asSemantics/Unifier;" time="25" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="cloneFunction" methodSignature="()Ljava/util/Map;" time="18" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="java.util.HashMap" methodName="clone" methodSignature="()Ljava/lang/Object;" time="17" count="1" selfTime="11" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="7" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="7" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                        <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="25" count="2" selfTime="11" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" time="14" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isList" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                        <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="25" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljava/lang/Object;" time="19" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljason/asSyntax/Term;" time="13" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSemantics.Unifier" methodName="compose" methodSignature="(Ljason/asSemantics/Unifier;)V" time="771" count="2" selfTime="67" lineNumber="-1" percent="0.3">
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="287" count="2" selfTime="1" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="286" count="2" selfTime="5" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="227" count="2" selfTime="1" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="226" count="2" selfTime="5" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="174" count="2" selfTime="1" lineNumber="-1" percent="0.1">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="173" count="2" selfTime="4" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="124" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="121" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="68" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="64" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="37" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="36" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="32" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="30" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="26" count="2" selfTime="11" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="6" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                  </node>
                                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                </node>
                                                <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="13" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="12" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="7" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="6" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                                </node>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="8" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="42" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="40" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="37" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="33" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="30" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                              </node>
                                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="3" count="4" selfTime="3" lineNumber="-1" percent="0.0"/>
                                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="9" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="36" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="35" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="32" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="29" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="25" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="7" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="3" count="4" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="7" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="37" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="36" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="32" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="29" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="25" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="6" count="4" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="7" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="5" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="44" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="41" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="37" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="33" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="29" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="6" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="4" count="4" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="4" selfTime="4" lineNumber="-1" percent="0.0"/>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="9" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="144" count="16" selfTime="23" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="120" count="16" selfTime="21" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="97" count="16" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="85" count="16" selfTime="18" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="62" count="16" selfTime="16" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="41" count="16" selfTime="19" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="21" count="16" selfTime="12" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="16" selfTime="9" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="16" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="16" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="16" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="70" count="18" selfTime="9" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="61" count="18" selfTime="10" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="51" count="18" selfTime="51" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="65" count="18" selfTime="16" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="49" count="18" selfTime="17" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="24" count="16" selfTime="16" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="6" count="16" selfTime="6" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="16" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="18" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="42" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="cloneNS" methodSignature="(Ljason/asSyntax/Atom;)Ljason/asSyntax/Literal;" time="28" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.UnnamedVar" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="21" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="20" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjava/lang/String;)V" time="18" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="15" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="13" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="36" count="18" selfTime="10" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="26" count="18" selfTime="13" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="13" count="18" selfTime="7" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="6" count="18" selfTime="6" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="13" count="18" selfTime="13" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="12" count="20" selfTime="12" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="11" count="2" selfTime="11" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="9" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="151" count="2" selfTime="7" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="clone" methodSignature="()Ljason/asSyntax/PlanBody;" time="144" count="2" selfTime="15" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Ljason/asSyntax/Term;Z)V" time="77" count="2" selfTime="21" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Z)V" time="54" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;)V" time="35" count="2" selfTime="21" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="14" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="9" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="7" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="setAsBodyTerm" methodSignature="(Z)V" time="7" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyNext" methodSignature="()Ljason/asSyntax/PlanBody;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="52" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="49" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="47" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="42" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="40" count="2" selfTime="8" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="22" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="19" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="14" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="13" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="10" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="5" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="insertAsNextStep" methodSignature="(Ljason/asSyntax/PlanBody;)Ljason/asSyntax/PlanBody;" time="43" count="2" selfTime="18" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Ljason/asSyntax/Term;)V" time="22" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Ljason/asSyntax/Term;Z)V" time="17" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;Z)V" time="14" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.PlanBodyImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/PlanBody$BodyType;)V" time="11" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="8" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="6" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyType" methodSignature="()Ljason/asSyntax/PlanBody$BodyType;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="setBodyNext" methodSignature="(Ljason/asSyntax/PlanBody;)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="19" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.stdlib.member$1" methodName="hasNext" methodSignature="()Z" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Unifier" methodName="clear" methodSignature="()V" time="13" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Map" methodName="clear" methodSignature="()V" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.lang.Boolean" methodName="valueOf" methodSignature="(Z)Ljava/lang/Boolean;" time="12" count="2" selfTime="12" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="setAsBodyTerm" methodSignature="(Z)V" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.ObjectTermImpl" methodName="getObject" methodSignature="()Ljava/lang/Object;" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="add" methodSignature="(Ljason/asSyntax/PlanBody;)Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getCurrentStep" methodSignature="()Ljason/asSyntax/PlanBody;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getC" methodSignature="()Ljason/asSemantics/Circumstance;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedIntention" methodSignature="()Ljason/asSemantics/Intention;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.stdlib.wait" methodName="execute" methodSignature="(Ljason/asSemantics/TransitionSystem;Ljason/asSemantics/Unifier;[Ljason/asSyntax/Term;)Ljava/lang/Object;" time="1011" count="1" selfTime="33" lineNumber="-1" percent="0.4">
                <node leaf="false" class="jason.stdlib.wait$WaitEvent" methodName="&lt;init&gt;" methodSignature="(Ljason/stdlib/wait;Ljason/asSyntax/Trigger;Ljason/asSyntax/LogicalFormula;Ljason/asSemantics/Unifier;Ljason/asSemantics/TransitionSystem;JLjason/asSyntax/Term;)V" time="964" count="1" selfTime="603" lineNumber="-1" percent="0.4">
                  <node leaf="false" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" time="177" count="1" selfTime="7" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" time="170" count="1" selfTime="16" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" time="77" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="toString" methodSignature="()Ljava/lang/String;" time="74" count="1" selfTime="20" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="41" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="toString" methodSignature="()Ljava/lang/String;" time="34" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" time="17" count="1" selfTime="12" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="toString" methodSignature="()Ljava/lang/String;" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.lang.String" methodName="valueOf" methodSignature="(J)Ljava/lang/String;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="java.lang.Math" methodName="round" methodSignature="(D)J" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                              </node>
                              <node leaf="true" class="java.util.List" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="jason.asSyntax.Literal" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.util.stream.Collectors" methodName="joining" methodSignature="(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(C)Ljava/lang/StringBuilder;" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isTail" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="java.util.stream.Stream" methodName="collect" methodSignature="(Ljava/util/stream/Collector;)Ljava/lang/Object;" time="56" count="1" selfTime="37" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="toString" methodSignature="()Ljava/lang/String;" time="19" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.String" methodName="valueOf" methodSignature="(J)Ljava/lang/String;" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.Math" methodName="round" methodSignature="(D)J" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="java.util.List" methodName="stream" methodSignature="()Ljava/util/stream/Stream;" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.stream.Collectors" methodName="joining" methodSignature="(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.stream.Stream" methodName="map" methodSignature="(Ljava/util/function/Function;)Ljava/util/stream/Stream;" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="java.util.concurrent.ScheduledExecutorService" methodName="schedule" methodSignature="(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;" time="86" count="1" selfTime="86" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="createLiteral" methodSignature="(Ljava/lang/String;[Ljason/asSyntax/Term;)Ljason/asSyntax/Literal;" time="24" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="12" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="8" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="addTerms" methodSignature="([Ljason/asSyntax/Term;)Ljason/asSyntax/Literal;" time="6" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addPendingIntention" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Term;Ljason/asSemantics/Intention;Z)V" time="23" count="1" selfTime="11" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSemantics.CircumstanceListener" methodName="intentionWaiting" methodSignature="(Ljason/asSemantics/Intention;Ljason/asSyntax/Term;)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.Queue" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSemantics.Intention" methodName="setSuspendedReason" methodSignature="(Ljason/asSyntax/Term;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="22" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="createStructure" methodSignature="(Ljava/lang/String;[Ljason/asSyntax/Term;)Ljason/asSyntax/Structure;" time="10" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="6" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="addTerms" methodSignature="([Ljason/asSyntax/Term;)Ljason/asSyntax/Literal;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addEventListener" methodSignature="(Ljason/asSemantics/CircumstanceListener;)V" time="6" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Queue" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="6" count="1" selfTime="6" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.lang.System" methodName="currentTimeMillis" methodSignature="()J" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.ASSyntax" methodName="createNumber" methodSignature="(D)Ljason/asSyntax/NumberTerm;" time="4" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="jason.asSemantics.Agent" methodName="getScheduler" methodSignature="()Ljava/util/concurrent/ScheduledExecutorService;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedIntention" methodSignature="()Ljason/asSemantics/Intention;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.Intention" methodName="getId" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.lang.Boolean" methodName="valueOf" methodSignature="(Z)Ljava/lang/Boolean;" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.DefaultInternalAction" methodName="checkArguments" methodSignature="([Ljason/asSyntax/Term;)V" time="6" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.stdlib.wait" methodName="getMinArgs" methodSignature="()I" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.stdlib.wait" methodName="getMaxArgs" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="isNumeric" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="243" count="2" selfTime="8" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="235" count="2" selfTime="6" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="229" count="2" selfTime="11" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="218" count="2" selfTime="34" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="99" count="2" selfTime="38" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="50" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="40" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="18" count="2" selfTime="11" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="10" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="57" count="2" selfTime="22" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="31" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="17" count="2" selfTime="7" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="2" selfTime="10" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="12" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="8" count="2" selfTime="8" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.DefaultInternalAction" methodName="prepareArguments" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)[Ljason/asSyntax/Term;" time="218" count="2" selfTime="23" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="184" count="1" selfTime="2" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="182" count="1" selfTime="0" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="182" count="1" selfTime="2" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="180" count="1" selfTime="1" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="168" count="2" selfTime="0" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="168" count="2" selfTime="3" lineNumber="-1" percent="0.1">
                            <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="165" count="2" selfTime="3" lineNumber="-1" percent="0.1">
                              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="162" count="2" selfTime="7" lineNumber="-1" percent="0.1">
                                <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="116" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="89" count="1" selfTime="46" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="19" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="18" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="5" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.functions.time" methodName="evaluate" methodSignature="(Ljason/asSemantics/TransitionSystem;[Ljason/asSyntax/Term;)D" time="12" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.lang.System" methodName="currentTimeMillis" methodSignature="()J" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="6" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="getTermsArray" methodSignature="()[Ljason/asSyntax/Term;" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="jason.asSemantics.Agent" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSemantics.DefaultArithFunction" methodName="allowUngroundTerms" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="isGround" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="14" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="7" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="6" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="hasVar" methodSignature="(Ljason/asSyntax/VarTerm;Ljason/asSemantics/Unifier;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="isUnary" methodSignature="()Z" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="&lt;init&gt;" methodSignature="(D)V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="solve" methodSignature="()D" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="25" count="2" selfTime="4" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.VarTerm" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="9" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.VarTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="7" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;ZLjason/asSyntax/Literal;)V" time="5" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                              <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                            </node>
                                            <node leaf="true" class="jason.asSyntax.VarTerm" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                  <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="8" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="7" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="7" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="3" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="resetHashCodeCache" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="2" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="5" count="3" selfTime="5" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="3" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.stdlib.broadcast" methodName="execute" methodSignature="(Ljason/asSemantics/TransitionSystem;Ljason/asSemantics/Unifier;[Ljason/asSyntax/Term;)Ljava/lang/Object;" time="213" count="1" selfTime="24" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSemantics.Message" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" time="79" count="1" selfTime="17" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSemantics.Message" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V" time="30" count="1" selfTime="15" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSemantics.Message" methodName="setIlForce" methodSignature="(Ljava/lang/String;)V" time="15" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="6" count="5" selfTime="6" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.concurrent.atomic.AtomicInteger" methodName="incrementAndGet" methodSignature="()I" time="8" count="1" selfTime="8" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(I)Ljava/lang/StringBuilder;" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="broadcast" methodSignature="(Ljason/asSemantics/Message;)V" time="74" count="1" selfTime="21" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.infra.centralised.BaseRuntimeServices" methodName="getAgentsNames" methodSignature="()Ljava/util/Collection;" time="24" count="1" selfTime="12" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" time="12" count="1" selfTime="12" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="12" count="1" selfTime="12" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.runtime.RuntimeServicesFactory" methodName="get" methodSignature="()Ljason/runtime/RuntimeServices;" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.stdlib.broadcast" methodName="checkArguments" methodSignature="([Ljason/asSyntax/Term;)V" time="18" count="1" selfTime="10" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSemantics.DefaultInternalAction" methodName="checkArguments" methodSignature="([Ljason/asSyntax/Term;)V" time="8" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.stdlib.broadcast" methodName="getMinArgs" methodSignature="()I" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.stdlib.broadcast" methodName="getMaxArgs" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="java.lang.Object" methodName="toString" methodSignature="()Ljava/lang/String;" time="8" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="toString" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.lang.Boolean" methodName="valueOf" methodSignature="(Z)Ljava/lang/Boolean;" time="7" count="1" selfTime="7" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="getAgName" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="prepareBodyForEvent" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;Ljason/asSemantics/IntendedMeans;)Ljason/asSyntax/Literal;" time="201" count="1" selfTime="40" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="98" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="96" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="93" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="90" count="1" selfTime="16" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.VarTerm" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="40" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSemantics.Unifier" methodName="get" methodSignature="(Ljason/asSyntax/VarTerm;)Ljason/asSyntax/Term;" time="26" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="23" count="1" selfTime="7" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="12" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.VarTerm" methodName="calcHashCode" methodSignature="()I" time="5" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                </node>
                                <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="false" class="jason.asSyntax.VarTerm" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                                <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                              </node>
                            </node>
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isCyclicTerm" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="isLiteral" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)V" time="24" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="16" count="1" selfTime="4" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="capply" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="4" count="1" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="26" count="1" selfTime="8" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="4" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Pred" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="11" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="makeVarsAnnon" methodSignature="(Ljason/asSemantics/Unifier;)Ljason/asSyntax/Literal;" time="9" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.asSemantics.Unifier" methodName="&lt;init&gt;" methodSignature="()V" time="10" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.HashMap" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Unifier" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="6" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Literal" methodName="forceFullLiteralImpl" methodSignature="()Ljason/asSyntax/Literal;" time="5" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="isAtom" methodSignature="()Z" time="5" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="isAtom" methodSignature="()Z" time="4" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="isAtom" methodSignature="()Z" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                          </node>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node leaf="true" class="jason.runtime.Settings" methodName="isTROon" methodSignature="()Z" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Pred" methodName="hasSource" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.stdlib.foreach" methodName="prepareArguments" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Unifier;)[Ljason/asSyntax/Term;" time="82" count="2" selfTime="13" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Literal" methodName="getTermsArray" methodSignature="()[Ljason/asSyntax/Term;" time="69" count="2" selfTime="30" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.List" methodName="toArray" methodSignature="([Ljava/lang/Object;)[Ljava/lang/Object;" time="33" count="2" selfTime="33" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" time="6" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="removeActionReQueue" methodSignature="(Ljason/asSemantics/Intention;)V" time="54" count="3" selfTime="8" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)V" time="25" count="3" selfTime="7" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="13" count="3" selfTime="13" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="4" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="removeCurrentStep" methodSignature="()Ljason/asSyntax/Term;" time="11" count="3" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="4" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="5" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="5" count="3" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="checkHardDeadline" methodSignature="(Ljason/asSemantics/Event;)V" time="46" count="1" selfTime="9" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="getAnnot" methodSignature="(Ljava/lang/String;)Ljason/asSyntax/Literal;" time="35" count="1" selfTime="17" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.lang.String" methodName="compareTo" methodSignature="(Ljava/lang/String;)I" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="3" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="next" methodSignature="()Ljason/asSyntax/Term;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.ListTermImpl$3" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="true" class="jason.asSemantics.Event" methodName="getTrigger" methodSignature="()Ljason/asSyntax/Trigger;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addAchvGoal" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Intention;)Ljason/asSemantics/Event;" time="40" count="1" selfTime="16" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addEvent" methodSignature="(Ljason/asSemantics/Event;)V" time="12" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="5" count="1" selfTime="5" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSemantics.Event" methodName="isAtomic" methodSignature="()Z" time="4" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" time="9" count="1" selfTime="5" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Trigger" methodName="setTrigOp" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSemantics.Event" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSemantics/Intention;)V" time="3" count="1" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="23" count="7" selfTime="19" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="11" count="7" selfTime="7" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="11" count="8" selfTime="4" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.ActionExec" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;Ljason/asSemantics/Intention;)V" time="9" count="2" selfTime="9" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.InternalActionLiteral" methodName="getIA" methodSignature="(Ljason/asSemantics/Agent;)Ljason/asSemantics/InternalAction;" time="9" count="4" selfTime="9" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.lang.Boolean" methodName="booleanValue" methodSignature="()Z" time="9" count="4" selfTime="9" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isPlanBody" methodSignature="()Z" time="4" count="7" selfTime="4" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.DefaultInternalAction" methodName="suspendIntention" methodSignature="()Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyType" methodSignature="()Ljason/asSyntax/PlanBody$BodyType;" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getCurrentStep" methodSignature="()Ljason/asSyntax/PlanBody;" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.stdlib.wait" methodName="suspendIntention" methodSignature="()Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyProcAct" methodSignature="()V" time="385" count="9" selfTime="68" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyClrInt" methodSignature="(Ljason/asSemantics/Intention;)V" time="168" count="2" selfTime="55" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="joinRenamedVarsIntoIntentionUnifier" methodSignature="(Ljason/asSemantics/IntendedMeans;Ljason/asSemantics/Unifier;)V" time="37" count="2" selfTime="12" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Map" methodName="keySet" methodSignature="()Ljava/util/Set;" time="12" count="2" selfTime="12" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="11" count="2" selfTime="11" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="pop" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="20" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="pop" methodSignature="()Ljava/lang/Object;" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="14" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="10" count="6" selfTime="10" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="8" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="removeCurrentStep" methodSignature="()Ljason/asSyntax/Term;" time="7" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyNext" methodSignature="()Ljason/asSyntax/PlanBody;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSemantics.IntendedMeans" methodName="getTrigger" methodSignature="()Ljason/asSyntax/Trigger;" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="6" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="isMetaEvent" methodSignature="()Z" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="hasGoalListener" methodSignature="()Z" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="isAddition" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Trigger" methodName="isGoal" methodSignature="()Z" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="removeActionReQueue" methodSignature="(Ljason/asSemantics/Intention;)V" time="57" count="2" selfTime="16" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addRunningIntention" methodSignature="(Ljason/asSemantics/Intention;)V" time="17" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="offer" methodSignature="(Ljava/lang/Object;)Z" time="8" count="2" selfTime="8" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="removeCurrentStep" methodSignature="()Ljason/asSyntax/Term;" time="14" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="7" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="getBodyTerm" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" time="32" count="9" selfTime="15" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="9" count="9" selfTime="9" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Queue" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="4" count="2" selfTime="4" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Intention" methodName="isSuspended" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="removePendingAction" methodSignature="(I)Ljason/asSemantics/ActionExec;" time="32" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="21" count="2" selfTime="21" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Agent" methodName="selectAction" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/ActionExec;" time="22" count="2" selfTime="6" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="9" count="2" selfTime="9" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="7" count="2" selfTime="7" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getIntention" methodSignature="()Ljason/asSemantics/Intention;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getFeedbackActions" methodSignature="()Ljava/util/Queue;" time="2" count="4" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Intention" methodName="getId" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySelInt" methodSignature="()V" time="85" count="9" selfTime="39" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.Agent" methodName="selectIntention" methodSignature="(Ljava/util/Queue;)Ljason/asSemantics/Intention;" time="25" count="7" selfTime="7" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="18" count="7" selfTime="18" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="()Z" time="10" count="9" selfTime="5" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="5" count="9" selfTime="5" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="removeAtomicIntention" methodSignature="()Ljason/asSemantics/Intention;" time="5" count="9" selfTime="5" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getRunningIntentions" methodSignature="()Ljava/util/Queue;" time="3" count="7" selfTime="3" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="7" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Circumstance" methodName="isAtomicIntentionSuspended" methodSignature="()Z" time="1" count="9" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyClrInt" methodSignature="(Ljason/asSemantics/Intention;)V" time="30" count="6" selfTime="10" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.Intention" methodName="isFinished" methodSignature="()Z" time="8" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.IntendedMeans" methodName="isFinished" methodSignature="()Z" time="7" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.PlanBodyImpl" methodName="isEmptyBody" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Intention" methodName="peek" methodSignature="()Ljason/asSemantics/IntendedMeans;" time="5" count="6" selfTime="1" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Deque" methodName="peek" methodSignature="()Ljava/lang/Object;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="act" methodSignature="(Ljason/asSemantics/ActionExec;)V" time="588" count="2" selfTime="8" lineNumber="-1" percent="0.2">
            <node leaf="false" class="jason.infra.centralised.CentralisedEnvironment" methodName="act" methodSignature="(Ljava/lang/String;Ljason/asSemantics/ActionExec;)V" time="580" count="2" selfTime="9" lineNumber="-1" percent="0.2">
              <node leaf="false" class="jason.environment.Environment" methodName="scheduleAction" methodSignature="(Ljava/lang/String;Ljason/asSyntax/Structure;Ljava/lang/Object;)V" time="570" count="2" selfTime="10" lineNumber="-1" percent="0.2">
                <node leaf="true" class="java.util.concurrent.ExecutorService" methodName="execute" methodSignature="(Ljava/lang/Runnable;)V" time="551" count="2" selfTime="551" lineNumber="-1" percent="0.2"/>
                <node leaf="true" class="jason.environment.Environment$1" methodName="&lt;init&gt;" methodSignature="(Ljason/environment/Environment;Ljava/lang/String;Ljason/asSyntax/Structure;Ljava/lang/Object;)V" time="9" count="2" selfTime="9" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getActionTerm" methodSignature="()Ljason/asSyntax/Structure;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
          </node>
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addPendingAction" methodSignature="(Ljason/asSemantics/ActionExec;)V" time="47" count="2" selfTime="21" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="11" count="2" selfTime="11" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.lang.Integer" methodName="valueOf" methodSignature="(I)Ljava/lang/Integer;" time="6" count="2" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getIntention" methodSignature="()Ljason/asSemantics/Intention;" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getActionTerm" methodSignature="()Ljason/asSyntax/Structure;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="getId" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="isAtomic" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="setSuspendedReason" methodSignature="(Ljason/asSyntax/Term;)V" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="19" count="24" selfTime="14" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="5" count="24" selfTime="5" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetAct" methodSignature="()V" time="8" count="9" selfTime="8" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getAction" methodSignature="()Ljason/asSemantics/ActionExec;" time="3" count="9" selfTime="3" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="3" count="22" selfTime="3" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="canSleepAct" methodSignature="()Z" time="221" count="12" selfTime="30" lineNumber="-1" percent="0.1">
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" time="169" count="7" selfTime="30" lineNumber="-1" percent="0.1">
            <node leaf="true" class="java.util.Queue" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="57" count="2" selfTime="57" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="40" count="2" selfTime="40" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="31" count="2" selfTime="31" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="7" count="7" selfTime="7" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.ActionExec" methodName="getIntention" methodSignature="()Ljason/asSemantics/Intention;" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Intention" methodName="isSuspended" methodSignature="()Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="()Z" time="16" count="12" selfTime="13" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="canSleep" methodSignature="()Z" time="3" count="3" selfTime="1" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
        </node>
        <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="7" count="12" selfTime="7" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="sense" methodSignature="()V" time="5060" count="12" selfTime="52" lineNumber="-1" percent="1.9">
        <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="sense" methodSignature="()V" time="4982" count="12" selfTime="214" lineNumber="-1" percent="1.8">
          <node leaf="false" class="jason.asSemantics.Agent" methodName="buf" methodSignature="(Ljava/util/Collection;)I" time="4164" count="12" selfTime="243" lineNumber="-1" percent="1.5">
            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="add" methodSignature="(Ljason/asSyntax/Literal;)Z" time="1241" count="6" selfTime="10" lineNumber="-1" percent="0.5">
              <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="add" methodSignature="(Ljason/asSyntax/Literal;Z)Z" time="1231" count="6" selfTime="59" lineNumber="-1" percent="0.5">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="415" count="6" selfTime="59" lineNumber="-1" percent="0.2">
                  <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="307" count="6" selfTime="7" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="300" count="6" selfTime="117" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="107" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="101" count="6" selfTime="65" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="6" count="18" selfTime="6" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="java.lang.String" methodName="compareTo" methodSignature="(Ljava/lang/String;)I" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isNumeric" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="4" count="18" selfTime="4" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal" methodName="getArity" methodSignature="()I" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="12" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="compareTo" methodSignature="(Ljava/lang/String;)I" time="19" count="6" selfTime="19" lineNumber="-1" percent="0.0"/>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="16" count="12" selfTime="15" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="12" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="14" count="12" selfTime="9" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isList" methodSignature="()Z" time="5" count="18" selfTime="5" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isNumeric" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Literal" methodName="negated" methodSignature="()Z" time="4" count="18" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="12" selfTime="2" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="22" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="19" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="16" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="9" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="14" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="10" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="7" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Pred" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" time="295" count="6" selfTime="5" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="290" count="6" selfTime="6" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="284" count="6" selfTime="11" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="272" count="6" selfTime="7" lineNumber="-1" percent="0.1">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="263" count="6" selfTime="28" lineNumber="-1" percent="0.1">
                          <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="cloneLT" methodSignature="()Ljason/asSyntax/ListTerm;" time="127" count="6" selfTime="10" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="117" count="6" selfTime="25" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="49" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/ListTerm;" time="44" count="6" selfTime="15" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="29" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="23" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="18" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="15" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="38" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="29" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="22" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="19" count="6" selfTime="10" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                                      </node>
                                    </node>
                                  </node>
                                </node>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Pred$1" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                            </node>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="88" count="6" selfTime="18" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="21" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                              </node>
                              <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="13" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="12" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithExpr;)V" time="11" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithFunctionTerm;)V" time="11" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="10" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="8" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="2" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                          </node>
                                        </node>
                                        <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                      </node>
                                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                  </node>
                                </node>
                              </node>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="11" count="8" selfTime="7" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="9" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                            </node>
                            <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                            <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="false" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="17" count="6" selfTime="13" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="isEmpty" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Pred" methodName="getAnnots" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="provideBelEntry" methodSignature="(Ljason/asSyntax/Literal;)Ljason/bb/DefaultBeliefBase$BelEntry;" time="187" count="6" selfTime="16" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;)V" time="75" count="4" selfTime="36" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.concurrent.LinkedBlockingDeque" methodName="&lt;init&gt;" methodSignature="()V" time="33" count="4" selfTime="33" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.util.concurrent.ConcurrentHashMap" methodName="&lt;init&gt;" methodSignature="()V" time="6" count="4" selfTime="6" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="52" count="10" selfTime="20" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="23" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="19" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="7" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="23" count="6" selfTime="11" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="11" count="2" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="3" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="17" count="4" selfTime="17" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="contains" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSyntax/Literal;" time="139" count="6" selfTime="24" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="71" count="6" selfTime="30" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="30" count="6" selfTime="11" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="19" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="7" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="5" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="25" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="14" count="2" selfTime="9" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="contains" methodSignature="(Ljason/asSyntax/Literal;)Ljason/asSyntax/Literal;" time="18" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="15" count="2" selfTime="10" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="5" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="3" count="2" selfTime="1" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="add" methodSignature="(Ljason/asSyntax/Literal;Z)V" time="108" count="6" selfTime="13" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Deque" methodName="addFirst" methodSignature="(Ljava/lang/Object;)V" time="48" count="6" selfTime="48" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="java.util.Map" methodName="put" methodSignature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" time="44" count="6" selfTime="32" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="12" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="java.util.Set" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="25" count="6" selfTime="20" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="6" selfTime="3" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="canBeAddedInBB" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="java.util.Iterator" methodName="remove" methodSignature="()V" time="611" count="5" selfTime="12" lineNumber="-1" percent="0.2">
              <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="remove" methodSignature="()V" time="599" count="5" selfTime="30" lineNumber="-1" percent="0.2">
                <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="removeFromEntry" methodSignature="(Ljason/asSyntax/Literal;)Z" time="433" count="5" selfTime="57" lineNumber="-1" percent="0.2">
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="remove" methodSignature="(Ljason/asSyntax/Literal;)V" time="165" count="5" selfTime="22" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="75" count="5" selfTime="43" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="21" count="5" selfTime="11" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Pred" methodName="equalsAsStructure" methodSignature="(Ljava/lang/Object;)Z" time="10" count="5" selfTime="7" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                      <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="11" count="5" selfTime="6" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="false" class="java.util.Deque" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="59" count="5" selfTime="47" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="4" count="2" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="2" count="2" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                    <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="9" count="5" selfTime="9" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="hasSource" methodSignature="()Z" time="109" count="5" selfTime="18" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="63" count="5" selfTime="23" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="40" count="5" selfTime="18" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="22" count="5" selfTime="22" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="28" count="5" selfTime="15" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.ListTermImpl$3" methodName="hasNext" methodSignature="()Z" time="13" count="5" selfTime="11" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="53" count="5" selfTime="19" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="31" count="1" selfTime="10" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="12" count="1" selfTime="12" lineNumber="-1" percent="0.0"/>
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="7" count="1" selfTime="6" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="remove" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="20" count="4" selfTime="19" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="4" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="jason.bb.DefaultBeliefBase$BelEntry" methodName="isEmpty" methodSignature="()Z" time="17" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.Deque" methodName="isEmpty" methodSignature="()Z" time="15" count="5" selfTime="15" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="9" count="5" selfTime="9" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="false" class="jason.asSyntax.Pred" methodName="delAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="109" count="5" selfTime="21" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="88" count="5" selfTime="53" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="setValuesFrom" methodSignature="(Ljason/asSyntax/ListTerm;)V" time="22" count="5" selfTime="15" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="9" count="10" selfTime="9" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Pred" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="5" selfTime="4" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
                <node leaf="false" class="java.util.Iterator" methodName="remove" methodSignature="()V" time="27" count="5" selfTime="21" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="6" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="updateEvents" methodSignature="(Ljason/asSemantics/Event;)V" time="310" count="6" selfTime="55" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="hasCandidatePlan" methodSignature="(Ljason/asSyntax/Trigger;)Z" time="187" count="6" selfTime="7" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" time="180" count="6" selfTime="22" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="110" count="6" selfTime="35" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="28" count="6" selfTime="9" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="19" count="6" selfTime="12" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="6" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                    <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="12" count="6" selfTime="10" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Trigger$TEType$1" methodName="toString" methodSignature="()Ljava/lang/String;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="8" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Trigger$TEOperator$1" methodName="toString" methodSignature="()Ljava/lang/String;" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="false" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="31" count="6" selfTime="13" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="16" count="3" selfTime="8" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="3" count="3" selfTime="3" lineNumber="-1" percent="0.0"/>
                      <node leaf="false" class="java.lang.Object" methodName="hashCode" methodSignature="()I" time="3" count="3" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.PredicateIndicator" methodName="hashCode" methodSignature="()I" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Trigger" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="addEvent" methodSignature="(Ljason/asSemantics/Event;)V" time="45" count="3" selfTime="11" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="28" count="3" selfTime="28" lineNumber="-1" percent="0.0"/>
                <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="5" count="3" selfTime="4" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="jason.asSemantics.Event" methodName="isAtomic" methodSignature="()Z" time="1" count="3" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="12" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="6" count="6" selfTime="6" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSemantics.Event" methodName="isInternal" methodSignature="()Z" time="7" count="6" selfTime="7" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSemantics.Agent" methodName="getPL" methodSignature="()Ljason/asSyntax/PlanLibrary;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="2" count="3" selfTime="2" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="jason.asSyntax.Pred" methodName="addAnnot" methodSignature="(Ljason/asSyntax/Term;)Z" time="307" count="6" selfTime="55" lineNumber="-1" percent="0.1">
              <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="97" count="6" selfTime="11" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljava/lang/Object;" time="86" count="6" selfTime="8" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="next" methodSignature="()Ljason/asSyntax/ListTerm;" time="78" count="6" selfTime="62" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="moveNext" methodSignature="()V" time="16" count="6" selfTime="13" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getNext" methodSignature="()Ljason/asSyntax/ListTerm;" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="()V" time="43" count="6" selfTime="16" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="27" count="6" selfTime="7" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="20" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="14" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="insert" methodSignature="(Ljason/asSyntax/Term;)Ljason/asSyntax/ListTerm;" time="39" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Term;Ljason/asSyntax/Term;)V" time="33" count="6" selfTime="10" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="23" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="18" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="13" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="8" count="6" selfTime="4" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.asSyntax.ListTermImpl" methodName="listTermIterator" methodSignature="()Ljava/util/Iterator;" time="39" count="6" selfTime="11" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.ListTermImpl$2" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="28" count="6" selfTime="17" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ListTermImpl;Ljason/asSyntax/ListTerm;)V" time="11" count="6" selfTime="11" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
              <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="15" count="6" selfTime="12" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.ListTermImpl$ListTermIterator" methodName="hasNext" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="false" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljava/lang/Object;)I" time="14" count="6" selfTime="10" lineNumber="-1" percent="0.0">
                <node leaf="true" class="jason.asSyntax.Atom" methodName="compareTo" methodSignature="(Ljason/asSyntax/Term;)I" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
              </node>
              <node leaf="true" class="jason.asSyntax.ListTermImpl" methodName="getTerm" methodSignature="()Ljason/asSyntax/Term;" time="5" count="6" selfTime="5" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="java.util.Set" methodName="remove" methodSignature="(Ljava/lang/Object;)Z" time="306" count="15" selfTime="52" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="231" count="10" selfTime="7" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="equalsAsStructure" methodSignature="(Ljava/lang/Object;)Z" time="224" count="10" selfTime="11" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="213" count="10" selfTime="107" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Atom" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="44" count="10" selfTime="19" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="7" count="16" selfTime="7" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="7" count="8" selfTime="7" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="5" count="16" selfTime="5" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Atom" methodName="isAtom" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                      <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="21" count="20" selfTime="12" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="9" count="20" selfTime="9" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="17" count="20" selfTime="8" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="9" count="20" selfTime="9" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="java.lang.String" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="8" count="10" selfTime="8" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="5" count="20" selfTime="5" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="4" count="20" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.Literal$DefaultNameSpace" methodName="equals" methodSignature="(Ljava/lang/Object;)Z" time="4" count="10" selfTime="4" lineNumber="-1" percent="0.0"/>
                    <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="3" count="10" selfTime="3" lineNumber="-1" percent="0.0"/>
                  </node>
                </node>
              </node>
              <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="23" count="15" selfTime="9" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="14" count="15" selfTime="8" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="6" count="15" selfTime="6" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="hasCandidatePlan" methodSignature="(Ljason/asSyntax/Trigger;)Z" time="267" count="5" selfTime="12" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.PlanLibrary" methodName="getCandidatePlans" methodSignature="(Ljason/asSyntax/Trigger;)Ljava/util/List;" time="255" count="5" selfTime="55" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.Trigger" methodName="getPredicateIndicator" methodSignature="()Ljason/asSyntax/PredicateIndicator;" time="167" count="5" selfTime="61" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;I)V" time="30" count="5" selfTime="12" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.PredicateIndicator" methodName="calcHash" methodSignature="()I" time="18" count="5" selfTime="11" lineNumber="-1" percent="0.0">
                      <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="5" count="5" selfTime="2" lineNumber="-1" percent="0.0">
                        <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="java.lang.String" methodName="hashCode" methodSignature="()I" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                  <node leaf="false" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/Object;)Ljava/lang/StringBuilder;" time="26" count="5" selfTime="19" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="jason.asSyntax.Trigger$TEType$1" methodName="toString" methodSignature="()Ljava/lang/String;" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="append" methodSignature="(Ljava/lang/String;)Ljava/lang/StringBuilder;" time="15" count="10" selfTime="15" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="&lt;init&gt;" methodSignature="()V" time="11" count="5" selfTime="11" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Trigger$TEOperator$2" methodName="toString" methodSignature="()Ljava/lang/String;" time="8" count="5" selfTime="8" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="java.lang.StringBuilder" methodName="toString" methodSignature="()Ljava/lang/String;" time="7" count="5" selfTime="7" lineNumber="-1" percent="0.0"/>
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="6" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                    <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="5" selfTime="2" lineNumber="-1" percent="0.0"/>
                  <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                </node>
                <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="20" count="5" selfTime="20" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="10" count="5" selfTime="10" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="isVar" methodSignature="()Z" time="2" count="10" selfTime="2" lineNumber="-1" percent="0.0"/>
                <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.Literal" methodName="copy" methodSignature="()Ljason/asSyntax/Literal;" time="204" count="6" selfTime="14" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="190" count="6" selfTime="16" lineNumber="-1" percent="0.1">
                <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="174" count="6" selfTime="17" lineNumber="-1" percent="0.1">
                  <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="154" count="6" selfTime="16" lineNumber="-1" percent="0.1">
                    <node leaf="false" class="jason.asSyntax.Pred" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="136" count="6" selfTime="10" lineNumber="-1" percent="0.1">
                      <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="122" count="6" selfTime="33" lineNumber="-1" percent="0.0">
                        <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="38" count="6" selfTime="12" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="24" count="6" selfTime="20" lineNumber="-1" percent="0.0">
                            <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                          </node>
                          <node leaf="true" class="jason.asSyntax.Atom" methodName="getFunctor" methodSignature="()Ljava/lang/String;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="19" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                          <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="17" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                            <node leaf="false" class="jason.asSyntax.ArithExpr" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithExpr;)V" time="16" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                              <node leaf="false" class="jason.asSyntax.ArithFunctionTerm" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/ArithFunctionTerm;)V" time="15" count="1" selfTime="2" lineNumber="-1" percent="0.0">
                                <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="13" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                  <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="12" count="1" selfTime="3" lineNumber="-1" percent="0.0">
                                    <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljason/asSyntax/Literal;)V" time="3" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="2" count="1" selfTime="1" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="1" count="1" selfTime="0" lineNumber="-1" percent="0.0">
                                      <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    </node>
                                    <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                    <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
                                  </node>
                                </node>
                              </node>
                            </node>
                          </node>
                        </node>
                        <node leaf="false" class="jason.asSyntax.Structure" methodName="getTerm" methodSignature="(I)Ljason/asSyntax/Term;" time="9" count="8" selfTime="8" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="java.util.List" methodName="get" methodSignature="(I)Ljava/lang/Object;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="8" count="6" selfTime="8" lineNumber="-1" percent="0.0"/>
                        <node leaf="false" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="6" count="5" selfTime="5" lineNumber="-1" percent="0.0">
                          <node leaf="true" class="jason.asSyntax.NumberTermImpl" methodName="clone" methodSignature="()Ljason/asSyntax/NumberTerm;" time="1" count="5" selfTime="1" lineNumber="-1" percent="0.0"/>
                        </node>
                        <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="java.util.List" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
                        <node leaf="true" class="jason.asSyntax.Atom" methodName="clone" methodSignature="()Ljason/asSyntax/Term;" time="1" count="2" selfTime="1" lineNumber="-1" percent="0.0"/>
                      </node>
                      <node leaf="true" class="jason.asSyntax.Pred" methodName="hasAnnot" methodSignature="()Z" time="4" count="6" selfTime="4" lineNumber="-1" percent="0.0"/>
                    </node>
                    <node leaf="true" class="jason.asSyntax.Atom" methodName="getNS" methodSignature="()Ljason/asSyntax/Atom;" time="2" count="6" selfTime="2" lineNumber="-1" percent="0.0"/>
                  </node>
                  <node leaf="true" class="jason.asSyntax.LiteralImpl" methodName="negated" methodSignature="()Z" time="3" count="6" selfTime="3" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.Trigger" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;Ljason/asSyntax/Trigger$TEType;Ljason/asSyntax/Literal;)V" time="191" count="11" selfTime="82" lineNumber="-1" percent="0.1">
              <node leaf="false" class="jason.asSyntax.Structure" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;I)V" time="93" count="11" selfTime="22" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljava/lang/String;)V" time="71" count="11" selfTime="16" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Atom" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Atom;Ljava/lang/String;)V" time="55" count="11" selfTime="18" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Literal" methodName="&lt;init&gt;" methodSignature="()V" time="37" count="11" selfTime="28" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="&lt;init&gt;" methodSignature="()V" time="9" count="11" selfTime="9" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
              </node>
              <node leaf="true" class="jason.asSyntax.Trigger" methodName="setTrigOp" methodSignature="(Ljason/asSyntax/Trigger$TEOperator;)V" time="10" count="11" selfTime="10" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="setSrcInfo" methodSignature="(Ljason/asSyntax/SourceInfo;)V" time="4" count="11" selfTime="4" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.asSyntax.DefaultTerm" methodName="getSrcInfo" methodSignature="()Ljason/asSyntax/SourceInfo;" time="2" count="11" selfTime="2" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="java.util.Set" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="89" count="16" selfTime="38" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.bb.StructureWrapperForLiteral" methodName="hashCode" methodSignature="()I" time="51" count="16" selfTime="37" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.DefaultTerm" methodName="hashCode" methodSignature="()I" time="14" count="16" selfTime="10" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.lang.Integer" methodName="intValue" methodSignature="()I" time="4" count="16" selfTime="4" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="jason.bb.DefaultBeliefBase" methodName="getPercepts" methodSignature="()Ljava/util/Iterator;" time="86" count="2" selfTime="18" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="48" count="2" selfTime="48" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="jason.bb.DefaultBeliefBase$1" methodName="&lt;init&gt;" methodSignature="(Ljason/bb/DefaultBeliefBase;Ljava/util/Iterator;)V" time="20" count="2" selfTime="20" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="false" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="70" count="37" selfTime="32" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="next" methodSignature="()Ljava/lang/Object;" time="38" count="15" selfTime="13" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="next" methodSignature="()Ljason/asSyntax/Literal;" time="25" count="15" selfTime="14" lineNumber="-1" percent="0.0">
                  <node leaf="true" class="java.util.Iterator" methodName="next" methodSignature="()Ljava/lang/Object;" time="11" count="15" selfTime="11" lineNumber="-1" percent="0.0"/>
                </node>
              </node>
            </node>
            <node leaf="false" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="66" count="43" selfTime="36" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.bb.DefaultBeliefBase$1" methodName="hasNext" methodSignature="()Z" time="30" count="17" selfTime="18" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Iterator" methodName="hasNext" methodSignature="()Z" time="12" count="17" selfTime="12" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
            <node leaf="false" class="jason.asSyntax.Literal" methodName="forceFullLiteralImpl" methodSignature="()Ljason/asSyntax/Literal;" time="42" count="6" selfTime="13" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSyntax.LiteralImpl" methodName="isAtom" methodSignature="()Z" time="29" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                <node leaf="false" class="jason.asSyntax.Pred" methodName="isAtom" methodSignature="()Z" time="24" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                  <node leaf="false" class="jason.asSyntax.Structure" methodName="isAtom" methodSignature="()Z" time="18" count="6" selfTime="6" lineNumber="-1" percent="0.0">
                    <node leaf="false" class="jason.asSyntax.Structure" methodName="hasTerm" methodSignature="()Z" time="12" count="6" selfTime="5" lineNumber="-1" percent="0.0">
                      <node leaf="true" class="jason.asSyntax.Structure" methodName="getArity" methodSignature="()I" time="7" count="6" selfTime="7" lineNumber="-1" percent="0.0"/>
                    </node>
                  </node>
                </node>
              </node>
            </node>
            <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Literal;)V" time="32" count="31" selfTime="32" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Event" methodName="&lt;init&gt;" methodSignature="(Ljason/asSyntax/Trigger;Ljason/asSemantics/Intention;)V" time="28" count="6" selfTime="28" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.Set" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="20" count="2" selfTime="20" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.HashSet" methodName="&lt;init&gt;" methodSignature="()V" time="13" count="2" selfTime="13" lineNumber="-1" percent="0.0"/>
            <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasListener" methodSignature="()Z" time="12" count="5" selfTime="4" lineNumber="-1" percent="0.0">
              <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="8" count="5" selfTime="8" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="java.util.Collection" methodName="iterator" methodSignature="()Ljava/util/Iterator;" time="11" count="2" selfTime="11" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.Agent" methodName="getBB" methodSignature="()Ljason/bb/BeliefBase;" time="8" count="8" selfTime="8" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getC" methodSignature="()Ljason/asSemantics/Circumstance;" time="3" count="5" selfTime="3" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.asSyntax.Literal" methodName="subjectToBUF" methodSignature="()Z" time="3" count="15" selfTime="3" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.bb.StructureWrapperForLiteral" methodName="getLiteral" methodSignature="()Ljason/asSyntax/Literal;" time="1" count="6" selfTime="1" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="perceive" methodSignature="()Ljava/util/Collection;" time="342" count="12" selfTime="80" lineNumber="-1" percent="0.1">
            <node leaf="false" class="jason.environment.Environment" methodName="getPercepts" methodSignature="(Ljava/lang/String;)Ljava/util/Collection;" time="231" count="12" selfTime="38" lineNumber="-1" percent="0.1">
              <node leaf="true" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="85" count="12" selfTime="85" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.Set" methodName="add" methodSignature="(Ljava/lang/Object;)Z" time="34" count="2" selfTime="34" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.Collection" methodName="addAll" methodSignature="(Ljava/util/Collection;)Z" time="27" count="2" selfTime="27" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.Map" methodName="get" methodSignature="(Ljava/lang/Object;)Ljava/lang/Object;" time="19" count="2" selfTime="19" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.List" methodName="size" methodSignature="()I" time="14" count="2" selfTime="14" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.ArrayList" methodName="&lt;init&gt;" methodSignature="(I)V" time="11" count="2" selfTime="11" lineNumber="-1" percent="0.0"/>
              <node leaf="true" class="java.util.List" methodName="isEmpty" methodSignature="()Z" time="3" count="2" selfTime="3" lineNumber="-1" percent="0.0"/>
            </node>
            <node leaf="true" class="jason.architecture.AgArch" methodName="perceive" methodSignature="()Ljava/util/Collection;" time="12" count="12" selfTime="12" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="9" count="12" selfTime="9" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="getAgName" methodSignature="()Ljava/lang/String;" time="6" count="12" selfTime="6" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.infra.centralised.CentralisedEnvironment" methodName="getUserEnvironment" methodSignature="()Ljason/environment/Environment;" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applySemanticRuleSense" methodSignature="()V" time="99" count="12" selfTime="30" lineNumber="-1" percent="0.0">
            <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="applyProcMsg" methodSignature="()V" time="69" count="12" selfTime="28" lineNumber="-1" percent="0.0">
              <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasMsg" methodSignature="()Z" time="41" count="12" selfTime="11" lineNumber="-1" percent="0.0">
                <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="30" count="12" selfTime="30" lineNumber="-1" percent="0.0"/>
              </node>
            </node>
          </node>
          <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="checkMail" methodSignature="()V" time="89" count="12" selfTime="39" lineNumber="-1" percent="0.0">
            <node leaf="true" class="java.util.Queue" methodName="poll" methodSignature="()Ljava/lang/Object;" time="47" count="12" selfTime="47" lineNumber="-1" percent="0.0"/>
            <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="3" count="12" selfTime="3" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="java.util.logging.Logger" methodName="isLoggable" methodSignature="(Ljava/util/logging/Level;)Z" time="39" count="12" selfTime="39" lineNumber="-1" percent="0.0"/>
          <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="28" count="24" selfTime="22" lineNumber="-1" percent="0.0">
            <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="6" count="24" selfTime="6" lineNumber="-1" percent="0.0"/>
          </node>
          <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetSense" methodSignature="()V" time="4" count="12" selfTime="4" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.runtime.Settings" methodName="nrcbp" methodSignature="()I" time="2" count="12" selfTime="2" lineNumber="-1" percent="0.0"/>
          <node leaf="true" class="jason.asSyntax.PlanLibrary" methodName="hasJagPlans" methodSignature="()Z" time="1" count="12" selfTime="1" lineNumber="-1" percent="0.0"/>
        </node>
        <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="26" count="12" selfTime="26" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="57" count="24" selfTime="57" lineNumber="-1" percent="0.0"/>
      <node leaf="true" class="jason.architecture.AgArch" methodName="reasoningCycleFinished" methodSignature="()V" time="5" count="12" selfTime="5" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasMsg" methodSignature="()Z" time="214" count="4" selfTime="140" lineNumber="-1" percent="0.1">
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="74" count="4" selfTime="74" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="sleep" methodSignature="()V" time="164" count="8" selfTime="76" lineNumber="-1" percent="0.1">
      <node leaf="true" class="java.lang.Object" methodName="wait" methodSignature="(J)V" time="80" count="8" selfTime="80" lineNumber="-1" percent="0.0"/>
      <node leaf="true" class="jason.architecture.AgArch" methodName="getTS" methodSignature="()Ljason/asSemantics/TransitionSystem;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
      <node leaf="true" class="jason.runtime.Settings" methodName="isSync" methodSignature="()Z" time="3" count="8" selfTime="3" lineNumber="-1" percent="0.0"/>
      <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getSettings" methodSignature="()Ljason/runtime/Settings;" time="1" count="8" selfTime="1" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="canSleep" methodSignature="()Z" time="136" count="12" selfTime="59" lineNumber="-1" percent="0.1">
      <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" time="20" count="12" selfTime="12" lineNumber="-1" percent="0.0">
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="8" count="12" selfTime="8" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.infra.centralised.CentralisedAgArch" methodName="canSleep" methodSignature="()Z" time="12" count="8" selfTime="6" lineNumber="-1" percent="0.0">
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
        <node leaf="true" class="jason.infra.centralised.CentralisedAgArch" methodName="isRunning" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="jason.asSemantics.Circumstance" methodName="isAtomicIntentionSuspended" methodSignature="()Z" time="11" count="12" selfTime="11" lineNumber="-1" percent="0.0"/>
      <node leaf="false" class="jason.asSemantics.TransitionSystem" methodName="getAgArch" methodSignature="()Ljason/architecture/AgArch;" time="10" count="8" selfTime="6" lineNumber="-1" percent="0.0">
        <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="4" count="8" selfTime="4" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="()Z" time="9" count="11" selfTime="3" lineNumber="-1" percent="0.0">
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="6" count="11" selfTime="6" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasMsg" methodSignature="()Z" time="8" count="8" selfTime="6" lineNumber="-1" percent="0.0">
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" time="5" count="8" selfTime="3" lineNumber="-1" percent="0.0">
        <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
      </node>
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="2" count="8" selfTime="2" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.environment.Environment" methodName="getPercepts" methodSignature="(Ljava/lang/String;)Ljava/util/Collection;" time="87" count="1" selfTime="22" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.util.Set" methodName="contains" methodSignature="(Ljava/lang/Object;)Z" time="65" count="1" selfTime="65" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="true" class="jason.runtime.Settings" methodName="isSync" methodSignature="()Z" time="71" count="15" selfTime="71" lineNumber="-1" percent="0.0"/>
    <node leaf="false" class="jason.architecture.AgArch" methodName="incCycleNumber" methodSignature="()V" time="50" count="13" selfTime="36" lineNumber="-1" percent="0.0">
      <node leaf="true" class="jason.architecture.AgArch" methodName="setCycleNumber" methodSignature="(I)V" time="14" count="13" selfTime="14" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasEvent" methodSignature="()Z" time="44" count="4" selfTime="37" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="7" count="4" selfTime="7" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetSense" methodSignature="()V" time="40" count="2" selfTime="40" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.TransitionSystem" methodName="getSettings" methodSignature="()Ljason/runtime/Settings;" time="30" count="13" selfTime="30" lineNumber="-1" percent="0.0"/>
    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasRunningIntention" methodSignature="()Z" time="28" count="5" selfTime="22" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="6" count="5" selfTime="6" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="false" class="jason.asSemantics.Circumstance" methodName="hasFeedbackAction" methodSignature="()Z" time="22" count="5" selfTime="16" lineNumber="-1" percent="0.0">
      <node leaf="true" class="java.util.Queue" methodName="isEmpty" methodSignature="()Z" time="6" count="5" selfTime="6" lineNumber="-1" percent="0.0"/>
    </node>
    <node leaf="true" class="jason.infra.centralised.CentralisedEnvironment" methodName="getUserEnvironment" methodSignature="()Ljason/environment/Environment;" time="16" count="1" selfTime="16" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSyntax.PlanLibrary" methodName="hasJagPlans" methodSignature="()Z" time="15" count="1" selfTime="15" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.architecture.AgArch" methodName="getFirstAgArch" methodSignature="()Ljason/architecture/AgArch;" time="11" count="13" selfTime="11" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Agent" methodName="buf" methodSignature="(Ljava/util/Collection;)I" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.runtime.Settings" methodName="nrcbp" methodSignature="()I" time="10" count="1" selfTime="10" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedEvent" methodSignature="()Ljason/asSemantics/Event;" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getSelectedIntention" methodSignature="()Ljason/asSemantics/Intention;" time="5" count="2" selfTime="5" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="isAtomicIntentionSuspended" methodSignature="()Z" time="4" count="3" selfTime="4" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="getAction" methodSignature="()Ljason/asSemantics/ActionExec;" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="resetAct" methodSignature="()V" time="2" count="1" selfTime="2" lineNumber="-1" percent="0.0"/>
    <node leaf="true" class="jason.asSemantics.Circumstance" methodName="removeAtomicIntention" methodSignature="()Ljason/asSemantics/Intention;" time="1" count="1" selfTime="1" lineNumber="-1" percent="0.0"/>
  </node>
</tree>